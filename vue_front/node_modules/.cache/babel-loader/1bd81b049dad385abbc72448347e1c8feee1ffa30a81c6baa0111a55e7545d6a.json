{"ast":null,"code":"import \"core-js/modules/web.url-search-params.size.js\";\nimport gnbBar from '../components/gnbBar.vue';\nimport axios from 'axios';\naxios.defaults.baseURL = 'http://localhost:3000';\naxios.defaults.headers.post['Content-Type'] = 'application/json;charset=utf-8';\naxios.defaults.headers.post['Access-Control-Allow-Origin'] = '*';\nexport default {\n  components: {\n    gnbBar\n  },\n  data() {\n    return {\n      email: '',\n      password: '',\n      password2: '',\n      nickname: '',\n      phone_num: '',\n      image: '',\n      provider: '',\n      imageUploaded: null,\n      type: false,\n      password_check: false,\n      password_check2: false,\n      nickname_check: false,\n      phone_check: false,\n      error_border_check: false,\n      allcheck: false,\n      allcheck1: false,\n      allcheck2: false,\n      allcheck3: false,\n      allcheck4: false,\n      allcheck5: false,\n      allcheck6: false,\n      allcheck7: false,\n      emailcheck: 3,\n      nicknamecheck: 3\n    };\n  },\n  watch: {\n    'password': function () {\n      this.funcWatch();\n    },\n    'password2': function () {\n      this.funcWatch();\n    },\n    'nickname': function () {\n      this.funcWatch();\n    },\n    'phone_num': function () {\n      this.funcWatch();\n    }\n  },\n  mounted() {\n    this.email = localStorage.getItem(\"userID\"), this.nickname = localStorage.getItem(\"userNick\"), this.image = localStorage.getItem(\"userImage\"), this.provider = localStorage.getItem(\"userProvider\");\n    this.userData();\n  },\n  methods: {\n    userData() {\n      axios({\n        url: '/profile/pullUserData',\n        method: 'POST',\n        data: {\n          email: this.email\n        }\n      }).then(res => {\n        this.phone_num = res.data.phone;\n      }).catch(err => {\n        console.error(err);\n      });\n    },\n    funcWatch() {\n      this.checkPassword();\n      this.checkPassword2();\n      this.checknickname();\n      this.checkphone();\n      this.inputAllCheck();\n      this.nicknameCheckForm();\n      console.log(this.allcheck);\n    },\n    movetoMypage() {\n      window.location.href = '/mypage';\n    },\n    checkPassword() {\n      // 최소 8자리 이상 영문 대소문자, 숫자, 특수문자가 각각 1개 이상\n      const validatePassword = /^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$ %^&*-]).{8,}$/;\n      if (this.password === '' || !validatePassword.test(this.password) || !this.password) {\n        this.password_check = true;\n        this.error_border_check = true;\n      } else {\n        this.password_check = false;\n        this.error_border_check = false;\n      }\n    },\n    checkPassword2() {\n      if (this.password !== this.password2) {\n        this.password_check2 = true;\n        this.error_border_check = true;\n      } else {\n        this.password_check2 = false;\n        this.error_border_check = false;\n      }\n    },\n    checknickname() {\n      const validateNickname = /^.{1,10}$/;\n      if (!this.nickname || !validateNickname.test(this.nickname)) {\n        this.nickname_check2 = true;\n        this.error_border_check = true;\n      } else {\n        this.nickname_check2 = false;\n        this.error_border_check = false;\n      }\n    },\n    checkphone() {\n      const validatephone = /^\\d{3}\\d{3,4}\\d{4}$/;\n      if (this.phone_num === '' || !validatephone.test(this.phone_num) || !this.phone_num) {\n        this.phone_check = true;\n        this.error_border_check = true;\n      } else {\n        this.phone_check = false;\n        this.error_border_check = false;\n      }\n    },\n    inputAllCheck() {\n      if (this.allcheck2 || this.allcheck3 || this.allcheck4 || this.allcheck7) {\n        //하나라도 입력조건이 안맞을시\n        this.allcheck = false; //버튼 비활성\n      } else {\n        this.allcheck = false;\n      }\n    },\n    emailCheckForm() {\n      axios({\n        url: \"http://localhost:3000/auth/checkemail\",\n        method: \"POST\",\n        data: {\n          email: this.email\n        }\n      }).then(async res => {\n        const validateEmail = /^[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*.[a-zA-Z]{2,3}$/i;\n        if (res.data.message == '사용가능한 이메일입니다.' && validateEmail.test(this.email)) {\n          this.emailcheck = 2;\n        } else if (res.data.message == '존재하는 이메일입니다.') {\n          this.emailcheck = 1;\n          console.log(this.allcheck);\n        } else if (!this.email) {\n          this.emailcheck = 3;\n        }\n        console.log(this.emailcheck);\n      }).catch(error => {\n        alert(error);\n      });\n    },\n    nicknameCheckForm() {\n      axios({\n        url: \"http://localhost:3000/auth/checknick\",\n        method: \"POST\",\n        data: {\n          nickname: this.nickname\n        }\n      }).then(async res => {\n        if (res.data.message == '사용가능한 닉네임입니다.' && this.nickname) {\n          console.log(res.data.message);\n          this.nicknamecheck = 2;\n        } else if (res.data.message == '존재하는 닉네임입니다.') {\n          this.nicknamecheck = 1;\n        } else if (!this.nickname) {\n          this.nicknamecheck = 3;\n        }\n      }).catch(error => {\n        alert(error);\n      });\n    },\n    updateForm() {\n      //\n      console.log(this.nickname);\n      if (this.sex === 'female') {\n        this.sex = 'f';\n      } else {\n        this.sex = 'm';\n      }\n      axios({\n        url: \"http://localhost:3000/profile/updateProfile\",\n        method: \"POST\",\n        data: {\n          email: this.email,\n          password: this.password,\n          nickname: this.nickname,\n          phone_num: this.phone_num\n        }\n      }).then(async res => {\n        alert(res.data.message);\n        if (typeof this.image === 'string') {\n          this.resetUser();\n        } else {\n          this.uploadFile(this.image);\n        }\n\n        // await this.uploadFile(this.image);\n      }).catch(error => {\n        alert(error);\n      });\n    },\n    async uploadFile(files) {\n      if (!files) {\n        return; // 파일이 없으면 함수 종료\n      }\n      // window.location.href = '/';\n      let name = files.name;\n      let data = await this.$base64(files);\n      axios({\n        url: `http://localhost:3000/uploadProfile/${this.email}/${name}`,\n        method: 'POST',\n        data: {\n          \"data\": data\n        }\n      }).then(async res => {\n        this.resetUser();\n      }).catch(error => {\n        alert(error);\n      });\n    },\n    resetUser() {\n      console.log(this.email);\n      localStorage.removeItem(\"userNick\");\n      localStorage.removeItem(\"userImage\");\n      localStorage.removeItem(\"userProvider\");\n      axios({\n        url: \"http://localhost:3000/profile/pullUserData2\",\n        method: \"POST\",\n        data: {\n          email: this.email\n        }\n      }).then(async res => {\n        localStorage.setItem(\"userNick\", res.data.nick);\n        localStorage.setItem(\"userImage\", res.data.image);\n        localStorage.setItem(\"userProvider\", res.data.provider);\n        window.location.href = \"/\";\n      });\n    },\n    upload() {\n      this.type = true;\n      const files = this.$refs.image.files;\n      if (files && files.length > 0) {\n        this.image = files[0]; // 사용자가 올린 이미지\n        console.log(this.image);\n        // URL.createObjectURL로 사용자가 올린 이미지를 URL로 만들어서 화면에 표시할 수 있게 한다. img 태그의 src값에 바인딩해준다\n        this.imageUploaded = URL.createObjectURL(this.image);\n      }\n    }\n  }\n};","map":{"version":3,"names":["gnbBar","axios","defaults","baseURL","headers","post","components","data","email","password","password2","nickname","phone_num","image","provider","imageUploaded","type","password_check","password_check2","nickname_check","phone_check","error_border_check","allcheck","allcheck1","allcheck2","allcheck3","allcheck4","allcheck5","allcheck6","allcheck7","emailcheck","nicknamecheck","watch","funcWatch","mounted","localStorage","getItem","userData","methods","url","method","then","res","phone","catch","err","console","error","checkPassword","checkPassword2","checknickname","checkphone","inputAllCheck","nicknameCheckForm","log","movetoMypage","window","location","href","validatePassword","test","validateNickname","nickname_check2","validatephone","emailCheckForm","validateEmail","message","alert","updateForm","sex","resetUser","uploadFile","files","name","$base64","removeItem","setItem","nick","upload","$refs","length","URL","createObjectURL"],"sources":["/Users/seoyeonju/Library/CloudStorage/OneDrive-계원예술대학교/풀스텍/weave-wego 2/vue_front/src/views/updateProfile.vue"],"sourcesContent":["<template>\r\n  <gnbBar />\r\n  <div class=\"join\">\r\n    <div class=\"title-bar\">\r\n      <h5>회원정보 수정</h5>\r\n      <form @submit.prevent=\"updateForm\">\r\n        <label class=\"title-bar-label\" for=\"file\">\r\n          <div v-if=\"provider === 'local'\" class=\"title-bar-btn\">+</div>\r\n          <div v-else-if=\"provider === 'naver' ||provider === 'kakao'\"></div>\r\n          <img v-if=\"type\" class=\"img_style\" :src=\"imageUploaded\" alt=\"올린 이미지\" />\r\n          <img v-else-if=\"provider === 'local' && image !== null\" class=\"img_style\" :src=\"`http://localhost:3000/downloadProfile/${email}/${image}`\" alt=\"올린 이미지\" />\r\n          <img v-else-if=\"provider === 'kakao' ||provider === 'naver'\" class=\"img_style\" :src=\"image\">\r\n          <img v-else id=\"img_style\" src=\"../assets/img/profileExample.png\" alt=\"올린 이미지\" />\r\n          <br />\r\n        </label>\r\n\r\n        <input id=\"file\" type=\"file\" ref=\"image\" @change=\"upload\" maxlength=\"150\" />\r\n      </form>\r\n\r\n\r\n    </div>\r\n    <div class=\"wrap\">\r\n      <form @submit.prevent=\"updateForm\">\r\n        <label for=\"email\">아이디</label>\r\n        <input v-model=\"email\" type=\"text\" id=\"email\" placeholder=\"유저아이디\" disabled maxlength=\"25\">\r\n        <label for=\"password\">비밀번호</label>\r\n        <input v-if=\"provider === 'local'\" v-model=\"password\" type=\"password\" id=\"password\" :class=\"{ error_border: password_check }\"\r\n          placeholder=\"비밀번호 입력\" maxlength=\"15\">\r\n        <input v-else v-model=\"password\" type=\"password\" id=\"password\" :class=\"{ error_border: password_check }\"\r\n          placeholder=\"\" disabled maxlength=\"15\"><br />\r\n        <p id=\"error\" v-if=\"password_check && provider === 'local'\">비밀번호를 정확히 입력해주세요.<br /> *8자리 이상 영문 대소문자, 숫자, 특수문자가 각각 1개 이상</p>\r\n        <label for=\"password_check2\">비밀번호 확인</label>\r\n        <input v-if=\"provider === 'local'\" v-model=\"password2\" type=\"password\" id=\"password_check\" :class=\"{ error_border: password_check2 }\"\r\n          placeholder=\"비밀번호 확인 입력\">\r\n        <input v-else v-model=\"password2\" type=\"password\" id=\"password_check\" :class=\"{ error_border: password_check2 }\"\r\n          placeholder=\"\" disabled><br />\r\n        <p id=\"error\" v-if=\"password_check2\">비밀번호가 일치하지 않습니다.</p>\r\n        <label for=\"nickname\">별명</label>\r\n        <input @input=\"nickname = $event.target.value\" type=\"text\" id=\"nickname\" :placeholder=\"nickname\"\r\n          :class=\"{ error_border: nickname_check2 || nicknamecheck != 2 }\" maxlength=\"10\">\r\n        <form @submit.prevent=\"nicknameCheckForm\">\r\n          <a href=\"/auth/checknick\"><button type=\"submit\" id=\"nickname_check\" class=\"username_submit\">중복확인</button></a>\r\n        </form>\r\n        <p id=\"error\" v-show=\"nicknamecheck == 1\">존재하는 닉네임입니다.</p>\r\n        <p id=\"complete\" v-show=\"nicknamecheck == 2\">사용가능한 닉네임입니다.</p>\r\n        <p id=\"error\" v-if=\"nickname_check2\">닉네임을 입력해주세요.</p>\r\n        <label for=\"phone_num\">전화번호</label>\r\n        <input @input=\"phone_num = $event.target.value\" type=\"text\" id=\"phone_num\" :placeholder=\"phone_num\" :class=\"{ error_border: phone_check }\"\r\n          maxlength=\"11\"><br />\r\n        <p id=\"error\" v-if=\"phone_check\">전화번호를 정확히 입력해주세요. 예)01066090043</p>\r\n        <div class=\"user_update_btn\">\r\n          <a href=\"/auth/join\"><input type=\"submit\" :class=\"{ 'error_submit': allcheck, 'submit': !allcheck }\"\r\n              :disabled=\"allcheck\" id=\"login\" value=\"수정하기\"></a>\r\n          <a href=\"/mypage\"><input type=\"submit\" @click=\"movetoMypage\" class=\"submit\" id=\"login\" value=\"취소\"></a>\r\n        </div>\r\n\r\n      </form>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport gnbBar from '../components/gnbBar.vue'\r\n\r\nimport axios from 'axios'\r\naxios.defaults.baseURL = 'http://localhost:3000';\r\naxios.defaults.headers.post['Content-Type'] = 'application/json;charset=utf-8';\r\naxios.defaults.headers.post['Access-Control-Allow-Origin'] = '*';\r\n\r\nexport default {\r\n  components: { gnbBar },\r\n  data() {\r\n    return {\r\n\r\n      email: '',\r\n      password: '',\r\n      password2: '',\r\n      nickname: '',\r\n      phone_num: '',\r\n      image: '',\r\n      provider: '',\r\n      imageUploaded: null,\r\n      type: false,\r\n\r\n      password_check: false,\r\n      password_check2: false,\r\n      nickname_check: false,\r\n      phone_check: false,\r\n      error_border_check: false,\r\n\r\n      allcheck: false,\r\n      allcheck1: false,\r\n      allcheck2: false,\r\n      allcheck3: false,\r\n      allcheck4: false,\r\n      allcheck5: false,\r\n      allcheck6: false,\r\n      allcheck7: false,\r\n      emailcheck: 3,\r\n      nicknamecheck: 3,\r\n\r\n\r\n    };\r\n  },\r\n  watch: {\r\n    'password': function () {\r\n      this.funcWatch()\r\n    },\r\n    'password2': function () {\r\n      this.funcWatch()\r\n    },\r\n    'nickname': function () {\r\n      this.funcWatch()\r\n    },\r\n    'phone_num': function () {\r\n      this.funcWatch()\r\n    }\r\n\r\n  },\r\n  mounted() {\r\n    this.email = localStorage.getItem(\"userID\"),\r\n    this.nickname = localStorage.getItem(\"userNick\"),\r\n    this.image = localStorage.getItem(\"userImage\"),\r\n    this.provider = localStorage.getItem(\"userProvider\");\r\n    this.userData()\r\n  },\r\n  methods: {\r\n    userData() {\r\n      axios({\r\n        url: '/profile/pullUserData',\r\n        method: 'POST',\r\n        data: {\r\n          email: this.email\r\n        }\r\n      }).then((res)=>{\r\n        this.phone_num = res.data.phone\r\n      }).catch((err)=>{\r\n        console.error(err);\r\n      })\r\n    },\r\n    funcWatch() {\r\n      this.checkPassword()\r\n      this.checkPassword2()\r\n      this.checknickname()\r\n      this.checkphone()\r\n      this.inputAllCheck()\r\n      this.nicknameCheckForm()\r\n      console.log(this.allcheck);\r\n    },\r\n    movetoMypage() {\r\n      window.location.href = '/mypage';\r\n    },\r\n    checkPassword() {\r\n      // 최소 8자리 이상 영문 대소문자, 숫자, 특수문자가 각각 1개 이상\r\n      const validatePassword = /^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$ %^&*-]).{8,}$/\r\n\r\n      if (this.password === '' || !validatePassword.test(this.password) || !this.password) {\r\n        this.password_check = true;\r\n        this.error_border_check = true;\r\n\r\n      } else {\r\n        this.password_check = false;\r\n        this.error_border_check = false;\r\n\r\n      }\r\n    },\r\n    checkPassword2() {\r\n      if (this.password !== this.password2) {\r\n        this.password_check2 = true;\r\n        this.error_border_check = true;\r\n\r\n      } else {\r\n        this.password_check2 = false;\r\n        this.error_border_check = false;\r\n\r\n      }\r\n    },\r\n    checknickname() {\r\n\r\n      const validateNickname = /^.{1,10}$/;\r\n      if (!this.nickname || !validateNickname.test(this.nickname)) {\r\n        this.nickname_check2 = true;\r\n        this.error_border_check = true;\r\n\r\n      } else {\r\n        this.nickname_check2 = false;\r\n        this.error_border_check = false;\r\n\r\n      }\r\n    },\r\n    checkphone() {\r\n      const validatephone = /^\\d{3}\\d{3,4}\\d{4}$/;\r\n\r\n      if (this.phone_num === '' || !validatephone.test(this.phone_num) || !this.phone_num) {\r\n        this.phone_check = true;\r\n        this.error_border_check = true;\r\n\r\n      } else {\r\n        this.phone_check = false;\r\n        this.error_border_check = false;\r\n\r\n      }\r\n    },\r\n    inputAllCheck() {\r\n      if (this.allcheck2 || this.allcheck3 || this.allcheck4 || this.allcheck7) { //하나라도 입력조건이 안맞을시\r\n        this.allcheck = false; //버튼 비활성\r\n\r\n      } else {\r\n        this.allcheck = false;\r\n\r\n      }\r\n    },\r\n    emailCheckForm() {\r\n      axios({\r\n        url: \"http://localhost:3000/auth/checkemail\",\r\n        method: \"POST\",\r\n        data: {\r\n          email: this.email,\r\n        },\r\n      }).then(async (res) => {\r\n        const validateEmail = /^[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*.[a-zA-Z]{2,3}$/i;\r\n\r\n        if (res.data.message == '사용가능한 이메일입니다.' && validateEmail.test(this.email)) {\r\n          this.emailcheck = 2;\r\n        } else if (res.data.message == '존재하는 이메일입니다.') {\r\n          this.emailcheck = 1;\r\n          console.log(this.allcheck);\r\n        } else if (!this.email) {\r\n          this.emailcheck = 3;\r\n        }\r\n\r\n\r\n\r\n        console.log(this.emailcheck);\r\n\r\n      }).catch(error => {\r\n        alert(error);\r\n      })\r\n    },\r\n    nicknameCheckForm() {\r\n      axios({\r\n        url: \"http://localhost:3000/auth/checknick\",\r\n        method: \"POST\",\r\n        data: {\r\n          nickname: this.nickname,\r\n        },\r\n      }).then(async (res) => {\r\n        if (res.data.message == '사용가능한 닉네임입니다.' && this.nickname) {\r\n          console.log(res.data.message);\r\n          this.nicknamecheck = 2;\r\n        } else if (res.data.message == '존재하는 닉네임입니다.') {\r\n          this.nicknamecheck = 1;\r\n        } else if (!this.nickname) {\r\n          this.nicknamecheck = 3;\r\n        }\r\n      }).catch(error => {\r\n        alert(error);\r\n      })\r\n    },\r\n    updateForm() { //\r\n      console.log(this.nickname);\r\n      if (this.sex === 'female') {\r\n        this.sex = 'f';\r\n      } else {\r\n        this.sex = 'm';\r\n      }\r\n      axios({\r\n        url: \"http://localhost:3000/profile/updateProfile\",\r\n        method: \"POST\",\r\n        data: {\r\n          email: this.email,\r\n          password: this.password,\r\n          nickname: this.nickname,\r\n          phone_num: this.phone_num,\r\n\r\n        },\r\n      }).then(async (res) => {\r\n        alert(res.data.message);\r\n        if(typeof this.image === 'string') {\r\n          this.resetUser();\r\n        } else {\r\n          this.uploadFile(this.image);\r\n        }\r\n        \r\n        // await this.uploadFile(this.image);\r\n      }).catch(error => {\r\n        alert(error);\r\n      })\r\n    },\r\n    async uploadFile(files) {\r\n      if (!files) {\r\n        return; // 파일이 없으면 함수 종료\r\n      }\r\n      // window.location.href = '/';\r\n      let name = files.name;\r\n      let data = await this.$base64(files);\r\n\r\n      axios({\r\n        url: `http://localhost:3000/uploadProfile/${this.email}/${name}`,\r\n        method: 'POST',\r\n        data: {\r\n          \"data\": data\r\n        }\r\n      }).then(async (res) => {\r\n        this.resetUser();\r\n      }).catch(error => {\r\n        alert(error);\r\n      })\r\n    },\r\n    resetUser() {\r\n      console.log(this.email);\r\n      localStorage.removeItem(\"userNick\");\r\n      localStorage.removeItem(\"userImage\");\r\n      localStorage.removeItem(\"userProvider\");\r\n\r\n      axios({\r\n        url: \"http://localhost:3000/profile/pullUserData2\",\r\n        method: \"POST\",\r\n        data: {\r\n          email: this.email,\r\n        },\r\n      }).then(async (res) => {\r\n        \r\n        localStorage.setItem(\"userNick\", res.data.nick);\r\n        localStorage.setItem(\"userImage\", res.data.image);\r\n        localStorage.setItem(\"userProvider\", res.data.provider);\r\n\r\n        window.location.href = \"/\";\r\n      });\r\n    },\r\n    upload() {\r\n      this.type = true;\r\n      const files = this.$refs.image.files;\r\n\r\n      if (files && files.length > 0) {\r\n        this.image = files[0]; // 사용자가 올린 이미지\r\n        console.log(this.image);\r\n        // URL.createObjectURL로 사용자가 올린 이미지를 URL로 만들어서 화면에 표시할 수 있게 한다. img 태그의 src값에 바인딩해준다\r\n        this.imageUploaded = URL.createObjectURL(this.image);\r\n\r\n\r\n      }\r\n    },\r\n  }\r\n}\r\n</script> \r\n\r\n<style scoped>\r\n.join {\r\n  padding-top: 5%;\r\n  width: 100%;\r\n  height: 100%;\r\n  margin: 0;\r\n  background-color: white;\r\n  font-family: arial;\r\n  font-size: 14px;\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n}\r\n\r\n#file {\r\n  display: none;\r\n}\r\n\r\n.title-bar-label {\r\n  width: 1%;\r\n  cursor: pointer;\r\n}\r\n\r\n.img_style {\r\n  border: 2px solid black;\r\n  border-radius: 50%;\r\n}\r\n\r\ninput[type=\"file\"] {\r\n  position: absolute;\r\n  width: 22px;\r\n  height: 22px;\r\n  left: 50%;\r\n  top: 70%;\r\n  line-height: 20x;\r\n  border: 2px solid black;\r\n  color: white;\r\n  font-size: 22px;\r\n  background-color: #388265;\r\n  border-radius: 50%;\r\n}\r\n\r\n.title-bar {\r\n  text-align: center;\r\n  color: #333333;\r\n  font-size: 30px;\r\n  padding-bottom: 10px;\r\n  position: relative;\r\n}\r\n\r\n.title-bar-btn {\r\n  position: absolute;\r\n  width: 22px;\r\n  height: 22px;\r\n  left: 50%;\r\n  top: 70%;\r\n  text-align: center;\r\n  line-height: 20px;\r\n  border: 2px solid black;\r\n  color: white;\r\n  font-size: 22px;\r\n\r\n  background-color: #388265;\r\n  border-radius: 50%;\r\n}\r\n\r\n.title-bar h5 {\r\n  margin: 24px 0;\r\n}\r\n\r\n.title-bar img {\r\n  width: 50px;\r\n  height: 50px;\r\n}\r\n\r\n.wrap {\r\n  background-color: #ffffff;\r\n  padding: 1%;\r\n  width: 35%;\r\n  min-width: 350px;\r\n  margin: 0 auto;\r\n  border-radius: 6px;\r\n  box-shadow: 0 0 5px #ccc;\r\n  border: 1px solid #fff;\r\n}\r\n\r\nlabel {\r\n  margin-right: 3%;\r\n  display: inline-block;\r\n  width: 110px;\r\n  text-align: right;\r\n}\r\n\r\ninput {\r\n  width: 70%;\r\n  margin-bottom: 1%;\r\n  padding: 1%;\r\n  border-radius: 6px;\r\n  border: 1px solid #efefef;\r\n  font-size: 15px;\r\n  transition: all .2s ease-in-out;\r\n}\r\n\r\n\r\n\r\n.username_submit {\r\n  font-size: 14px;\r\n  background-color: #388265;\r\n  color: white;\r\n  width: 15%;\r\n  margin-left: 5%;\r\n  border-radius: 4px;\r\n  border: none;\r\n  display: none;\r\n}\r\n\r\ninput:focus {\r\n  outline: none;\r\n  border-color: #A5C2B6;\r\n  box-shadow: 0 0 10px #A5C2B6;\r\n  transition: all .2s ease-in-out;\r\n}\r\n\r\ninput.submit {\r\n  width: 100%;\r\n  padding: 3%;\r\n  border-radius: 6px;\r\n  border: 1px solid #388265;\r\n  font-size: 15px;\r\n  background-color: #388265;\r\n  color: #fff;\r\n  margin-top: 25px;\r\n  transition: all .2s ease-in-out;\r\n}\r\n\r\ninput.submit:hover {\r\n  width: 100%;\r\n  padding: 3%;\r\n  border-radius: 6px;\r\n  font-size: 15px;\r\n  color: #fff;\r\n  margin-top: 25px;\r\n  transition: all .2s ease-in-out;\r\n}\r\n\r\n.gender,\r\n.age_range {\r\n  width: 100%;\r\n  display: block;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: 1%;\r\n  margin-left: -1%;\r\n  font-size: 14px;\r\n\r\n}\r\n\r\n.input_sex {\r\n  width: 14px;\r\n  height: 14px;\r\n  transition: all .2s ease-in-out;\r\n}\r\n\r\n.user_update_btn {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  width: 100%;\r\n  height: 100%;\r\n}\r\n.user_update_btn  a:first-child {\r\n  width: 100%;\r\n  height: auto;\r\n  padding-right: 1%;\r\n}\r\n.user_update_btn  a:last-child {\r\n  width: 100%;\r\n  height: auto;\r\n  padding-left: 1%;\r\n}\r\n#error {\r\n  color: red;\r\n  margin-bottom: 2%;\r\n  margin-left: 24%;\r\n  font-size: 12px;\r\n}\r\n\r\n#complete {\r\n  color: #388265;\r\n  margin-bottom: 2%;\r\n  margin-left: 24%;\r\n  font-size: 12px;\r\n}\r\n\r\n.error_border:focus {\r\n  border-color: red;\r\n  box-shadow: none;\r\n}\r\n\r\n.error_submit {\r\n  width: 100%;\r\n  padding: 3%;\r\n  border-radius: 6px;\r\n  border: 1px solid gray;\r\n  font-size: 15px;\r\n  background-color: grey;\r\n  color: darkgray;\r\n  margin-top: 25px;\r\n  transition: all .2s ease-in-out;\r\n}\r\n\r\n</style>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}