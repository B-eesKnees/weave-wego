{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, vModelText as _vModelText, normalizeClass as _normalizeClass, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, withModifiers as _withModifiers, Fragment as _Fragment, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-2b5df2b4\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"login\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"title-bar\"\n}, [/*#__PURE__*/_createElementVNode(\"h5\", null, \"로그인\")], -1 /* HOISTED */));\nconst _hoisted_3 = {\n  class: \"wrap\"\n};\nconst _hoisted_4 = {\n  key: 0,\n  id: \"error\"\n};\nconst _hoisted_5 = {\n  key: 1,\n  id: \"error\"\n};\nconst _hoisted_6 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */));\nconst _hoisted_7 = {\n  class: \"user_login_btns\"\n};\nconst _hoisted_8 = {\n  href: \"/auth/login\",\n  class: \"login_btn\"\n};\nconst _hoisted_9 = [\"disabled\"];\nconst _hoisted_10 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"a\", {\n  class: \"join_btn\",\n  href: \"/join\"\n}, \"회원가입\", -1 /* HOISTED */));\nconst _hoisted_11 = {\n  class: \"wrap2\"\n};\nconst _hoisted_12 = {\n  method: \"post\"\n};\nconst _hoisted_13 = {\n  class: \"user_social_btns\"\n};\nconst _hoisted_14 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"a\", {\n  class: \"social_btn naver\",\n  href: \"/naverlogin\"\n}, \"네이버로 시작하기\", -1 /* HOISTED */));\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_gnbBar = _resolveComponent(\"gnbBar\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_gnbBar), _createElementVNode(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"form\", {\n    onSubmit: _cache[2] || (_cache[2] = _withModifiers((...args) => $options.loginForm && $options.loginForm(...args), [\"prevent\"]))\n  }, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.email = $event),\n    type: \"text\",\n    id: \"username\",\n    class: _normalizeClass({\n      error_border: $data.error_border_check\n    }),\n    placeholder: \"이메일\"\n  }, null, 2 /* CLASS */), [[_vModelText, $data.email]]), $data.email_check ? (_openBlock(), _createElementBlock(\"p\", _hoisted_4, \" 이메일주소를 정확히 입력해주세요. 예)abcd@naver.com \")) : _createCommentVNode(\"v-if\", true), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.password = $event),\n    type: \"password\",\n    id: \"password\",\n    class: _normalizeClass({\n      error_border: $data.error_border_check\n    }),\n    placeholder: \"비밀번호\"\n  }, null, 2 /* CLASS */), [[_vModelText, $data.password]]), $data.password_check ? (_openBlock(), _createElementBlock(\"p\", _hoisted_5, [_createTextVNode(\" 비밀번호를 정확히 입력해주세요.\"), _hoisted_6, _createTextVNode(\" *8자리 이상 영문 대소문자, 숫자, 특수문자가 각각 1개 이상 \")])) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"div\", _hoisted_7, [_createElementVNode(\"a\", _hoisted_8, [_createElementVNode(\"input\", {\n    class: _normalizeClass({\n      error_submit: $data.allcheck,\n      submit: !$data.allcheck\n    }),\n    disabled: $data.allcheck,\n    type: \"submit\",\n    id: \"login\",\n    value: \"로그인\"\n  }, null, 10 /* CLASS, PROPS */, _hoisted_9)]), _hoisted_10])], 32 /* HYDRATE_EVENTS */)]), _createElementVNode(\"div\", _hoisted_11, [_createElementVNode(\"form\", _hoisted_12, [_createElementVNode(\"div\", _hoisted_13, [_createElementVNode(\"a\", {\n    class: \"social_btn kakao\",\n    onClick: _cache[3] || (_cache[3] = (...args) => $options.kakaoLogin && $options.kakaoLogin(...args))\n  }, \"카카오로 시작하기\"), _hoisted_14])])])])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["class","_createElementVNode","id","href","method","_createVNode","_component_gnbBar","_hoisted_1","_hoisted_2","_hoisted_3","onSubmit","_cache","_withModifiers","args","$options","loginForm","$data","email","$event","type","_normalizeClass","error_border","error_border_check","placeholder","email_check","_createElementBlock","_hoisted_4","password","password_check","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","error_submit","allcheck","submit","disabled","value","_hoisted_10","_hoisted_11","_hoisted_12","_hoisted_13","onClick","kakaoLogin","_hoisted_14"],"sources":["/Users/seoyeonju/Library/CloudStorage/OneDrive-계원예술대학교/풀스텍/weave-wego 2/vue_front/src/views/userLogin.vue"],"sourcesContent":["<template>\r\n  <gnbBar />\r\n  <div class=\"login\">\r\n    <div class=\"title-bar\">\r\n      <h5>로그인</h5>\r\n    </div>\r\n\r\n    <div class=\"wrap\">\r\n      <form @submit.prevent=\"loginForm\">\r\n        <input v-model=\"email\" type=\"text\" id=\"username\" :class=\"{ error_border: error_border_check }\"\r\n          placeholder=\"이메일\" />\r\n        <p id=\"error\" v-if=\"email_check\">\r\n          이메일주소를 정확히 입력해주세요. 예)abcd@naver.com\r\n        </p>\r\n\r\n        <input v-model=\"password\" type=\"password\" id=\"password\" :class=\"{ error_border: error_border_check }\"\r\n          placeholder=\"비밀번호\" />\r\n        <p id=\"error\" v-if=\"password_check\">\r\n          비밀번호를 정확히 입력해주세요.<br />\r\n          *8자리 이상 영문 대소문자, 숫자, 특수문자가 각각 1개 이상\r\n        </p>\r\n        <div class=\"user_login_btns\">\r\n          <a href=\"/auth/login\" class=\"login_btn\"><input :class=\"{ error_submit: allcheck, submit: !allcheck }\"\r\n              :disabled=\"allcheck\" type=\"submit\" id=\"login\" value=\"로그인\" /></a>\r\n          <a class=\"join_btn\" href=\"/join\">회원가입</a>\r\n        </div>\r\n      </form>\r\n    </div>\r\n\r\n    <div class=\"wrap2\">\r\n      <form method=\"post\">\r\n        <div class=\"user_social_btns\">\r\n          <a class=\"social_btn kakao\" @click=\"kakaoLogin\">카카오로 시작하기</a>\r\n          <a class=\"social_btn naver\" href=\"/naverlogin\">네이버로 시작하기</a>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport gnbBar from \"../components/gnbBar.vue\";\r\n\r\nimport axios from \"axios\";\r\naxios.defaults.baseURL = \"http://localhost:3000\";\r\naxios.defaults.headers.post[\"Content-Type\"] = \"application/json;charset=utf-8\";\r\naxios.defaults.headers.post[\"Access-Control-Allow-Origin\"] = \"*\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      email: \"\",\r\n      password: \"\",\r\n\r\n      email_check: false,\r\n      password_check: false,\r\n      error_border_check: false,\r\n\r\n      allcheck: true,\r\n      allcheck1: true,\r\n      allcheck2: true,\r\n    };\r\n  },\r\n  components: { gnbBar },\r\n\r\n  watch: {\r\n    email: function () {\r\n      this.checkEmail();\r\n      this.inputAllCheck();\r\n    },\r\n    password: function () {\r\n      this.checkPassword();\r\n      this.inputAllCheck();\r\n    },\r\n  },\r\n  methods: {\r\n    checkEmail() {\r\n      // 이메일 형식 검사\r\n      const validateEmail =\r\n        /^[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*.[a-zA-Z]{2,3}$/i;\r\n\r\n      if (this.email === \"\" || !validateEmail.test(this.email) || !this.email) {\r\n        this.email_check = true;\r\n        this.error_border_check = true;\r\n        this.allcheck1 = true; //입력조건 안맞을시 true\r\n      } else {\r\n        this.email_check = false;\r\n        this.error_border_check = false;\r\n        this.allcheck1 = false;\r\n      }\r\n    },\r\n    checkPassword() {\r\n      // 최소 8자리 이상 영문 대소문자, 숫자, 특수문자가 각각 1개 이상\r\n      const validatePassword =\r\n        /^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$ %^&*-]).{8,}$/;\r\n\r\n      if (\r\n        this.password === \"\" ||\r\n        !validatePassword.test(this.password) ||\r\n        !this.password\r\n      ) {\r\n        this.password_check = true;\r\n        this.error_border_check = true;\r\n        this.allcheck2 = true;\r\n      } else {\r\n        this.password_check = false;\r\n        this.error_border_check = false;\r\n        this.allcheck2 = false;\r\n      }\r\n    },\r\n    inputAllCheck() {\r\n      if (this.allcheck1 || this.allcheck2) {\r\n        //하나라도 입력조건이 안맞을시\r\n        this.allcheck = true; //버튼 비활성\r\n      } else {\r\n        this.allcheck = false;\r\n      }\r\n    },\r\n    loginForm() {\r\n      //백엔드로 로그인정보 전달\r\n      axios({\r\n        url: \"http://localhost:3000/auth/login\",\r\n        method: \"POST\",\r\n        data: {\r\n          email: this.email,\r\n          password: this.password,\r\n        },\r\n      })\r\n        .then((res) => {\r\n          if (res.data.code == 200) {\r\n            //로그인 성공시\r\n            alert(res.data.success);\r\n            localStorage.setItem(\"userID\", res.data.email);\r\n            localStorage.setItem(\"userNick\", res.data.nick);\r\n            localStorage.setItem(\"userImage\", res.data.image);\r\n            localStorage.setItem(\"userProvider\", res.data.provider);\r\n\r\n            window.location.href = \"/\";\r\n          } else {\r\n            if (res.data.code == 204) {\r\n              //비밀번호 오류시\r\n              alert(res.data.error + \"\\n\" + res.data.message);\r\n              window.location.href = \"/login\";\r\n            } else if (res.data.code == 206) {\r\n              // 존재하지 않는 이메일 일때\r\n              alert(res.data.error + \"\\n\" + res.data.message);\r\n              window.location.href = \"/login\";\r\n            }\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          alert(err);\r\n        });\r\n    },\r\n    kakaoLogin() {\r\n      window.Kakao.Auth.login({\r\n        scope:\r\n          \"profile_nickname, profile_image, account_email, gender, age_range\",\r\n        success: this.getProfile,\r\n      });\r\n    },\r\n    getProfile(autoObj) {\r\n      console.log(autoObj);\r\n      window.Kakao.API.request({\r\n        url: \"/v2/user/me\",\r\n        success: (res) => {\r\n          const kakao_account = res.kakao_account;\r\n          console.log(kakao_account);\r\n          this.login(kakao_account);\r\n          alert(\"로그인 성공\");\r\n        },\r\n      });\r\n    },\r\n    async login(kakao_account) {\r\n      const email = kakao_account.email;\r\n\r\n      await axios({\r\n        url: \"http://localhost:3000/auth/kakaologin\",\r\n        method: \"POST\",\r\n        data: {\r\n          email: kakao_account.email,\r\n          nick: kakao_account.profile.nickname,\r\n          image: kakao_account.profile.profile_image_url,\r\n          sex: kakao_account.gender,\r\n          agegroup: kakao_account.age_range,\r\n          provider: \"kakao\",\r\n        },\r\n      }).then(async (res) => {\r\n        this.pullData(email);\r\n      });\r\n    },\r\n    pullData(email) {\r\n      axios({\r\n        url: \"http://localhost:3000/auth/kakaoData\",\r\n        method: \"POST\",\r\n        data: {\r\n          email: email,\r\n        },\r\n      }).then(async (res) => {\r\n        localStorage.setItem(\"userID\", res.data.email);\r\n        localStorage.setItem(\"userNick\", res.data.nick);\r\n        localStorage.setItem(\"userImage\", res.data.image);\r\n        localStorage.setItem(\"userProvider\", res.data.provider);\r\n\r\n        window.location.href = \"/\";\r\n      });\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\na {\r\n  padding: 0;\r\n  margin: 0;\r\n}\r\n\r\n.login {\r\n  padding-top: 5%;\r\n  width: 100%;\r\n  height: 100%;\r\n  margin: 0;\r\n  background-color: white;\r\n  font-family: arial;\r\n  font-size: 14px;\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n}\r\n\r\n.title-bar {\r\n  text-align: center;\r\n  color: #333333;\r\n  font-size: 30px;\r\n  padding-bottom: 10px;\r\n}\r\n\r\n.title-bar h5 {\r\n  margin-top: 2%;\r\n}\r\n\r\n.info-bar {\r\n  text-align: center;\r\n  color: #666;\r\n  font-size: 15px;\r\n  padding-bottom: 50px;\r\n}\r\n\r\n.info-bar a {\r\n  color: #45b3e7;\r\n  text-decoration: none;\r\n}\r\n\r\n.wrap {\r\n  background-color: #ffffff;\r\n  padding: 2%;\r\n  width: 30%;\r\n  min-width: 350px;\r\n  margin: 0 auto;\r\n  border-radius: 6px;\r\n  box-shadow: 0 0 5px #ccc;\r\n  border: 1px solid #fff;\r\n}\r\n\r\n.wrap2 {\r\n  background-color: #ffffff;\r\n  width: 30%;\r\n  min-width: 350px;\r\n  margin: 10px auto;\r\n  border-radius: 6px;\r\n}\r\n\r\ninput,\r\n.join_btn {\r\n  width: 100%;\r\n  margin-bottom: 10px;\r\n  padding: 3%;\r\n  border-radius: 6px;\r\n  border: 1px solid #efefef;\r\n  font-size: 15px;\r\n  transition: all 0.2s ease-in-out;\r\n}\r\n\r\n.submit2 {\r\n  width: 100%;\r\n  margin-top: 20px;\r\n  margin-bottom: 0px;\r\n  padding: 3%;\r\n  border-radius: 6px;\r\n  border: 1px solid #efefef;\r\n  font-size: 15px;\r\n  color: #fff;\r\n  background-color: #388265;\r\n  transition: all 0.2s ease-in-out;\r\n}\r\n\r\ninput:focus {\r\n  outline: none;\r\n  border-color: #a5c2b6;\r\n  box-shadow: 0 0 10px #a5c2b6;\r\n  transition: all 0.2s ease-in-out;\r\n}\r\n\r\ninput.submit {\r\n  width: 100%;\r\n  padding: 5%;\r\n  border-radius: 6px;\r\n  border: 1px solid #388265;\r\n  font-size: 15px;\r\n  background-color: #388265;\r\n  color: #fff;\r\n  margin-top: 25px;\r\n  transition: all 0.2s ease-in-out;\r\n}\r\n\r\n.join_btn {\r\n  width: 100%;\r\n  padding: 3%;\r\n  border-radius: 6px;\r\n  border: 1px solid #388265;\r\n  font-size: 14px;\r\n  background-color: #388265;\r\n  color: #fff;\r\n  margin-top: 25px;\r\n  transition: all 0.2s ease-in-out;\r\n}\r\n\r\ninput.submit:hover {\r\n  width: 100%;\r\n  padding: 5%;\r\n  border-radius: 6px;\r\n  font-size: 15px;\r\n  color: #fff;\r\n  margin-top: 25px;\r\n  transition: all 0.2s ease-in-out;\r\n}\r\n\r\ninput.submit2:hover {\r\n  width: 100%;\r\n  padding: 5%;\r\n  border-radius: 6px;\r\n  opacity: 0.7;\r\n  font-size: 15px;\r\n  color: #fff;\r\n  transition: all 0.2s ease-in-out;\r\n}\r\n\r\n.user_login_btns {\r\n  display: flex;\r\n  text-align: center;\r\n}\r\n\r\n.user_login_btns a:last-child {\r\n  text-decoration: none;\r\n  text-align: center;\r\n  line-height: 30px;\r\n  margin-left: 8px;\r\n  width: 30%;\r\n}\r\n\r\n.user_login_btns a:first-child {\r\n  text-decoration: none;\r\n  text-align: center;\r\n  width: 70%;\r\n}\r\n\r\n.user_social_btns {\r\n  display: flex;\r\n  width: 100%;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  text-align: center;\r\n}\r\n\r\n.social_btn {\r\n  width: 100%;\r\n  padding: 5%;\r\n  text-decoration: none;\r\n  border-radius: 6px;\r\n  border: 1px solid #388265;\r\n  font-size: 15px;\r\n  background-color: #388265;\r\n  color: #fff;\r\n  margin-top: 10px;\r\n  transition: all 0.2s ease-in-out;\r\n}\r\n\r\n#error {\r\n  color: red;\r\n  margin-top: -1%;\r\n  font-size: 12px;\r\n}\r\n\r\n.error_border:focus {\r\n  border-color: red;\r\n  box-shadow: none;\r\n}\r\n\r\n.error_submit {\r\n  width: 100%;\r\n  padding: 5%;\r\n  border-radius: 6px;\r\n  border: 1px solid gray;\r\n  font-size: 15px;\r\n  background-color: grey;\r\n  color: darkgray;\r\n  margin-top: 25px;\r\n  transition: all 0.2s ease-in-out;\r\n}\r\n\r\n.kakao {\r\n  background-color: #f7e600;\r\n  color: #3a1d1d;\r\n  border: 1px solid #f7e600;\r\n  box-shadow: 0 0 5px #ccc;\r\n  font-weight: bold;\r\n  line-height: normal;\r\n}\r\n\r\n.naver {\r\n  background-color: #2db400;\r\n  color: white;\r\n  border: 1px solid #2db400;\r\n  box-shadow: 0 0 5px #ccc;\r\n  font-weight: bold;\r\n  line-height: normal;\r\n}\r\n</style>\r\n"],"mappings":";;;EAEOA,KAAK,EAAC;AAAO;gEAChBC,mBAAA,CAEM;EAFDD,KAAK,EAAC;AAAW,I,aACpBC,mBAAA,CAAY,YAAR,KAAG,E;;EAGJD,KAAK,EAAC;AAAM;;;EAIVE,EAAE,EAAC;;;;EAMHA,EAAE,EAAC;;gEACaD,mBAAA,CAAM;;EAGpBD,KAAK,EAAC;AAAiB;;EACvBG,IAAI,EAAC,aAAa;EAACH,KAAK,EAAC;;;iEAE5BC,mBAAA,CAAyC;EAAtCD,KAAK,EAAC,UAAU;EAACG,IAAI,EAAC;GAAQ,MAAI;;EAKtCH,KAAK,EAAC;AAAO;;EACVI,MAAM,EAAC;AAAM;;EACZJ,KAAK,EAAC;AAAkB;iEAE3BC,mBAAA,CAA4D;EAAzDD,KAAK,EAAC,kBAAkB;EAACG,IAAI,EAAC;GAAc,WAAS;;;;6DAhChEE,YAAA,CAAUC,iBAAA,GACVL,mBAAA,CAmCM,OAnCNM,UAmCM,GAlCJC,UAEM,EAENP,mBAAA,CAoBM,OApBNQ,UAoBM,GAnBJR,mBAAA,CAkBO;IAlBAS,QAAM,EAAAC,MAAA,QAAAA,MAAA,MAAAC,cAAA,KAAAC,IAAA,KAAUC,QAAA,CAAAC,SAAA,IAAAD,QAAA,CAAAC,SAAA,IAAAF,IAAA,CAAS;sBAC9BZ,mBAAA,CACsB;+DADNe,KAAA,CAAAC,KAAK,GAAAC,MAAA;IAAEC,IAAI,EAAC,MAAM;IAACjB,EAAE,EAAC,UAAU;IAAEF,KAAK,EAAAoB,eAAA;MAAAC,YAAA,EAAkBL,KAAA,CAAAM;IAAkB;IACzFC,WAAW,EAAC;0CADEP,KAAA,CAAAC,KAAK,E,GAEDD,KAAA,CAAAQ,WAAW,I,cAA/BC,mBAAA,CAEI,KAFJC,UAEI,EAF6B,uCAEjC,K,mDAEAzB,mBAAA,CACuB;+DADPe,KAAA,CAAAW,QAAQ,GAAAT,MAAA;IAAEC,IAAI,EAAC,UAAU;IAACjB,EAAE,EAAC,UAAU;IAAEF,KAAK,EAAAoB,eAAA;MAAAC,YAAA,EAAkBL,KAAA,CAAAM;IAAkB;IAChGC,WAAW,EAAC;0CADEP,KAAA,CAAAW,QAAQ,E,GAEJX,KAAA,CAAAY,cAAc,I,cAAlCH,mBAAA,CAGI,KAHJI,UAGI,G,iBAHgC,oBACjB,GAAAC,UAAM,E,iBAAA,uCAEzB,E,wCACA7B,mBAAA,CAIM,OAJN8B,UAIM,GAHJ9B,mBAAA,CACoE,KADpE+B,UACoE,GAD5B/B,mBAAA,CACwB;IADhBD,KAAK,EAAAoB,eAAA;MAAAa,YAAA,EAAkBjB,KAAA,CAAAkB,QAAQ;MAAAC,MAAA,GAAWnB,KAAA,CAAAkB;IAAQ;IAC7FE,QAAQ,EAAEpB,KAAA,CAAAkB,QAAQ;IAAEf,IAAI,EAAC,QAAQ;IAACjB,EAAE,EAAC,OAAO;IAACmC,KAAK,EAAC;iDACxDC,WAAyC,C,gCAK/CrC,mBAAA,CAOM,OAPNsC,WAOM,GANJtC,mBAAA,CAKO,QALPuC,WAKO,GAJLvC,mBAAA,CAGM,OAHNwC,WAGM,GAFJxC,mBAAA,CAA6D;IAA1DD,KAAK,EAAC,kBAAkB;IAAE0C,OAAK,EAAA/B,MAAA,QAAAA,MAAA,UAAAE,IAAA,KAAEC,QAAA,CAAA6B,UAAA,IAAA7B,QAAA,CAAA6B,UAAA,IAAA9B,IAAA,CAAU;KAAE,WAAS,GACzD+B,WAA4D,C"},"metadata":{},"sourceType":"module","externalDependencies":[]}