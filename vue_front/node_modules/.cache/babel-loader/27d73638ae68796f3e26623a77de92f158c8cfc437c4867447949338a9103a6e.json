{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createBlock as _createBlock, withCtx as _withCtx } from \"vue\";\nimport _imports_0 from '../assets/img/setting_btn.png';\nconst _hoisted_1 = {\n  class: \"mypage_profile_set\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h1\", {\n  class: \"mypage_title\"\n}, \"마이페이지\", -1 /* HOISTED */);\nconst _hoisted_3 = {\n  class: \"myprofile\"\n};\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"profileimg\"\n}, [/*#__PURE__*/_createElementVNode(\"img\", {\n  class: \"profile\",\n  src: \"http://localhost:3000/downloadProfile/${email}/${image}\",\n  alt: \"profileExample\"\n}), /*#__PURE__*/_createElementVNode(\"a\", {\n  href: \"/updateprofile\"\n}, [/*#__PURE__*/_createElementVNode(\"img\", {\n  class: \"setting_icon\",\n  src: _imports_0,\n  alt: \"setting_btn\"\n})])], -1 /* HOISTED */);\nconst _hoisted_5 = {\n  class: \"nickname\"\n};\nconst _hoisted_6 = {\n  class: \"email\"\n};\nconst _hoisted_7 = {\n  class: \"course\"\n};\nconst _hoisted_8 = {\n  class: \"course\"\n};\nconst _hoisted_9 = {\n  class: \"course\"\n};\nconst _hoisted_10 = /*#__PURE__*/_createElementVNode(\"button\", {\n  class: \"comment_edit\"\n}, \"  편집  \", -1 /* HOISTED */);\nconst _hoisted_11 = {\n  class: \"commentlist\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_gnbBarLogin = _resolveComponent(\"gnbBarLogin\");\n  const _component_boardList = _resolveComponent(\"boardList\");\n  const _component_TabItem = _resolveComponent(\"TabItem\");\n  const _component_commentList = _resolveComponent(\"commentList\");\n  const _component_TabsWrapper = _resolveComponent(\"TabsWrapper\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_gnbBarLogin), _createElementVNode(\"section\", _hoisted_1, [_createCommentVNode(\" ----------------------------------------------------------------------------------------------------------------------------------- \"), _hoisted_2, _createElementVNode(\"div\", _hoisted_3, [_hoisted_4, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.myPageNick, (user, i) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"nickname_email\",\n      key: i\n    }, [_createElementVNode(\"div\", _hoisted_5, _toDisplayString(user.USER_NICKNAME), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_6, _toDisplayString(user.USER_EMAIL), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])]), _createElementVNode(\"section\", null, [_createVNode(_component_TabsWrapper, null, {\n    default: _withCtx(() => [_createVNode(_component_TabItem, {\n      title: \"내코스\",\n      onClick: _cache[3] || (_cache[3] = () => {})\n    }, {\n      default: _withCtx(() => [_createElementVNode(\"div\", null, [!$data.editMode ? (_openBlock(), _createElementBlock(\"button\", {\n        key: 0,\n        class: \"edit\",\n        onClick: _cache[0] || (_cache[0] = (...args) => $options.toggleEditMode && $options.toggleEditMode(...args))\n      }, \"   편집   \")) : _createCommentVNode(\"v-if\", true), $data.editMode ? (_openBlock(), _createElementBlock(\"button\", {\n        key: 1,\n        class: \"delete\",\n        onClick: _cache[1] || (_cache[1] = (...args) => $options.deleteComment && $options.deleteComment(...args))\n      }, \"   삭제   \")) : _createCommentVNode(\"v-if\", true), $data.editMode ? (_openBlock(), _createElementBlock(\"button\", {\n        key: 2,\n        class: \"cancel\",\n        onClick: _cache[2] || (_cache[2] = (...args) => $options.cancelEdit && $options.cancelEdit(...args))\n      }, \"   취소   \")) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"div\", _hoisted_7, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.boardList, item => {\n        return _openBlock(), _createBlock(_component_boardList, {\n          boardList: item,\n          key: item.BRD_ID,\n          editMode: $data.editMode\n        }, null, 8 /* PROPS */, [\"boardList\", \"editMode\"]);\n      }), 128 /* KEYED_FRAGMENT */))])]),\n\n      _: 1 /* STABLE */\n    }), _createVNode(_component_TabItem, {\n      title: \"최근에 본 코스\"\n    }, {\n      default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_8, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.boardList, item => {\n        return _openBlock(), _createBlock(_component_boardList, {\n          boardList: item,\n          key: item.id,\n          hideBrdOpen: true\n        }, null, 8 /* PROPS */, [\"boardList\"]);\n      }), 128 /* KEYED_FRAGMENT */))])]),\n\n      _: 1 /* STABLE */\n    }), _createVNode(_component_TabItem, {\n      title: \"좋아요 리스트\"\n    }, {\n      default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_9, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.boardList, item => {\n        return _openBlock(), _createBlock(_component_boardList, {\n          boardList: item,\n          key: item.id,\n          hideBrdOpen: true\n        }, null, 8 /* PROPS */, [\"boardList\"]);\n      }), 128 /* KEYED_FRAGMENT */))])]),\n\n      _: 1 /* STABLE */\n    }), _createVNode(_component_TabItem, {\n      title: \"내가 쓴 댓글\"\n    }, {\n      default: _withCtx(() => [_hoisted_10, _createElementVNode(\"div\", _hoisted_11, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.commentList, item => {\n        return _openBlock(), _createBlock(_component_commentList, {\n          commentList: item,\n          key: item.id\n        }, null, 8 /* PROPS */, [\"commentList\"]);\n      }), 128 /* KEYED_FRAGMENT */))])]),\n\n      _: 1 /* STABLE */\n    })]),\n\n    _: 1 /* STABLE */\n  })])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_imports_0","class","_createElementVNode","src","alt","href","_createVNode","_component_gnbBarLogin","_hoisted_1","_createCommentVNode","_hoisted_2","_hoisted_3","_hoisted_4","_createElementBlock","_Fragment","_renderList","$data","myPageNick","user","i","key","_hoisted_5","_toDisplayString","USER_NICKNAME","_hoisted_6","USER_EMAIL","_component_TabsWrapper","_component_TabItem","title","onClick","_cache","editMode","args","$options","toggleEditMode","deleteComment","cancelEdit","_hoisted_7","$setup","boardList","item","_createBlock","_component_boardList","BRD_ID","_hoisted_8","id","hideBrdOpen","_hoisted_9","_hoisted_10","_hoisted_11","commentList","_component_commentList"],"sources":["/Users/seoyeonju/Library/CloudStorage/OneDrive-계원예술대학교/풀스텍/weave-wego 2/vue_front/src/views/myPage.vue"],"sourcesContent":["<style src=\"../assets/css/mypage.css\"></style>\r\n<style src=\"../assets/css/reset.css\"></style>\r\n<template>\r\n  <gnbBarLogin />\r\n\r\n  <section class=\"mypage_profile_set\">\r\n    <!-- ----------------------------------------------------------------------------------------------------------------------------------- -->\r\n    <h1 class=\"mypage_title\">마이페이지</h1>\r\n    <div class=\"myprofile\">\r\n      <div class=\"profileimg\">\r\n        <img\r\n          class=\"profile\"\r\n          src=\"http://localhost:3000/downloadProfile/${email}/${image}\"\r\n          alt=\"profileExample\"\r\n        />\r\n        <a href=\"/updateprofile\"\r\n          ><img\r\n            class=\"setting_icon\"\r\n            src=\"../assets/img/setting_btn.png\"\r\n            alt=\"setting_btn\"\r\n        /></a>\r\n      </div>\r\n      <div class=\"nickname_email\" :key=\"i\" v-for=\"(user, i) in myPageNick\">\r\n        <div class=\"nickname\">{{ user.USER_NICKNAME }}</div>\r\n        <div class=\"email\">{{ user.USER_EMAIL }}</div>\r\n      </div>\r\n    </div>\r\n  </section>\r\n  <section>\r\n    <TabsWrapper>\r\n      <TabItem title=\"내코스\" @click=\"\">\r\n        <div>\r\n          <button v-if=\"!editMode\" class=\"edit\" @click=\"toggleEditMode\">\r\n            &nbsp;&nbsp;편집&nbsp;&nbsp;\r\n          </button>\r\n          <button v-if=\"editMode\" class=\"delete\" @click=\"deleteComment\">\r\n            &nbsp;&nbsp;삭제&nbsp;&nbsp;\r\n          </button>\r\n          <button v-if=\"editMode\" class=\"cancel\" @click=\"cancelEdit\">\r\n            &nbsp;&nbsp;취소&nbsp;&nbsp;\r\n          </button>\r\n        </div>\r\n\r\n        <div class=\"course\">\r\n          <boardList\r\n            v-for=\"item in boardList\"\r\n            :boardList=\"item\"\r\n            :key=\"item.BRD_ID\"\r\n            :editMode=\"editMode\"\r\n          >\r\n          </boardList>\r\n        </div>\r\n      </TabItem>\r\n      <TabItem title=\"최근에 본 코스\">\r\n        <div class=\"course\">\r\n          <boardList\r\n            v-for=\"item in boardList\"\r\n            :boardList=\"item\"\r\n            :key=\"item.id\"\r\n            :hideBrdOpen=\"true\"\r\n          /></div\r\n      ></TabItem>\r\n      <TabItem title=\"좋아요 리스트\">\r\n        <div class=\"course\">\r\n          <boardList\r\n            v-for=\"item in boardList\"\r\n            :boardList=\"item\"\r\n            :key=\"item.id\"\r\n            :hideBrdOpen=\"true\"\r\n          /></div\r\n      ></TabItem>\r\n      <TabItem title=\"내가 쓴 댓글\"\r\n        ><button class=\"comment_edit\">&nbsp;&nbsp;편집&nbsp;&nbsp;</button>\r\n\r\n        <div class=\"commentlist\">\r\n          <commentList\r\n            v-for=\"item in commentList\"\r\n            :commentList=\"item\"\r\n            :key=\"item.id\"\r\n          />\r\n        </div>\r\n      </TabItem>\r\n    </TabsWrapper>\r\n  </section>\r\n</template>\r\n\r\n<script>\r\nimport { ref } from \"vue\";\r\nimport gnbBarLogin from \"../components/gnbBarLogin.vue\";\r\nimport TabsWrapper from \"../components/TabsWrapper.vue\";\r\nimport TabItem from \"../components/TabItem.vue\";\r\nimport boardList from \"../components/boardList.vue\";\r\nimport commentList from \"../components/commentList.vue\";\r\nimport axios from \"axios\";\r\naxios.defaults.baseURL = \"http://localhost:3000\";\r\naxios.defaults.headers.post[\"Content-Type\"] = \"application/json;charset=utf-8\";\r\naxios.defaults.headers.post[\"Access-Control-Allow-Origin\"] = \"*\";\r\n\r\nexport default {\r\n  components: {\r\n    gnbBarLogin,\r\n    TabsWrapper,\r\n    TabItem,\r\n    boardList,\r\n    commentList,\r\n  },\r\n  data() {\r\n    return {\r\n      email: \"\",\r\n      nick: \"\",\r\n      image: \"\",\r\n      provider: \"\",\r\n      editMode: false,\r\n      myPageNick: {},\r\n    };\r\n  },\r\n  // --------------------------------------------------------------------------------------------------------------------------------------\r\n  created() {\r\n    this.getMyPageData();\r\n  },\r\n  mounted() {\r\n    (this.email = localStorage.getItem(\"userID\")),\r\n      (this.nick = localStorage.getItem(\"userNick\")),\r\n      (this.image = localStorage.getItem(\"userImage\")),\r\n      (this.provider = localStorage.getItem(\"userProvider\"));\r\n  },\r\n  methods: {\r\n    toggleEditMode() {\r\n      this.editMode = true;\r\n    },\r\n    deleteComment() {\r\n      // 삭제 로직을 구현\r\n    },\r\n    cancelEdit() {\r\n      this.editMode = false;\r\n    },\r\n    async getMyPageData() {\r\n      //마이페이지 내 정보----------------------------------------------------------------------------------------------------------------------\r\n      try {\r\n        this.myPageNick = await axios.post(\"/mypage/myPage\", {\r\n          userEmail: \"user1@example.com\", // userEmail 값을 적절히 설정\r\n        });\r\n\r\n        this.myPageNick = this.myPageNick.data; // 서버에서 받은 데이터를 myPageData에 할당\r\n        console.log(this.myPageNick);\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    },\r\n  },\r\n  setup() {\r\n    const boardListData = ref([\r\n      {\r\n        BRD_ID: 0,\r\n        BRD_HASHTAG: \"#종로구 #중구 #식사 #전시\",\r\n        BRD_TITLE: \"서울 실내 데이트 코스 추천!\",\r\n        BRD_CREATED_AT: \"2023-06-22\",\r\n        likecount: 10,\r\n        BRD_VIEWCOUNT: 100,\r\n        BRD_OPEN: \"공개\",\r\n        checked: false,\r\n      },\r\n      {\r\n        BRD_ID: 1,\r\n        BRD_HASHTAG: \"#서초구 #강남구 #카페 #쇼룸,편집샵\",\r\n        BRD_TITLE: \"테스트 제목2\",\r\n        BRD_CREATED_AT: \"2023-06-22\",\r\n        likecount: 20,\r\n        BRD_VIEWCOUNT: 200,\r\n        BRD_OPEN: \"비공개\",\r\n        checked: false,\r\n      },\r\n      {\r\n        BRD_ID: 2,\r\n        BRD_HASHTAG: \"#마포구 #식사 #전시\",\r\n        BRD_TITLE: \"테스트 제목3\",\r\n        BRD_CREATED_AT: \"2023-06-22\",\r\n        likecount: 30,\r\n        BRD_VIEWCOUNT: 300,\r\n        BRD_OPEN: \"공개\",\r\n        checked: false,\r\n      },\r\n    ]);\r\n    const commentListData = ref([\r\n      {\r\n        COM_ID: 0,\r\n        COM_NUM: 0,\r\n        COM_TITLE: \"댓글이 포함된 본문의 제목\",\r\n        COM_CREATED_AT: \"2023-06-26\",\r\n        COM_COMMENT: \"댓글내용댓글내용댓글애용\",\r\n      },\r\n      {\r\n        COM_ID: 1,\r\n        COM_NUM: 1,\r\n        COM_TITLE: \"댓글이 포함된 본문의 제목1\",\r\n        COM_CREATED_AT: \"2023-06-26\",\r\n        COM_COMMENT: \"댓글내용댓글내용댓글애용1\",\r\n      },\r\n      {\r\n        COM_ID: 2,\r\n        COM_NUM: 2,\r\n        COM_TITLE: \"댓글이 포함된 본문의 제목2\",\r\n        COM_CREATED_AT: \"2023-06-26\",\r\n        COM_COMMENT: \"댓글내용댓글내용댓글애용2\",\r\n      },\r\n    ]);\r\n\r\n    return {\r\n      boardList: boardListData,\r\n      commentList: commentListData,\r\n    };\r\n  },\r\n};\r\n</script>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}