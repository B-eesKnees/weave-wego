{"ast":null,"code":"import \"core-js/modules/web.url-search-params.size.js\";\nimport gnbBar from \"../components/gnbBar.vue\";\nimport axios from \"axios\";\naxios.defaults.baseURL = \"http://localhost:3000\";\naxios.defaults.headers.post[\"Content-Type\"] = \"application/json;charset=utf-8\";\naxios.defaults.headers.post[\"Access-Control-Allow-Origin\"] = \"*\";\nexport default {\n  components: {\n    gnbBar\n  },\n  data() {\n    return {\n      email: \"\",\n      password: \"\",\n      password2: \"\",\n      nickname: \"\",\n      phone_num: \"\",\n      sex: \"\",\n      agegroup: \"\",\n      image: \"\",\n      imageUploaded: null,\n      type: false,\n      email_check: false,\n      password_check: false,\n      password_check2: false,\n      nickname_check: false,\n      sex_check: false,\n      age_range_check: false,\n      phone_check: false,\n      error_border_check: false,\n      allcheck: true,\n      allcheck1: true,\n      allcheck2: true,\n      allcheck3: true,\n      allcheck4: true,\n      allcheck5: true,\n      allcheck6: true,\n      allcheck7: true,\n      emailcheck: false\n    };\n  },\n  watch: {\n    email: function () {\n      this.checkEmail();\n      this.inputAllCheck();\n      this.emailCheckForm();\n    },\n    password: function () {\n      this.checkPassword();\n      this.inputAllCheck();\n    },\n    password2: function () {\n      this.checkPassword2();\n      this.inputAllCheck();\n    },\n    nickname: function () {\n      this.checknickname();\n      this.inputAllCheck();\n    },\n    sex: function () {\n      this.checksex();\n      this.inputAllCheck();\n    },\n    agegroup: function () {\n      this.checkage_range();\n      this.inputAllCheck();\n    },\n    phone_num: function () {\n      this.checkphone();\n      this.inputAllCheck();\n    }\n  },\n  methods: {\n    movetomain() {\n      window.location.href = \"/\";\n    },\n    checkEmail() {\n      // 이메일 형식 검사\n      const validateEmail = /^[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*.[a-zA-Z]{2,3}$/i;\n      if (this.email === \"\" || !validateEmail.test(this.email) || !this.email) {\n        this.email_check = true;\n        this.error_border_check = true;\n        this.allcheck1 = true; //입력조건 안맞을시 true\n      } else {\n        this.email_check = false;\n        this.error_border_check = false;\n        this.allcheck1 = false;\n      }\n    },\n    checkPassword() {\n      // 최소 8자리 이상 영문 대소문자, 숫자, 특수문자가 각각 1개 이상\n      const validatePassword = /^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$ %^&*-]).{8,}$/;\n      if (this.password === \"\" || !validatePassword.test(this.password) || !this.password) {\n        this.password_check = true;\n        this.error_border_check = true;\n        this.allcheck2 = true;\n      } else {\n        this.password_check = false;\n        this.error_border_check = false;\n        this.allcheck2 = false;\n      }\n    },\n    checkPassword2() {\n      if (this.password !== this.password2) {\n        this.password_check2 = true;\n        this.error_border_check = true;\n        this.allcheck3 = true;\n      } else {\n        this.password_check2 = false;\n        this.error_border_check = false;\n        this.allcheck3 = false;\n      }\n    },\n    checknickname() {\n      if (!this.nickname) {\n        this.nickname_check2 = true;\n        this.error_border_check = true;\n        this.allcheck4 = true;\n      } else {\n        this.nickname_check2 = false;\n        this.error_border_check = false;\n        this.allcheck4 = false;\n      }\n    },\n    checksex() {\n      if (this.sex == null) {\n        //선택했으면\n        this.allcheck5 = true;\n      } else {\n        this.allcheck5 = false;\n      }\n    },\n    checkage_range() {\n      if (this.agegroup == null) {\n        this.allcheck6 = true;\n      } else {\n        this.allcheck6 = false;\n      }\n    },\n    checkphone() {\n      const validatephone = /^\\d{3}\\d{3,4}\\d{4}$/;\n      if (this.phone_num === \"\" || !validatephone.test(this.phone_num) || !this.phone_num) {\n        this.phone_check = true;\n        this.error_border_check = true;\n        this.allcheck7 = true;\n      } else {\n        this.phone_check = false;\n        this.error_border_check = false;\n        this.allcheck7 = false;\n      }\n    },\n    inputAllCheck() {\n      if (this.allcheck1 || this.allcheck2 || this.allcheck3 || this.allcheck4 || this.allcheck5 || this.allcheck6 || this.allcheck7 || this.emailcheck) {\n        //하나라도 입력조건이 안맞을시\n        this.allcheck = true; //버튼 비활성\n      } else {\n        this.allcheck = false;\n      }\n    },\n    emailCheckForm() {\n      axios({\n        url: \"http://localhost:3000/auth/checkemail\",\n        method: \"POST\",\n        data: {\n          email: this.email\n        }\n      }).then(async res => {\n        if (res.data.message == \"존재하는 이메일입니다.\") {\n          this.emailcheck = 0;\n        } else if (res.data.message == \"사용가능한 닉네임입니다.\") {\n          this.emailcheck = 1;\n        } else {\n          this.emailcheck = false;\n        }\n      }).catch(error => {\n        alert(error);\n      });\n    },\n    nicknameCheckForm() {\n      axios({\n        url: \"http://localhost:3000/auth/checknick\",\n        method: \"POST\",\n        data: {\n          nickname: this.nickname\n        }\n      }).then(async res => {\n        if (res.data.message == \"존재하는 닉네임입니다.\") {\n          this.allcheck = true;\n        } else {\n          this.allcheck = false;\n        }\n        alert(res.data.message);\n      }).catch(error => {\n        alert(error);\n      });\n    },\n    joinForm() {\n      //백엔드로 회원가입 정보 전달\n      if (this.sex === \"female\") {\n        this.sex = \"f\";\n      } else {\n        this.sex = \"m\";\n      }\n      axios({\n        url: \"http://localhost:3000/auth/join\",\n        method: \"POST\",\n        data: {\n          email: this.email,\n          password: this.password,\n          nickname: this.nickname,\n          sex: this.sex,\n          agegroup: this.agegroup,\n          phone_num: this.phone_num\n        }\n      }).then(async res => {\n        alert(res.data.message);\n        await this.uploadFile(this.image);\n      }).catch(error => {\n        alert(error);\n      });\n    },\n    async uploadFile(files) {\n      if (!files) {\n        return; // 파일이 없으면 함수 종료\n      }\n\n      window.location.href = \"/\";\n      let name = files.name;\n      let data = await this.$base64(files);\n      axios({\n        url: `http://localhost:3000/uploadProfile/${this.email}/${name}`,\n        method: \"POST\",\n        data: {\n          data: data\n        }\n      }).then(res => {\n        window.location.href = \"/\";\n      }).catch(error => {\n        alert(error);\n      });\n    },\n    upload() {\n      this.type = true;\n      const files = this.$refs.image.files;\n      if (files && files.length > 0) {\n        this.image = files[0]; // 사용자가 올린 이미지\n        console.log(this.image);\n        // URL.createObjectURL로 사용자가 올린 이미지를 URL로 만들어서 화면에 표시할 수 있게 한다. img 태그의 src값에 바인딩해준다\n        this.imageUploaded = URL.createObjectURL(this.image);\n      }\n    }\n  }\n};","map":{"version":3,"names":["gnbBar","axios","defaults","baseURL","headers","post","components","data","email","password","password2","nickname","phone_num","sex","agegroup","image","imageUploaded","type","email_check","password_check","password_check2","nickname_check","sex_check","age_range_check","phone_check","error_border_check","allcheck","allcheck1","allcheck2","allcheck3","allcheck4","allcheck5","allcheck6","allcheck7","emailcheck","watch","checkEmail","inputAllCheck","emailCheckForm","checkPassword","checkPassword2","checknickname","checksex","checkage_range","checkphone","methods","movetomain","window","location","href","validateEmail","test","validatePassword","nickname_check2","validatephone","url","method","then","res","message","catch","error","alert","nicknameCheckForm","joinForm","uploadFile","files","name","$base64","upload","$refs","length","console","log","URL","createObjectURL"],"sources":["/Users/seoyeonju/Library/CloudStorage/OneDrive-계원예술대학교/풀스텍/weave-wego/vue_front/src/views/userJoin.vue"],"sourcesContent":["<template>\r\n  <gnbBar />\r\n  <div class=\"join\">\r\n    <div class=\"title-bar\">\r\n      <h5>회원가입</h5>\r\n      <form @submit.prevent=\"joinForm\">\r\n        <label class=\"title-bar-label\" for=\"file\">\r\n          <div class=\"title-bar-btn\">+</div>\r\n          <img\r\n            v-if=\"type\"\r\n            class=\"img_style\"\r\n            :src=\"imageUploaded\"\r\n            alt=\"올린 이미지\"\r\n          />\r\n          <img\r\n            v-else\r\n            id=\"img_style\"\r\n            src=\"../assets/img/profileExample.png\"\r\n            alt=\"올린 이미지\"\r\n          />\r\n          <br />\r\n        </label>\r\n\r\n        <input id=\"file\" type=\"file\" ref=\"image\" @change=\"upload\" />\r\n      </form>\r\n    </div>\r\n    <div class=\"wrap\">\r\n      <form @submit.prevent=\"joinForm\">\r\n        <label for=\"email\">아이디</label>\r\n        <input\r\n          v-model=\"email\"\r\n          type=\"text\"\r\n          id=\"email\"\r\n          placeholder=\"이메일 입력\"\r\n          class=\"width\"\r\n        />\r\n        <form @submit.prevent=\"emailCheckForm\">\r\n          <a href=\"/auth/checkemail\"\r\n            ><button type=\"submit\" id=\"email_check\" class=\"username_submit\">\r\n              중복확인\r\n            </button></a\r\n          >\r\n        </form>\r\n        <p id=\"error\" v-if=\"email_check\">\r\n          이메일주소를 정확히 입력해주세요. 예)abcd@naver.com\r\n        </p>\r\n        <p id=\"error\" v-if=\"emailcheck == 0\">존재하는 닉네임입니다.</p>\r\n        <p id=\"error\" v-else-if=\"emailcheck == 1\">사용가능한 닉네임입니다.</p>\r\n        <label for=\"password\">비밀번호</label>\r\n        <input\r\n          v-model=\"password\"\r\n          type=\"password\"\r\n          id=\"password\"\r\n          placeholder=\"비밀번호 입력\"\r\n        /><br />\r\n        <p id=\"error\" v-if=\"password_check\">\r\n          비밀번호를 정확히 입력해주세요.<br />\r\n          *8자리 이상 영문 대소문자, 숫자, 특수문자가 각각 1개 이상\r\n        </p>\r\n        <label for=\"password_check2\">비밀번호 확인</label>\r\n        <input\r\n          v-model=\"password2\"\r\n          type=\"password\"\r\n          id=\"password_check\"\r\n          placeholder=\"비밀번호 확인 입력\"\r\n        /><br />\r\n        <p id=\"error\" v-if=\"password_check2\">비밀번호가 일치하지 않습니다.</p>\r\n        <label for=\"nickname\">별명</label>\r\n        <input\r\n          v-model=\"nickname\"\r\n          type=\"text\"\r\n          id=\"nickname\"\r\n          placeholder=\"활동명 입력\"\r\n          class=\"width\"\r\n        />\r\n        <form @submit.prevent=\"nicknameCheckForm\">\r\n          <a href=\"/auth/checknick\"\r\n            ><button type=\"submit\" id=\"nickname_check\" class=\"username_submit\">\r\n              중복확인\r\n            </button></a\r\n          >\r\n        </form>\r\n        <p id=\"error\" v-if=\"nickname_check\">닉네임을 입력해주세요.</p>\r\n        <div class=\"gender\">\r\n          <label for=\"sex\">성별</label>\r\n          <input\r\n            v-model=\"sex\"\r\n            type=\"radio\"\r\n            name=\"gender\"\r\n            value=\"male\"\r\n            class=\"input_sex\"\r\n          />남자\r\n          <input\r\n            v-model=\"sex\"\r\n            type=\"radio\"\r\n            name=\"gender\"\r\n            value=\"female\"\r\n            class=\"input_sex\"\r\n          />여자\r\n        </div>\r\n        <p id=\"error\" v-if=\"sex_check\">성별을 선택하세요.</p>\r\n        <div class=\"age_range\">\r\n          <label for=\"age_range\">나이대</label>\r\n          <input\r\n            v-model=\"agegroup\"\r\n            type=\"radio\"\r\n            name=\"agegroup\"\r\n            value=\"ten\"\r\n            class=\"input_sex\"\r\n          />10대\r\n          <input\r\n            v-model=\"agegroup\"\r\n            type=\"radio\"\r\n            name=\"agegroup\"\r\n            value=\"20\"\r\n            class=\"input_sex\"\r\n          />20대\r\n          <input\r\n            v-model=\"agegroup\"\r\n            type=\"radio\"\r\n            name=\"agegroup\"\r\n            value=\"30\"\r\n            class=\"input_sex\"\r\n          />30대\r\n          <input\r\n            v-model=\"agegroup\"\r\n            type=\"radio\"\r\n            name=\"agegroup\"\r\n            value=\"40\"\r\n            class=\"input_sex\"\r\n          />40대\r\n          <input\r\n            v-model=\"agegroup\"\r\n            type=\"radio\"\r\n            name=\"agegroup\"\r\n            value=\"50\"\r\n            class=\"input_sex\"\r\n          />50대\r\n          <input\r\n            v-model=\"agegroup\"\r\n            type=\"radio\"\r\n            name=\"agegroup\"\r\n            value=\"60\"\r\n            class=\"input_sex\"\r\n          />60세 이상\r\n        </div>\r\n        <p id=\"error\" v-if=\"age_range_check\">나이대를 선택하세요.</p>\r\n        <label for=\"phone_num\">전화번호</label>\r\n        <input\r\n          v-model=\"phone_num\"\r\n          type=\"text\"\r\n          id=\"phone_num\"\r\n          placeholder=\"전화번호 입력\"\r\n        /><br />\r\n        <p id=\"error\" v-if=\"phone_check\">\r\n          전화번호를 정확히 입력해주세요. 예)01066090043\r\n        </p>\r\n        <a href=\"/auth/join\"\r\n          ><input\r\n            type=\"submit\"\r\n            :class=\"{ error_submit: allcheck, submit: !allcheck }\"\r\n            :disabled=\"allcheck\"\r\n            id=\"login\"\r\n            value=\"가입하기\"\r\n        /></a>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport gnbBar from \"../components/gnbBar.vue\";\r\n\r\nimport axios from \"axios\";\r\naxios.defaults.baseURL = \"http://localhost:3000\";\r\naxios.defaults.headers.post[\"Content-Type\"] = \"application/json;charset=utf-8\";\r\naxios.defaults.headers.post[\"Access-Control-Allow-Origin\"] = \"*\";\r\n\r\nexport default {\r\n  components: { gnbBar },\r\n  data() {\r\n    return {\r\n      email: \"\",\r\n      password: \"\",\r\n      password2: \"\",\r\n      nickname: \"\",\r\n      phone_num: \"\",\r\n      sex: \"\",\r\n      agegroup: \"\",\r\n      image: \"\",\r\n      imageUploaded: null,\r\n      type: false,\r\n\r\n      email_check: false,\r\n      password_check: false,\r\n      password_check2: false,\r\n      nickname_check: false,\r\n      sex_check: false,\r\n      age_range_check: false,\r\n      phone_check: false,\r\n      error_border_check: false,\r\n\r\n      allcheck: true,\r\n      allcheck1: true,\r\n      allcheck2: true,\r\n      allcheck3: true,\r\n      allcheck4: true,\r\n      allcheck5: true,\r\n      allcheck6: true,\r\n      allcheck7: true,\r\n      emailcheck: false,\r\n    };\r\n  },\r\n  watch: {\r\n    email: function () {\r\n      this.checkEmail();\r\n      this.inputAllCheck();\r\n      this.emailCheckForm();\r\n    },\r\n    password: function () {\r\n      this.checkPassword();\r\n      this.inputAllCheck();\r\n    },\r\n    password2: function () {\r\n      this.checkPassword2();\r\n      this.inputAllCheck();\r\n    },\r\n    nickname: function () {\r\n      this.checknickname();\r\n      this.inputAllCheck();\r\n    },\r\n    sex: function () {\r\n      this.checksex();\r\n      this.inputAllCheck();\r\n    },\r\n    agegroup: function () {\r\n      this.checkage_range();\r\n      this.inputAllCheck();\r\n    },\r\n    phone_num: function () {\r\n      this.checkphone();\r\n      this.inputAllCheck();\r\n    },\r\n  },\r\n  methods: {\r\n    movetomain() {\r\n      window.location.href = \"/\";\r\n    },\r\n    checkEmail() {\r\n      // 이메일 형식 검사\r\n      const validateEmail =\r\n        /^[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*.[a-zA-Z]{2,3}$/i;\r\n\r\n      if (this.email === \"\" || !validateEmail.test(this.email) || !this.email) {\r\n        this.email_check = true;\r\n        this.error_border_check = true;\r\n        this.allcheck1 = true; //입력조건 안맞을시 true\r\n      } else {\r\n        this.email_check = false;\r\n        this.error_border_check = false;\r\n        this.allcheck1 = false;\r\n      }\r\n    },\r\n    checkPassword() {\r\n      // 최소 8자리 이상 영문 대소문자, 숫자, 특수문자가 각각 1개 이상\r\n      const validatePassword =\r\n        /^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$ %^&*-]).{8,}$/;\r\n\r\n      if (\r\n        this.password === \"\" ||\r\n        !validatePassword.test(this.password) ||\r\n        !this.password\r\n      ) {\r\n        this.password_check = true;\r\n        this.error_border_check = true;\r\n        this.allcheck2 = true;\r\n      } else {\r\n        this.password_check = false;\r\n        this.error_border_check = false;\r\n        this.allcheck2 = false;\r\n      }\r\n    },\r\n    checkPassword2() {\r\n      if (this.password !== this.password2) {\r\n        this.password_check2 = true;\r\n        this.error_border_check = true;\r\n        this.allcheck3 = true;\r\n      } else {\r\n        this.password_check2 = false;\r\n        this.error_border_check = false;\r\n        this.allcheck3 = false;\r\n      }\r\n    },\r\n    checknickname() {\r\n      if (!this.nickname) {\r\n        this.nickname_check2 = true;\r\n        this.error_border_check = true;\r\n        this.allcheck4 = true;\r\n      } else {\r\n        this.nickname_check2 = false;\r\n        this.error_border_check = false;\r\n        this.allcheck4 = false;\r\n      }\r\n    },\r\n    checksex() {\r\n      if (this.sex == null) {\r\n        //선택했으면\r\n        this.allcheck5 = true;\r\n      } else {\r\n        this.allcheck5 = false;\r\n      }\r\n    },\r\n    checkage_range() {\r\n      if (this.agegroup == null) {\r\n        this.allcheck6 = true;\r\n      } else {\r\n        this.allcheck6 = false;\r\n      }\r\n    },\r\n    checkphone() {\r\n      const validatephone = /^\\d{3}\\d{3,4}\\d{4}$/;\r\n\r\n      if (\r\n        this.phone_num === \"\" ||\r\n        !validatephone.test(this.phone_num) ||\r\n        !this.phone_num\r\n      ) {\r\n        this.phone_check = true;\r\n        this.error_border_check = true;\r\n        this.allcheck7 = true;\r\n      } else {\r\n        this.phone_check = false;\r\n        this.error_border_check = false;\r\n        this.allcheck7 = false;\r\n      }\r\n    },\r\n    inputAllCheck() {\r\n      if (\r\n        this.allcheck1 ||\r\n        this.allcheck2 ||\r\n        this.allcheck3 ||\r\n        this.allcheck4 ||\r\n        this.allcheck5 ||\r\n        this.allcheck6 ||\r\n        this.allcheck7 ||\r\n        this.emailcheck\r\n      ) {\r\n        //하나라도 입력조건이 안맞을시\r\n        this.allcheck = true; //버튼 비활성\r\n      } else {\r\n        this.allcheck = false;\r\n      }\r\n    },\r\n    emailCheckForm() {\r\n      axios({\r\n        url: \"http://localhost:3000/auth/checkemail\",\r\n        method: \"POST\",\r\n        data: {\r\n          email: this.email,\r\n        },\r\n      })\r\n        .then(async (res) => {\r\n          if (res.data.message == \"존재하는 이메일입니다.\") {\r\n            this.emailcheck = 0;\r\n          } else if (res.data.message == \"사용가능한 닉네임입니다.\") {\r\n            this.emailcheck = 1;\r\n          } else {\r\n            this.emailcheck = false;\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          alert(error);\r\n        });\r\n    },\r\n    nicknameCheckForm() {\r\n      axios({\r\n        url: \"http://localhost:3000/auth/checknick\",\r\n        method: \"POST\",\r\n        data: {\r\n          nickname: this.nickname,\r\n        },\r\n      })\r\n        .then(async (res) => {\r\n          if (res.data.message == \"존재하는 닉네임입니다.\") {\r\n            this.allcheck = true;\r\n          } else {\r\n            this.allcheck = false;\r\n          }\r\n          alert(res.data.message);\r\n        })\r\n        .catch((error) => {\r\n          alert(error);\r\n        });\r\n    },\r\n    joinForm() {\r\n      //백엔드로 회원가입 정보 전달\r\n      if (this.sex === \"female\") {\r\n        this.sex = \"f\";\r\n      } else {\r\n        this.sex = \"m\";\r\n      }\r\n\r\n      axios({\r\n        url: \"http://localhost:3000/auth/join\",\r\n        method: \"POST\",\r\n        data: {\r\n          email: this.email,\r\n          password: this.password,\r\n          nickname: this.nickname,\r\n          sex: this.sex,\r\n          agegroup: this.agegroup,\r\n          phone_num: this.phone_num,\r\n        },\r\n      })\r\n        .then(async (res) => {\r\n          alert(res.data.message);\r\n          await this.uploadFile(this.image);\r\n        })\r\n        .catch((error) => {\r\n          alert(error);\r\n        });\r\n    },\r\n    async uploadFile(files) {\r\n      if (!files) {\r\n        return; // 파일이 없으면 함수 종료\r\n      }\r\n      window.location.href = \"/\";\r\n      let name = files.name;\r\n      let data = await this.$base64(files);\r\n\r\n      axios({\r\n        url: `http://localhost:3000/uploadProfile/${this.email}/${name}`,\r\n        method: \"POST\",\r\n        data: {\r\n          data: data,\r\n        },\r\n      })\r\n        .then((res) => {\r\n          window.location.href = \"/\";\r\n        })\r\n        .catch((error) => {\r\n          alert(error);\r\n        });\r\n    },\r\n    upload() {\r\n      this.type = true;\r\n      const files = this.$refs.image.files;\r\n\r\n      if (files && files.length > 0) {\r\n        this.image = files[0]; // 사용자가 올린 이미지\r\n        console.log(this.image);\r\n        // URL.createObjectURL로 사용자가 올린 이미지를 URL로 만들어서 화면에 표시할 수 있게 한다. img 태그의 src값에 바인딩해준다\r\n        this.imageUploaded = URL.createObjectURL(this.image);\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.join {\r\n  width: 100%;\r\n  height: 100%;\r\n  padding-top: 1.8%;\r\n  margin: 0;\r\n  background-color: white;\r\n  font-family: arial;\r\n  font-size: 14px;\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n}\r\n\r\n#file {\r\n  display: none;\r\n}\r\n\r\n.title-bar-label {\r\n  width: 1%;\r\n}\r\n\r\n.img_style {\r\n  border: 2px solid black;\r\n  border-radius: 50%;\r\n}\r\n\r\ninput[type=\"file\"] {\r\n  position: absolute;\r\n  width: 22px;\r\n  height: 22px;\r\n  left: 50%;\r\n  top: 70%;\r\n  line-height: 24px;\r\n  border: 2px solid black;\r\n  color: white;\r\n  font-size: 22px;\r\n\r\n  background-color: #388265;\r\n  border-radius: 50%;\r\n}\r\n\r\n.title-bar {\r\n  margin-top: 6%;\r\n  text-align: center;\r\n  color: #333333;\r\n  font-size: 30px;\r\n  padding-bottom: 10px;\r\n  position: relative;\r\n}\r\n\r\n.title-bar-btn {\r\n  position: absolute;\r\n  width: 22px;\r\n  height: 22px;\r\n  left: 50%;\r\n  top: 70%;\r\n  text-align: center;\r\n  line-height: 24px;\r\n  border: 2px solid black;\r\n  color: white;\r\n  font-size: 22px;\r\n\r\n  background-color: #388265;\r\n  border-radius: 50%;\r\n}\r\n\r\n.title-bar h5 {\r\n  margin: 24px 0;\r\n}\r\n\r\n.title-bar img {\r\n  width: 50px;\r\n  height: 50px;\r\n}\r\n\r\n.wrap {\r\n  background-color: #ffffff;\r\n  padding: 1%;\r\n  width: 35%;\r\n  min-width: 350px;\r\n  margin: 0 auto;\r\n  border-radius: 6px;\r\n  box-shadow: 0 0 5px #ccc;\r\n  border: 1px solid #fff;\r\n}\r\n\r\nlabel {\r\n  margin-right: 3%;\r\n  display: inline-block;\r\n  width: 110px;\r\n  text-align: right;\r\n}\r\n\r\ninput {\r\n  width: 70%;\r\n  margin-bottom: 10px;\r\n  padding: 2%;\r\n  border-radius: 6px;\r\n  border: 1px solid #efefef;\r\n  font-size: 15px;\r\n  -webkit-transition: all 0.2s ease-in-out;\r\n  -moz-transition: all 0.2s ease-in-out;\r\n  transition: all 0.2s ease-in-out;\r\n}\r\n\r\n.width {\r\n  width: 50%;\r\n}\r\n\r\n.username_submit {\r\n  font-size: 14px;\r\n  background-color: #388265;\r\n  color: white;\r\n  width: 15%;\r\n  margin-left: 5%;\r\n  border-radius: 4px;\r\n  border: none;\r\n}\r\n\r\ninput:focus {\r\n  outline: none;\r\n  border-color: #a5c2b6;\r\n  box-shadow: 0 0 10px #a5c2b6;\r\n  -webkit-transition: all 0.2s ease-in-out;\r\n  -moz-transition: all 0.2s ease-in-out;\r\n  transition: all 0.2s ease-in-out;\r\n}\r\n\r\ninput.submit {\r\n  width: 100%;\r\n  padding: 3%;\r\n  border-radius: 6px;\r\n  border: 1px solid #388265;\r\n  font-size: 15px;\r\n  background-color: #388265;\r\n  color: #fff;\r\n  margin-top: 25px;\r\n  -webkit-transition: all 0.2s ease-in-out;\r\n  -moz-transition: all 0.2s ease-in-out;\r\n  transition: all 0.2s ease-in-out;\r\n}\r\n\r\ninput.submit:hover {\r\n  width: 100%;\r\n  padding: 3%;\r\n  border-radius: 6px;\r\n  opacity: 0.7;\r\n  font-size: 15px;\r\n\r\n  color: #fff;\r\n  margin-top: 25px;\r\n  -webkit-transition: all 0.2s ease-in-out;\r\n  -moz-transition: all 0.2s ease-in-out;\r\n  transition: all 0.2s ease-in-out;\r\n}\r\n\r\n.gender,\r\n.age_range {\r\n  width: 100%;\r\n  display: block;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: 1%;\r\n  margin-left: -1%;\r\n  font-size: 14px;\r\n}\r\n\r\n.input_sex {\r\n  width: 14px;\r\n  height: 14px;\r\n  -webkit-transition: all 0.2s ease-in-out;\r\n  -moz-transition: all 0.2s ease-in-out;\r\n  transition: all 0.2s ease-in-out;\r\n}\r\n\r\n#error {\r\n  color: red;\r\n  margin-top: -1%;\r\n  margin-left: 24%;\r\n  font-size: 12px;\r\n}\r\n\r\n.error_border:focus {\r\n  border-color: red;\r\n  box-shadow: none;\r\n}\r\n\r\n.error_submit {\r\n  width: 100%;\r\n  padding: 3%;\r\n  border-radius: 6px;\r\n  border: 1px solid gray;\r\n  font-size: 15px;\r\n  background-color: grey;\r\n  color: darkgray;\r\n  margin-top: 25px;\r\n  -webkit-transition: all 0.2s ease-in-out;\r\n  -moz-transition: all 0.2s ease-in-out;\r\n  transition: all 0.2s ease-in-out;\r\n}\r\n</style>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}