{"ast":null,"code":"import { ref } from \"vue\";\nimport gnbBar from \"../components/gnbBar.vue\";\nimport TabsWrapper from \"../components/TabsWrapper.vue\";\nimport TabItem from \"../components/TabItem.vue\";\nimport boardList from \"../components/boardList.vue\";\nimport commentList from \"../components/commentList.vue\";\nimport axios from \"axios\";\naxios.defaults.baseURL = \"http://localhost:3000\";\naxios.defaults.headers.post[\"Content-Type\"] = \"application/json;charset=utf-8\";\naxios.defaults.headers.post[\"Access-Control-Allow-Origin\"] = \"*\";\nexport default {\n  components: {\n    gnbBar,\n    TabsWrapper,\n    TabItem,\n    boardList,\n    commentList\n  },\n  data() {\n    return {\n      email: \"\",\n      nick: \"\",\n      image: \"\",\n      provider: \"\",\n      editMode: false,\n      myPageNick: {}\n    };\n  },\n  // --------------------------------------------------------------------------------------------------------------------------------------\n  created() {\n    this.getMyPageData();\n  },\n  mounted() {\n    this.email = localStorage.getItem(\"userID\"), this.nick = localStorage.getItem(\"userNick\"), this.image = localStorage.getItem(\"userImage\"), this.provider = localStorage.getItem(\"userProvider\");\n  },\n  methods: {\n    toggleEditMode() {\n      this.editMode = true;\n    },\n    deleteComment() {\n      // 삭제 로직을 구현\n    },\n    cancelEdit() {\n      this.editMode = false;\n    },\n    async getMyPageData() {\n      //마이페이지 내 정보----------------------------------------------------------------------------------------------------------------------\n      try {\n        this.myPageNick = await axios.post(\"/mypage/myPage\", {\n          userEmail: \"user1@example.com\" // userEmail 값을 적절히 설정\n        });\n\n        this.myPageNick = this.myPageNick.data; // 서버에서 받은 데이터를 myPageData에 할당\n        console.log(this.myPageNick);\n      } catch (error) {\n        console.error(error);\n      }\n    }\n  },\n  setup() {\n    const boardListData = ref([{\n      BRD_ID: 0,\n      BRD_HASHTAG: \"#종로구 #중구 #식사 #전시\",\n      BRD_TITLE: \"서울 실내 데이트 코스 추천!\",\n      BRD_CREATED_AT: \"2023-06-22\",\n      likecount: 10,\n      BRD_VIEWCOUNT: 100,\n      BRD_OPEN: \"공개\",\n      checked: false\n    }, {\n      BRD_ID: 1,\n      BRD_HASHTAG: \"#서초구 #강남구 #카페 #쇼룸,편집샵\",\n      BRD_TITLE: \"테스트 제목2\",\n      BRD_CREATED_AT: \"2023-06-22\",\n      likecount: 20,\n      BRD_VIEWCOUNT: 200,\n      BRD_OPEN: \"비공개\",\n      checked: false\n    }, {\n      BRD_ID: 2,\n      BRD_HASHTAG: \"#마포구 #식사 #전시\",\n      BRD_TITLE: \"테스트 제목3\",\n      BRD_CREATED_AT: \"2023-06-22\",\n      likecount: 30,\n      BRD_VIEWCOUNT: 300,\n      BRD_OPEN: \"공개\",\n      checked: false\n    }]);\n    const commentListData = ref([{\n      COM_ID: 0,\n      COM_NUM: 0,\n      COM_TITLE: \"댓글이 포함된 본문의 제목\",\n      COM_CREATED_AT: \"2023-06-26\",\n      COM_COMMENT: \"댓글내용댓글내용댓글애용\"\n    }, {\n      COM_ID: 1,\n      COM_NUM: 1,\n      COM_TITLE: \"댓글이 포함된 본문의 제목1\",\n      COM_CREATED_AT: \"2023-06-26\",\n      COM_COMMENT: \"댓글내용댓글내용댓글애용1\"\n    }, {\n      COM_ID: 2,\n      COM_NUM: 2,\n      COM_TITLE: \"댓글이 포함된 본문의 제목2\",\n      COM_CREATED_AT: \"2023-06-26\",\n      COM_COMMENT: \"댓글내용댓글내용댓글애용2\"\n    }]);\n    return {\n      boardList: boardListData,\n      commentList: commentListData\n    };\n  }\n};","map":{"version":3,"names":["ref","gnbBar","TabsWrapper","TabItem","boardList","commentList","axios","defaults","baseURL","headers","post","components","data","email","nick","image","provider","editMode","myPageNick","created","getMyPageData","mounted","localStorage","getItem","methods","toggleEditMode","deleteComment","cancelEdit","userEmail","console","log","error","setup","boardListData","BRD_ID","BRD_HASHTAG","BRD_TITLE","BRD_CREATED_AT","likecount","BRD_VIEWCOUNT","BRD_OPEN","checked","commentListData","COM_ID","COM_NUM","COM_TITLE","COM_CREATED_AT","COM_COMMENT"],"sources":["/Users/seoyeonju/Library/CloudStorage/OneDrive-계원예술대학교/풀스텍/weave-wego 2/vue_front/src/views/myPage.vue"],"sourcesContent":["<style src=\"../assets/css/mypage.css\"></style>\r\n<style src=\"../assets/css/reset.css\"></style>\r\n<template>\r\n  <gnbBar />\r\n\r\n  <section class=\"mypage_profile_set\">\r\n    <!-- ----------------------------------------------------------------------------------------------------------------------------------- -->\r\n    <h1 class=\"mypage_title\">마이페이지</h1>\r\n    <div class=\"myprofile\">\r\n      <div class=\"profileimg\">\r\n        <div v-if=\"provider === 'local'\">\r\n          <img\r\n            class=\"profile\"\r\n            :src=\"`http://localhost:3000/downloadProfile/${email}/${image}`\"\r\n            alt=\"profileExample\"\r\n          />\r\n        </div>\r\n        <div v-else-if=\"provider === 'kakao'\">\r\n          <div\r\n            class=\"kakao_img\"\r\n            :style=\"{ 'background-image': 'url(' + image + ')' }\"\r\n          ></div>\r\n        </div>\r\n        <div v-else-if=\"provider === 'naver'\">\r\n          <div\r\n            class=\"kakao_img\"\r\n            :style=\"{ 'background-image': 'url(' + image + ')' }\"\r\n          ></div>\r\n        </div>\r\n        <a href=\"/updateprofile\"\r\n          ><img\r\n            class=\"setting_icon\"\r\n            src=\"../assets/img/setting_btn.png\"\r\n            alt=\"setting_btn\"\r\n        /></a>\r\n      </div>\r\n      <div class=\"nickname_email\" :key=\"i\" v-for=\"(user, i) in myPageNick\">\r\n        <div class=\"nickname\">{{ nick }}</div>\r\n        <div class=\"email\">{{ user.USER_EMAIL }}</div>\r\n      </div>\r\n    </div>\r\n  </section>\r\n  <section>\r\n    <TabsWrapper>\r\n      <TabItem title=\"내코스\" @click=\"\">\r\n        <div>\r\n          <button v-if=\"!editMode\" class=\"edit\" @click=\"toggleEditMode\">\r\n            &nbsp;&nbsp;편집&nbsp;&nbsp;\r\n          </button>\r\n          <button v-if=\"editMode\" class=\"delete\" @click=\"deleteComment\">\r\n            &nbsp;&nbsp;삭제&nbsp;&nbsp;\r\n          </button>\r\n          <button v-if=\"editMode\" class=\"cancel\" @click=\"cancelEdit\">\r\n            &nbsp;&nbsp;취소&nbsp;&nbsp;\r\n          </button>\r\n        </div>\r\n\r\n        <div class=\"course\">\r\n          <boardList\r\n            v-for=\"item in boardList\"\r\n            :boardList=\"item\"\r\n            :key=\"item.BRD_ID\"\r\n            :editMode=\"editMode\"\r\n          >\r\n          </boardList>\r\n        </div>\r\n      </TabItem>\r\n      <TabItem title=\"최근에 본 코스\">\r\n        <div class=\"course\">\r\n          <boardList\r\n            v-for=\"item in boardList\"\r\n            :boardList=\"item\"\r\n            :key=\"item.id\"\r\n            :hideBrdOpen=\"true\"\r\n          /></div\r\n      ></TabItem>\r\n      <TabItem title=\"좋아요 리스트\">\r\n        <div class=\"course\">\r\n          <boardList\r\n            v-for=\"item in boardList\"\r\n            :boardList=\"item\"\r\n            :key=\"item.id\"\r\n            :hideBrdOpen=\"true\"\r\n          /></div\r\n      ></TabItem>\r\n      <TabItem title=\"내가 쓴 댓글\"\r\n        ><button class=\"comment_edit\">&nbsp;&nbsp;편집&nbsp;&nbsp;</button>\r\n\r\n        <div class=\"commentlist\">\r\n          <commentList\r\n            v-for=\"item in commentList\"\r\n            :commentList=\"item\"\r\n            :key=\"item.id\"\r\n          />\r\n        </div>\r\n      </TabItem>\r\n    </TabsWrapper>\r\n  </section>\r\n</template>\r\n\r\n<script>\r\nimport { ref } from \"vue\";\r\nimport gnbBar from \"../components/gnbBar.vue\";\r\nimport TabsWrapper from \"../components/TabsWrapper.vue\";\r\nimport TabItem from \"../components/TabItem.vue\";\r\nimport boardList from \"../components/boardList.vue\";\r\nimport commentList from \"../components/commentList.vue\";\r\nimport axios from \"axios\";\r\naxios.defaults.baseURL = \"http://localhost:3000\";\r\naxios.defaults.headers.post[\"Content-Type\"] = \"application/json;charset=utf-8\";\r\naxios.defaults.headers.post[\"Access-Control-Allow-Origin\"] = \"*\";\r\n\r\nexport default {\r\n  components: {\r\n    gnbBar,\r\n    TabsWrapper,\r\n    TabItem,\r\n    boardList,\r\n    commentList,\r\n  },\r\n  data() {\r\n    return {\r\n      email: \"\",\r\n      nick: \"\",\r\n      image: \"\",\r\n      provider: \"\",\r\n      editMode: false,\r\n      myPageNick: {},\r\n    };\r\n  },\r\n  // --------------------------------------------------------------------------------------------------------------------------------------\r\n  created() {\r\n    this.getMyPageData();\r\n  },\r\n  mounted() {\r\n    (this.email = localStorage.getItem(\"userID\")),\r\n      (this.nick = localStorage.getItem(\"userNick\")),\r\n      (this.image = localStorage.getItem(\"userImage\")),\r\n      (this.provider = localStorage.getItem(\"userProvider\"));\r\n  },\r\n  methods: {\r\n    toggleEditMode() {\r\n      this.editMode = true;\r\n    },\r\n    deleteComment() {\r\n      // 삭제 로직을 구현\r\n    },\r\n    cancelEdit() {\r\n      this.editMode = false;\r\n    },\r\n    async getMyPageData() {\r\n      //마이페이지 내 정보----------------------------------------------------------------------------------------------------------------------\r\n      try {\r\n        this.myPageNick = await axios.post(\"/mypage/myPage\", {\r\n          userEmail: \"user1@example.com\", // userEmail 값을 적절히 설정\r\n        });\r\n\r\n        this.myPageNick = this.myPageNick.data; // 서버에서 받은 데이터를 myPageData에 할당\r\n        console.log(this.myPageNick);\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    },\r\n  },\r\n  setup() {\r\n    const boardListData = ref([\r\n      {\r\n        BRD_ID: 0,\r\n        BRD_HASHTAG: \"#종로구 #중구 #식사 #전시\",\r\n        BRD_TITLE: \"서울 실내 데이트 코스 추천!\",\r\n        BRD_CREATED_AT: \"2023-06-22\",\r\n        likecount: 10,\r\n        BRD_VIEWCOUNT: 100,\r\n        BRD_OPEN: \"공개\",\r\n        checked: false,\r\n      },\r\n      {\r\n        BRD_ID: 1,\r\n        BRD_HASHTAG: \"#서초구 #강남구 #카페 #쇼룸,편집샵\",\r\n        BRD_TITLE: \"테스트 제목2\",\r\n        BRD_CREATED_AT: \"2023-06-22\",\r\n        likecount: 20,\r\n        BRD_VIEWCOUNT: 200,\r\n        BRD_OPEN: \"비공개\",\r\n        checked: false,\r\n      },\r\n      {\r\n        BRD_ID: 2,\r\n        BRD_HASHTAG: \"#마포구 #식사 #전시\",\r\n        BRD_TITLE: \"테스트 제목3\",\r\n        BRD_CREATED_AT: \"2023-06-22\",\r\n        likecount: 30,\r\n        BRD_VIEWCOUNT: 300,\r\n        BRD_OPEN: \"공개\",\r\n        checked: false,\r\n      },\r\n    ]);\r\n    const commentListData = ref([\r\n      {\r\n        COM_ID: 0,\r\n        COM_NUM: 0,\r\n        COM_TITLE: \"댓글이 포함된 본문의 제목\",\r\n        COM_CREATED_AT: \"2023-06-26\",\r\n        COM_COMMENT: \"댓글내용댓글내용댓글애용\",\r\n      },\r\n      {\r\n        COM_ID: 1,\r\n        COM_NUM: 1,\r\n        COM_TITLE: \"댓글이 포함된 본문의 제목1\",\r\n        COM_CREATED_AT: \"2023-06-26\",\r\n        COM_COMMENT: \"댓글내용댓글내용댓글애용1\",\r\n      },\r\n      {\r\n        COM_ID: 2,\r\n        COM_NUM: 2,\r\n        COM_TITLE: \"댓글이 포함된 본문의 제목2\",\r\n        COM_CREATED_AT: \"2023-06-26\",\r\n        COM_COMMENT: \"댓글내용댓글내용댓글애용2\",\r\n      },\r\n    ]);\r\n\r\n    return {\r\n      boardList: boardListData,\r\n      commentList: commentListData,\r\n    };\r\n  },\r\n};\r\n</script>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}