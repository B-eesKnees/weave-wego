{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-9bda156e\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  id: \"map\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1);\n}","map":{"version":3,"names":["id","_createElementBlock","_hoisted_1"],"sources":["/Users/seoyeonju/Library/CloudStorage/OneDrive-계원예술대학교/풀스텍/weave-wego/vue_front/src/components/KakaoMap.vue"],"sourcesContent":["<template>\n  <div id=\"map\" />\n</template>\nㅇ\n\n<script setup>\nconst props = defineProps({\n  locations: Array,\n});\n\nimport { ref, onMounted } from \"vue\";\n\nconst map = ref(null);\n\nconst prepareMap = () => {\n  const script = document.createElement(\"script\");\n  script.src =\n    \"//dapi.kakao.com/v2/maps/sdk.js?appkey=2701d0491303d0eea69f2f2b5138d02f&autoload=false\";\n\n  script.onload = () => window.kakao.maps.load(drawMap);\n\n  document.head.appendChild(script);\n};\n\nconst drawMap = () => {\n  const maps = window.kakao.maps;\n\n  const container = document.getElementById(\"map\");\n  const options = {\n    center: new maps.LatLng(0, 0),\n    level: 6,\n  };\n\n  map.value = new maps.Map(container, options);\n\n  const linePath = [];\n  const Lats = [];\n  const Lngs = [];\n\n  props.locations.map((location) => {\n    const position = new maps.LatLng(location.Lat, location.Lng);\n    const marker = new maps.Marker({ position: position });\n    const infoWindow = new maps.InfoWindow({\n      position: position,\n      content: `<div style=\"padding:5px;text-align:center;\">${location.name}</div>`,\n    });\n\n    marker.setMap(map.value);\n    infoWindow.open(map.value, marker);\n\n    linePath.push(position);\n    Lats.push(location.Lat);\n    Lngs.push(location.Lng);\n  });\n\n  var polyline = new maps.Polyline({\n    path: linePath,\n    strokeWeight: 5,\n    strokeColor: \"blue\",\n    strokeOpacity: 0.7,\n    strokeStyle: \"solid\",\n  });\n\n  polyline.setMap(map.value);\n\n  const newCenter = new maps.LatLng(\n    Lats.reduce((p, c) => p + c) / Lats.length,\n    Lngs.reduce((p, c) => p + c) / Lngs.length\n  );\n\n  map.value.panTo(newCenter);\n};\n\nonMounted(() => {\n  if (window.kakao && window.kakao.maps) {\n    drawMap();\n  } else {\n    prepareMap();\n  }\n});\n</script>\n\n<style scoped>\n#map {\n  width: 100%;\n  height: 400px;\n}\n</style>\n"],"mappings":";;;EACOA,EAAE,EAAC;AAAK;;uBAAbC,mBAAA,CAAgB,OAAhBC,UAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}