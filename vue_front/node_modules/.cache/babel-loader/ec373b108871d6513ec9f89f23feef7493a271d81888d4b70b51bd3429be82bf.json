{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  id: \"naverIdLogin\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"button\", {\n    type: \"button\",\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.logout && $options.logout(...args))\n  }, \"로그아웃\")])]);\n}","map":{"version":3,"names":["id","_createElementBlock","_createElementVNode","_hoisted_1","type","onClick","_cache","args","$options","logout"],"sources":["/Users/seoyeonju/Library/CloudStorage/OneDrive-계원예술대학교/풀스텍/weave-wego 2/vue_front/src/views/NaverLogin.vue"],"sourcesContent":["<template>\n  <div>\n    <div id=\"naverIdLogin\">\n      <button type=\"button\" @click=\"logout\">로그아웃</button>\n    </div>\n  </div>\n</template>\n<script>\nimport axios from \"axios\";\nexport default {\n  data(){\n    return {\n      naverLogin: null,\n    };\n  },\n  mounted() {\n    let userData = {};\n    this.naverLogin = new window.naver.LoginWithNaverId({\n      clientId: \"ZpkAE5YTiolSaFISr_CV\", // 개발자센터에 등록한 Client ID\n      callbackUrl: \"http://localhost:8080/naverlogin\", // 개발자센터에 등록한 callback Url\n      isPopup: true, // 팝업을 통한 연동처리 여부\n      loginButton: {\n        color: \"green\", type: 3, height: 60 },  // 로그인 버튼의 타입을 지정\n    });\n\n    // 설정 정보를 초기화 연동을 준비\n    this.naverLogin.init();\n\n    this.naverLogin.getLoginStatus((status) => {\n      if (status) {\n        console.log(status);\n        console.log(this.naverLogin.user);\n\n        // 필수적으로 받아야하는 프로필 정보가 있다면 callback 처리 시점에 체크\n        var email = this.naverLogin.user.getEmail();\n        var nickname = this.naverLogin.user.getNickName();\n        var gender = this.naverLogin.user.getGender();\n        var age = this.naverLogin.user.getAge();\n        var profile_image = this.naverLogin.user.getProfileImage();\n        /* var mobile = this.naverLogin.user.getMobile(); */\n        \n        userData = {email, nickname, gender, age, profile_image};\n\n        if (email == undefined || email == null) {\n          alert(\"이메일은 필수 정보입니다. 정보 제공을 동의해주세요.\");\n          // 사용자 정보 재동의를 위하여 다시 동의 페이지로 이동함\n          this.naverLogin.reprompt();\n          return;\n        }\n      } else {\n        console.log(\"callback 처리에 실패하였습니다.\");\n      }\n      \n      if (nickname == undefined || nickname == null) {\n          \n          alert(\"별명은 필수 정보입니다. 정보 제공을 동의해주세요.\");\n          // 사용자 정보 재동의를 위하여 다시 동의 페이지로 이동함\n          this.naverLogin.reprompt();\n          return;\n        } else {\n        console.log(\"callback 처리에 실패하였습니다.\");\n      }\n\n      if (gender == undefined || gender == null) {\n          alert(\"성별은 필수 정보입니다. 정보 제공을 동의해주세요.\");\n          // 사용자 정보 재동의를 위하여 다시 동의 페이지로 이동함\n          this.naverLogin.reprompt();\n          return;\n        } else {\n        console.log(\"callback 처리에 실패하였습니다.\");\n      }\n\n      if (age == undefined || age == null) {\n          alert(\"연령대는 필수 정보입니다. 정보 제공을 동의해주세요.\");\n          // 사용자 정보 재동의를 위하여 다시 동의 페이지로 이동함\n          this.naverLogin.reprompt();\n          return;\n        } else {\n        console.log(\"callback 처리에 실패하였습니다.\");\n      }\n\n      if (profile_image == undefined || profile_image == null) {\n          alert(\"프로필 이미지는 필수 정보입니다. 정보 제공을 동의해주세요.\");\n          // 사용자 정보 재동의를 위하여 다시 동의 페이지로 이동함\n          this.naverLogin.reprompt();\n          return;\n        } else {\n        console.log(\"callback 처리에 실패하였습니다.\");\n      }\n\n      this.naverlogin2(userData);\n\n      // window.location.href = '/';\n\n\n    });\n  },\n  methods: {\n    logout() {\n      const accessToken = this.naverLogin.accessToken.accessToken;\n      const url='/oauth2.0/token?grant_type=delete&client_id=ZpkAE5YTiolSaFISr_CV&client_secret=J_ia7bQ3W_&access_token=${accessToken}&service_provider=NAVER';\n\n      axios.get(url).then((res) => {\n        console.log(res.data);\n      });\n\n      \n\n    },\n    naverlogin2(userData) {\n            const email = userData.email;\n\n            axios({\n                url: \"http://localhost:3000/auth/naverlogin\",\n                method: \"POST\",\n                data: {\n                    email: userData.email,\n                    nick: userData.nickname,\n                    image: userData.profile_image,\n                    sex: userData.gender,\n                    agegroup: userData.age,\n                    provider: 'naver'\n                },\n\n            }).then(async (res)=> {\n                this.pullData(email)\n            })\n        },\n    pullData(email) {\n      axios({\n                url: \"http://localhost:3000/auth/naverData\",\n                method: \"POST\",\n                data: {\n                    email: email,\n                }\n            }).then(async (res)=> {\n                localStorage.setItem('userID', res.data.email);\n                localStorage.setItem('userNick', res.data.nick);\n                localStorage.setItem('userImage', res.data.image);\n                localStorage.setItem('userProvider', res.data.provider);\n\n                window.location.href = '/';\n            })\n    }\n  },\n};\n</script>"],"mappings":";;EAESA,EAAE,EAAC;AAAc;;uBADxBC,mBAAA,CAIM,cAHJC,mBAAA,CAEM,OAFNC,UAEM,GADJD,mBAAA,CAAmD;IAA3CE,IAAI,EAAC,QAAQ;IAAEC,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,MAAA,IAAAD,QAAA,CAAAC,MAAA,IAAAF,IAAA,CAAM;KAAE,MAAI,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}