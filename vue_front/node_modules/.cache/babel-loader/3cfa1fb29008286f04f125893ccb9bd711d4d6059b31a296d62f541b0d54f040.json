{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, withModifiers as _withModifiers, vModelText as _vModelText, normalizeClass as _normalizeClass, withDirectives as _withDirectives, vShow as _vShow, createTextVNode as _createTextVNode, vModelRadio as _vModelRadio, Fragment as _Fragment, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nimport _imports_0 from '../assets/img/profileExample.png';\nconst _withScopeId = n => (_pushScopeId(\"data-v-ae5669a2\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"join\"\n};\nconst _hoisted_2 = {\n  class: \"title-bar\"\n};\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h5\", null, \"회원가입\", -1 /* HOISTED */));\nconst _hoisted_4 = {\n  class: \"title-bar-label\",\n  for: \"file\"\n};\nconst _hoisted_5 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"title-bar-btn\"\n}, \"+\", -1 /* HOISTED */));\nconst _hoisted_6 = [\"src\"];\nconst _hoisted_7 = {\n  key: 1,\n  id: \"img_style\",\n  src: _imports_0,\n  alt: \"올린 이미지\"\n};\nconst _hoisted_8 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */));\nconst _hoisted_9 = {\n  class: \"wrap\"\n};\nconst _hoisted_10 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"email\"\n}, \"아이디\", -1 /* HOISTED */));\nconst _hoisted_11 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"a\", {\n  href: \"/auth/checkemail\"\n}, [/*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"submit\",\n  id: \"email_check\",\n  class: \"username_submit\"\n}, \"중복확인\")], -1 /* HOISTED */));\nconst _hoisted_12 = [_hoisted_11];\nconst _hoisted_13 = {\n  key: 0,\n  id: \"error\"\n};\nconst _hoisted_14 = {\n  id: \"error\"\n};\nconst _hoisted_15 = {\n  id: \"complete\"\n};\nconst _hoisted_16 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"password\"\n}, \"비밀번호\", -1 /* HOISTED */));\nconst _hoisted_17 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */));\nconst _hoisted_18 = {\n  key: 1,\n  id: \"error\"\n};\nconst _hoisted_19 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */));\nconst _hoisted_20 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"password_check2\"\n}, \"비밀번호 확인\", -1 /* HOISTED */));\nconst _hoisted_21 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */));\nconst _hoisted_22 = {\n  key: 2,\n  id: \"error\"\n};\nconst _hoisted_23 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"nickname\"\n}, \"별명\", -1 /* HOISTED */));\nconst _hoisted_24 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"a\", {\n  href: \"/auth/checknick\"\n}, [/*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"submit\",\n  id: \"nickname_check\",\n  class: \"username_submit\"\n}, \"중복확인\")], -1 /* HOISTED */));\nconst _hoisted_25 = [_hoisted_24];\nconst _hoisted_26 = {\n  id: \"error\"\n};\nconst _hoisted_27 = {\n  id: \"complete\"\n};\nconst _hoisted_28 = {\n  key: 3,\n  id: \"error\"\n};\nconst _hoisted_29 = {\n  class: \"gender\"\n};\nconst _hoisted_30 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"sex\"\n}, \"성별\", -1 /* HOISTED */));\nconst _hoisted_31 = {\n  key: 4,\n  id: \"error\"\n};\nconst _hoisted_32 = {\n  class: \"age_range\"\n};\nconst _hoisted_33 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"age_range\"\n}, \"나이대\", -1 /* HOISTED */));\nconst _hoisted_34 = {\n  key: 5,\n  id: \"error\"\n};\nconst _hoisted_35 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"phone_num\"\n}, \"전화번호\", -1 /* HOISTED */));\nconst _hoisted_36 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */));\nconst _hoisted_37 = {\n  key: 6,\n  id: \"error\"\n};\nconst _hoisted_38 = {\n  href: \"/auth/join\"\n};\nconst _hoisted_39 = [\"disabled\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_gnbBar = _resolveComponent(\"gnbBar\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_gnbBar), _createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_hoisted_3, _createElementVNode(\"form\", {\n    onSubmit: _cache[1] || (_cache[1] = _withModifiers((...args) => $options.joinForm && $options.joinForm(...args), [\"prevent\"]))\n  }, [_createElementVNode(\"label\", _hoisted_4, [_hoisted_5, $data.type ? (_openBlock(), _createElementBlock(\"img\", {\n    key: 0,\n    class: \"img_style\",\n    src: $data.imageUploaded,\n    alt: \"올린 이미지\"\n  }, null, 8 /* PROPS */, _hoisted_6)) : (_openBlock(), _createElementBlock(\"img\", _hoisted_7)), _hoisted_8]), _createElementVNode(\"input\", {\n    id: \"file\",\n    type: \"file\",\n    ref: \"image\",\n    onChange: _cache[0] || (_cache[0] = (...args) => $options.upload && $options.upload(...args)),\n    maxlength: \"150\"\n  }, null, 544 /* HYDRATE_EVENTS, NEED_PATCH */)], 32 /* HYDRATE_EVENTS */)]), _createElementVNode(\"div\", _hoisted_9, [_createElementVNode(\"form\", {\n    onSubmit: _cache[17] || (_cache[17] = _withModifiers((...args) => $options.joinForm && $options.joinForm(...args), [\"prevent\"]))\n  }, [_hoisted_10, _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.email = $event),\n    type: \"text\",\n    id: \"email\",\n    placeholder: \"이메일 입력\",\n    class: _normalizeClass({\n      error_border: $data.email_check || $data.emailcheck != 2\n    }),\n    maxlength: \"25\"\n  }, null, 2 /* CLASS */), [[_vModelText, $data.email]]), _createElementVNode(\"form\", {\n    onSubmit: _cache[3] || (_cache[3] = _withModifiers((...args) => $options.emailCheckForm && $options.emailCheckForm(...args), [\"prevent\"]))\n  }, _hoisted_12, 32 /* HYDRATE_EVENTS */), $data.email_check ? (_openBlock(), _createElementBlock(\"p\", _hoisted_13, \"이메일주소를 정확히 입력해주세요. 예)abcd@naver.com\")) : _createCommentVNode(\"v-if\", true), _withDirectives(_createElementVNode(\"p\", _hoisted_14, \"존재하는 이메일입니다.\", 512 /* NEED_PATCH */), [[_vShow, $data.emailcheck == 1]]), _withDirectives(_createElementVNode(\"p\", _hoisted_15, \"사용가능한 이메일입니다.\", 512 /* NEED_PATCH */), [[_vShow, $data.emailcheck == 2 && !$data.email_check]]), _hoisted_16, _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $data.password = $event),\n    type: \"password\",\n    id: \"password\",\n    class: _normalizeClass({\n      error_border: $data.password_check\n    }),\n    placeholder: \"비밀번호 입력\",\n    maxlength: \"15\"\n  }, null, 2 /* CLASS */), [[_vModelText, $data.password]]), _hoisted_17, $data.password_check ? (_openBlock(), _createElementBlock(\"p\", _hoisted_18, [_createTextVNode(\"비밀번호를 정확히 입력해주세요.\"), _hoisted_19, _createTextVNode(\" *8자리 이상 영문 대소문자, 숫자, 특수문자가 각각 1개 이상\")])) : _createCommentVNode(\"v-if\", true), _hoisted_20, _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => $data.password2 = $event),\n    type: \"password\",\n    id: \"password_check\",\n    class: _normalizeClass({\n      error_border: $data.password_check2\n    }),\n    placeholder: \"비밀번호 확인 입력\"\n  }, null, 2 /* CLASS */), [[_vModelText, $data.password2]]), _hoisted_21, $data.password_check2 ? (_openBlock(), _createElementBlock(\"p\", _hoisted_22, \"비밀번호가 일치하지 않습니다.\")) : _createCommentVNode(\"v-if\", true), _hoisted_23, _createElementVNode(\"input\", {\n    onInput: _cache[6] || (_cache[6] = $event => $data.nickname = $event.target.value),\n    type: \"text\",\n    id: \"nickname\",\n    placeholder: \"활동명 입력\",\n    class: _normalizeClass({\n      error_border: _ctx.nickname_check2 || $data.nicknamecheck != 2\n    }),\n    maxlength: \"10\"\n  }, null, 34 /* CLASS, HYDRATE_EVENTS */), _createElementVNode(\"form\", {\n    onSubmit: _cache[7] || (_cache[7] = _withModifiers((...args) => $options.nicknameCheckForm && $options.nicknameCheckForm(...args), [\"prevent\"]))\n  }, _hoisted_25, 32 /* HYDRATE_EVENTS */), _withDirectives(_createElementVNode(\"p\", _hoisted_26, \"존재하는 닉네임입니다.\", 512 /* NEED_PATCH */), [[_vShow, $data.nicknamecheck == 1]]), _withDirectives(_createElementVNode(\"p\", _hoisted_27, \"사용가능한 닉네임입니다.\", 512 /* NEED_PATCH */), [[_vShow, $data.nicknamecheck == 2]]), _ctx.nickname_check2 ? (_openBlock(), _createElementBlock(\"p\", _hoisted_28, \"닉네임을 입력해주세요.\")) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"div\", _hoisted_29, [_hoisted_30, _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[8] || (_cache[8] = $event => $data.sex = $event),\n    type: \"radio\",\n    name: \"gender\",\n    value: \"male\",\n    class: \"input_sex\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelRadio, $data.sex]]), _createTextVNode(\"남자 \"), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[9] || (_cache[9] = $event => $data.sex = $event),\n    type: \"radio\",\n    name: \"gender\",\n    value: \"female\",\n    class: \"input_sex\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelRadio, $data.sex]]), _createTextVNode(\"여자 \")]), $data.sex_check ? (_openBlock(), _createElementBlock(\"p\", _hoisted_31, \"성별을 선택하세요.\")) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"div\", _hoisted_32, [_hoisted_33, _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[10] || (_cache[10] = $event => $data.agegroup = $event),\n    type: \"radio\",\n    name: \"agegroup\",\n    value: \"ten\",\n    class: \"input_sex\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelRadio, $data.agegroup]]), _createTextVNode(\"10대 \"), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[11] || (_cache[11] = $event => $data.agegroup = $event),\n    type: \"radio\",\n    name: \"agegroup\",\n    value: \"20\",\n    class: \"input_sex\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelRadio, $data.agegroup]]), _createTextVNode(\"20대 \"), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[12] || (_cache[12] = $event => $data.agegroup = $event),\n    type: \"radio\",\n    name: \"agegroup\",\n    value: \"30\",\n    class: \"input_sex\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelRadio, $data.agegroup]]), _createTextVNode(\"30대 \"), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[13] || (_cache[13] = $event => $data.agegroup = $event),\n    type: \"radio\",\n    name: \"agegroup\",\n    value: \"40\",\n    class: \"input_sex\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelRadio, $data.agegroup]]), _createTextVNode(\"40대 \"), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[14] || (_cache[14] = $event => $data.agegroup = $event),\n    type: \"radio\",\n    name: \"agegroup\",\n    value: \"50\",\n    class: \"input_sex\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelRadio, $data.agegroup]]), _createTextVNode(\"50대 \"), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[15] || (_cache[15] = $event => $data.agegroup = $event),\n    type: \"radio\",\n    name: \"agegroup\",\n    value: \"60\",\n    class: \"input_sex\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelRadio, $data.agegroup]]), _createTextVNode(\"60세 이상 \")]), $data.age_range_check ? (_openBlock(), _createElementBlock(\"p\", _hoisted_34, \"나이대를 선택하세요.\")) : _createCommentVNode(\"v-if\", true), _hoisted_35, _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[16] || (_cache[16] = $event => $data.phone_num = $event),\n    type: \"text\",\n    id: \"phone_num\",\n    placeholder: \"전화번호 입력\",\n    class: _normalizeClass({\n      error_border: $data.phone_check\n    }),\n    maxlength: \"11\"\n  }, null, 2 /* CLASS */), [[_vModelText, $data.phone_num]]), _hoisted_36, $data.phone_check ? (_openBlock(), _createElementBlock(\"p\", _hoisted_37, \"전화번호를 정확히 입력해주세요. 예)01066090043\")) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"a\", _hoisted_38, [_createElementVNode(\"input\", {\n    type: \"submit\",\n    class: _normalizeClass({\n      'error_submit': $data.allcheck,\n      'submit': !$data.allcheck\n    }),\n    disabled: $data.allcheck,\n    id: \"login\",\n    value: \"가입하기\"\n  }, null, 10 /* CLASS, PROPS */, _hoisted_39)])], 32 /* HYDRATE_EVENTS */)])])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_imports_0","class","_createElementVNode","for","id","src","alt","href","type","_hoisted_11","_hoisted_24","_createVNode","_component_gnbBar","_hoisted_1","_hoisted_2","_hoisted_3","onSubmit","_cache","_withModifiers","args","$options","joinForm","_hoisted_4","_hoisted_5","$data","_createElementBlock","imageUploaded","_hoisted_7","_hoisted_8","ref","onChange","upload","maxlength","_hoisted_9","_hoisted_10","email","$event","placeholder","_normalizeClass","error_border","email_check","emailcheck","emailCheckForm","_hoisted_13","_hoisted_14","_hoisted_15","_hoisted_16","password","password_check","_hoisted_17","_hoisted_18","_hoisted_19","_hoisted_20","password2","password_check2","_hoisted_21","_hoisted_22","_hoisted_23","onInput","nickname","target","value","_ctx","nickname_check2","nicknamecheck","nicknameCheckForm","_hoisted_26","_hoisted_27","_hoisted_28","_hoisted_29","_hoisted_30","sex","name","sex_check","_hoisted_31","_hoisted_32","_hoisted_33","agegroup","age_range_check","_hoisted_34","_hoisted_35","phone_num","phone_check","_hoisted_36","_hoisted_37","_hoisted_38","allcheck","disabled"],"sources":["/Users/seoyeonju/Library/CloudStorage/OneDrive-계원예술대학교/풀스텍/weave-wego 2/vue_front/src/views/userJoin.vue"],"sourcesContent":["<template>\r\n    <gnbBar />\r\n    <div class=\"join\">\r\n        <div class=\"title-bar\">\r\n            <h5>회원가입</h5>\r\n            <form @submit.prevent=\"joinForm\">\r\n                <label class=\"title-bar-label\" for=\"file\">\r\n                    <div class=\"title-bar-btn\">+</div>\r\n                    <img v-if=\"type\" class=\"img_style\" :src=\"imageUploaded\" alt=\"올린 이미지\" />\r\n                    <img v-else id=\"img_style\" src=\"../assets/img/profileExample.png\" alt=\"올린 이미지\" />\r\n                    <br />\r\n                </label>\r\n\r\n                <input id=\"file\" type=\"file\" ref=\"image\" @change=\"upload\" maxlength=\"150\"/>\r\n            </form>\r\n\r\n\r\n        </div>\r\n        <div class=\"wrap\">\r\n            <form @submit.prevent=\"joinForm\">\r\n                <label for=\"email\">아이디</label>\r\n                <input v-model=\"email\" type=\"text\" id=\"email\" placeholder=\"이메일 입력\" :class=\"{ error_border: email_check || emailcheck != 2}\" maxlength=\"25\">\r\n                <form @submit.prevent=\"emailCheckForm\">\r\n                    <a href=\"/auth/checkemail\"><button type=\"submit\" id=\"email_check\"\r\n                            class=\"username_submit\">중복확인</button></a>\r\n                </form>\r\n                <p id=\"error\" v-if=\"email_check\">이메일주소를 정확히 입력해주세요. 예)abcd@naver.com</p>\r\n                <p id=\"error\" v-show=\"emailcheck == 1\">존재하는 이메일입니다.</p>\r\n                <p id=\"complete\" v-show=\"emailcheck == 2 && !email_check\">사용가능한 이메일입니다.</p>\r\n                <label for=\"password\">비밀번호</label>\r\n                <input v-model=\"password\" type=\"password\" id=\"password\" :class=\"{ error_border: password_check }\" placeholder=\"비밀번호 입력\" maxlength=\"15\"><br />\r\n                <p id=\"error\" v-if=\"password_check\">비밀번호를 정확히 입력해주세요.<br /> *8자리 이상 영문 대소문자, 숫자, 특수문자가 각각 1개 이상</p>\r\n                <label for=\"password_check2\">비밀번호 확인</label>\r\n                <input v-model=\"password2\" type=\"password\" id=\"password_check\" :class=\"{ error_border: password_check2 }\" placeholder=\"비밀번호 확인 입력\"><br />\r\n                <p id=\"error\" v-if=\"password_check2\">비밀번호가 일치하지 않습니다.</p>\r\n                <label for=\"nickname\">별명</label>\r\n                <input  @input=\"nickname = $event.target.value\" type=\"text\" id=\"nickname\" placeholder=\"활동명 입력\" :class=\"{ error_border: nickname_check2 || nicknamecheck != 2}\" maxlength=\"10\">\r\n                <form @submit.prevent=\"nicknameCheckForm\">\r\n                    <a href=\"/auth/checknick\"><button type=\"submit\" id=\"nickname_check\"\r\n                            class=\"username_submit\">중복확인</button></a>\r\n                </form>\r\n                <p id=\"error\" v-show=\"nicknamecheck == 1\">존재하는 닉네임입니다.</p>\r\n                <p id=\"complete\" v-show=\"nicknamecheck == 2\">사용가능한 닉네임입니다.</p>\r\n                <p id=\"error\" v-if=\"nickname_check2\">닉네임을 입력해주세요.</p>\r\n                <div class=\"gender\">\r\n                    <label for=\"sex\">성별</label>\r\n                    <input v-model=\"sex\" type='radio' name='gender' value='male' class=\"input_sex\" />남자\r\n                    <input v-model=\"sex\" type='radio' name='gender' value='female' class=\"input_sex\" />여자\r\n                </div>\r\n                <p id=\"error\" v-if=\"sex_check\">성별을 선택하세요.</p>\r\n                <div class=\"age_range\">\r\n                    <label for=\"age_range\">나이대</label>\r\n                    <input v-model=\"agegroup\" type='radio' name='agegroup' value='ten' class=\"input_sex\" />10대\r\n                    <input v-model=\"agegroup\" type='radio' name='agegroup' value='20' class=\"input_sex\" />20대\r\n                    <input v-model=\"agegroup\" type='radio' name='agegroup' value='30' class=\"input_sex\" />30대\r\n                    <input v-model=\"agegroup\" type='radio' name='agegroup' value='40' class=\"input_sex\" />40대\r\n                    <input v-model=\"agegroup\" type='radio' name='agegroup' value='50' class=\"input_sex\" />50대\r\n                    <input v-model=\"agegroup\" type='radio' name='agegroup' value='60' class=\"input_sex\" />60세 이상\r\n                </div>\r\n                <p id=\"error\" v-if=\"age_range_check\">나이대를 선택하세요.</p>\r\n                <label for=\"phone_num\">전화번호</label>\r\n                <input v-model=\"phone_num\" type=\"text\" id=\"phone_num\" placeholder=\"전화번호 입력\" :class=\"{ error_border: phone_check }\" maxlength=\"11\"><br />\r\n                <p id=\"error\" v-if=\"phone_check\">전화번호를 정확히 입력해주세요. 예)01066090043</p>\r\n                <a href=\"/auth/join\"><input type=\"submit\" :class=\"{ 'error_submit': allcheck, 'submit': !allcheck }\"\r\n                        :disabled=\"allcheck\" id=\"login\" value=\"가입하기\"></a>\r\n\r\n            </form>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport gnbBar from '../components/gnbBar.vue'\r\n\r\nimport axios from 'axios'\r\naxios.defaults.baseURL = 'http://localhost:3000';\r\naxios.defaults.headers.post['Content-Type'] = 'application/json;charset=utf-8';\r\naxios.defaults.headers.post['Access-Control-Allow-Origin'] = '*';\r\n\r\nexport default {\r\n    components: { gnbBar },\r\n    data() {\r\n        return {\r\n\r\n            email: '',\r\n            password: '',\r\n            password2: '',\r\n            nickname: '',\r\n            phone_num: '',\r\n            sex: '',\r\n            agegroup: '',\r\n            image: '',\r\n            imageUploaded: null,\r\n            type: false,\r\n\r\n            email_check: false,\r\n            password_check: false,\r\n            password_check2: false,\r\n            nickname_check: false,\r\n            sex_check: false,\r\n            age_range_check: false,\r\n            phone_check: false,\r\n            error_border_check: false,\r\n\r\n            allcheck: true,\r\n            allcheck1: true,\r\n            allcheck2: true,\r\n            allcheck3: true,\r\n            allcheck4: true,\r\n            allcheck5: true,\r\n            allcheck6: true,\r\n            allcheck7: true,\r\n            emailcheck: 3,\r\n            nicknamecheck: 3,\r\n\r\n            \r\n        };\r\n    },\r\n    watch: {\r\n        'email': function () {\r\n            this.funcWatch()\r\n        },\r\n        'password': function () {\r\n            this.funcWatch()\r\n        },\r\n        'password2': function () {\r\n            this.funcWatch()\r\n        },\r\n        'nickname': function () {\r\n            this.funcWatch()\r\n        },\r\n        'sex': function () {\r\n            this.funcWatch()\r\n        },\r\n        'agegroup': function () {\r\n            this.funcWatch()\r\n        },\r\n        'phone_num': function () {\r\n            this.funcWatch()\r\n        }\r\n\r\n    },\r\n    methods: {\r\n\r\n        funcWatch() {\r\n            this.checkEmail()\r\n            this.checkPassword()\r\n            this.checkPassword2()\r\n            this.checknickname()\r\n            this.checksex()\r\n            this.checkage_range()\r\n            this.checkphone()\r\n            this.inputAllCheck()\r\n            this.emailCheckForm()\r\n            this.nicknameCheckForm()\r\n            console.log(this.allcheck);\r\n        },\r\n        movetomain() {\r\n            window.location.href = '/';\r\n        },\r\n        checkEmail() {\r\n            // 이메일 형식 검사\r\n            const validateEmail = /^[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*.[a-zA-Z]{2,3}$/i;\r\n\r\n            if (this.email === '' || !validateEmail.test(this.email) || !this.email) {\r\n                this.email_check = true;\r\n                this.error_border_check = true;\r\n                this.allcheck1 = true; //입력조건 안맞을시 true\r\n            } else {\r\n                this.email_check = false;\r\n                this.error_border_check = false;\r\n                this.allcheck1 = false;\r\n            }\r\n        },\r\n        checkPassword() {\r\n            // 최소 8자리 이상 영문 대소문자, 숫자, 특수문자가 각각 1개 이상\r\n            const validatePassword = /^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$ %^&*-]).{8,}$/\r\n\r\n            if (this.password === '' || !validatePassword.test(this.password) || !this.password) {\r\n                this.password_check = true;\r\n                this.error_border_check = true;\r\n                this.allcheck2 = true;\r\n            } else {\r\n                this.password_check = false;\r\n                this.error_border_check = false;\r\n                this.allcheck2 = false;\r\n            }\r\n        },\r\n        checkPassword2() {\r\n            if (this.password !== this.password2) {\r\n                this.password_check2 = true;\r\n                this.error_border_check = true;\r\n                this.allcheck3 = true;\r\n            } else {\r\n                this.password_check2 = false;\r\n                this.error_border_check = false;\r\n                this.allcheck3 = false;\r\n            }\r\n        },\r\n        checknickname() {\r\n\r\n            const validateNickname = /^.{1,10}$/;\r\n            if (!this.nickname || !validateNickname.test(this.nickname)) {\r\n                this.nickname_check2 = true;\r\n                this.error_border_check = true;\r\n                this.allcheck4 = true;\r\n            } else {\r\n                this.nickname_check2 = false;\r\n                this.error_border_check = false;\r\n                this.allcheck4 = false;\r\n            }\r\n        },\r\n        checksex() {\r\n            if (this.sex == null) { //선택했으면\r\n                this.allcheck5 = true;\r\n            } else {\r\n                this.allcheck5 = false;\r\n            }\r\n        },\r\n        checkage_range() {\r\n            if (this.agegroup == null) {\r\n                this.allcheck6 = true;\r\n            } else {\r\n                this.allcheck6 = false;\r\n            }\r\n        },\r\n        checkphone() {\r\n            const validatephone = /^\\d{3}\\d{3,4}\\d{4}$/;\r\n\r\n            if (this.phone_num === '' || !validatephone.test(this.phone_num) || !this.phone_num) {\r\n                this.phone_check = true;\r\n                this.error_border_check = true;\r\n                this.allcheck7 = true;\r\n            } else {\r\n                this.phone_check = false;\r\n                this.error_border_check = false;\r\n                this.allcheck7 = false;\r\n            }\r\n        },\r\n        inputAllCheck() {\r\n            if (this.allcheck1 || this.allcheck2 || this.allcheck3 || this.allcheck4 || this.allcheck5 || this.allcheck6 || this.allcheck7 || this.email_check) { //하나라도 입력조건이 안맞을시\r\n                this.allcheck = true; //버튼 비활성\r\n\r\n            } else {\r\n                this.allcheck = false;\r\n\r\n            }\r\n        },\r\n        emailCheckForm() {\r\n            axios({\r\n                url: \"http://localhost:3000/auth/checkemail\",\r\n                method: \"POST\",\r\n                data: {\r\n                    email: this.email,\r\n                },\r\n            }).then(async (res) => {\r\n                const validateEmail = /^[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*.[a-zA-Z]{2,3}$/i;\r\n\r\n                if (res.data.message == '사용가능한 이메일입니다.' && validateEmail.test(this.email)) {\r\n                    this.emailcheck = 2;\r\n                } else if (res.data.message == '존재하는 이메일입니다.') {\r\n                    this.emailcheck = 1;\r\n                    this.allcheck = true;\r\n                    console.log(this.allcheck);\r\n                } else if (!this.email) {\r\n                    this.emailcheck = 3;\r\n                }\r\n\r\n\r\n\r\n                console.log(this.emailcheck);\r\n\r\n            }).catch(error => {\r\n                alert(error);\r\n            })\r\n        },\r\n        nicknameCheckForm() {\r\n            axios({\r\n                url: \"http://localhost:3000/auth/checknick\",\r\n                method: \"POST\",\r\n                data: {\r\n                    nickname: this.nickname,\r\n                },\r\n            }).then(async (res) => {\r\n                if (res.data.message == '사용가능한 닉네임입니다.' && this.nickname) {\r\n                    console.log(res.data.message);\r\n                    this.nicknamecheck = 2;\r\n                } else if (res.data.message == '존재하는 닉네임입니다.') {\r\n                    this.nicknamecheck = 1;\r\n                    this.allcheck = true;\r\n                } else if (!this.nickname) {\r\n                    this.nicknamecheck = 3;\r\n                }\r\n            }).catch(error => {\r\n                alert(error);\r\n            })\r\n        },\r\n        joinForm() { //백엔드로 회원가입 정보 전달\r\n            if (this.sex === 'female') {\r\n                this.sex = 'f';\r\n            } else {\r\n                this.sex = 'm';\r\n            }\r\n\r\n            axios({\r\n                url: \"http://localhost:3000/auth/join\",\r\n                method: \"POST\",\r\n                data: {\r\n                    email: this.email,\r\n                    password: this.password,\r\n                    nickname: this.nickname,\r\n                    sex: this.sex,\r\n                    agegroup: this.agegroup,\r\n                    phone_num: this.phone_num,\r\n\r\n                },\r\n            }).then(async (res) => {\r\n                alert(res.data.message);\r\n                await this.uploadFile(this.image);\r\n            }).catch(error => {\r\n                alert(error);\r\n            })\r\n        },\r\n        async uploadFile(files) {\r\n            if (!files) {\r\n                return; // 파일이 없으면 함수 종료\r\n            }\r\n            window.location.href = '/';\r\n            let name = files.name;\r\n            let data = await this.$base64(files);\r\n\r\n            axios({\r\n                url: `http://localhost:3000/uploadProfile/${this.email}/${name}`,\r\n                method: 'POST',\r\n                data: {\r\n                    \"data\": data\r\n                }\r\n            }).then(res => {\r\n                window.location.href = '/';\r\n            }).catch(error => {\r\n                alert(error);\r\n            })\r\n        },\r\n        upload() {\r\n            this.type = true;\r\n            const files = this.$refs.image.files;\r\n\r\n            if (files && files.length > 0) {\r\n                this.image = files[0]; // 사용자가 올린 이미지\r\n                console.log(this.image);\r\n                // URL.createObjectURL로 사용자가 올린 이미지를 URL로 만들어서 화면에 표시할 수 있게 한다. img 태그의 src값에 바인딩해준다\r\n                this.imageUploaded = URL.createObjectURL(this.image);\r\n\r\n\r\n            }\r\n        },\r\n    }\r\n}\r\n</script> \r\n\r\n<style scoped>\r\n.join {\r\n    padding-top: 5%;\r\n    width: 100%;\r\n    height: 100%;\r\n    margin: 0;\r\n    background-color: white;\r\n    font-family: arial;\r\n    font-size: 14px;\r\n    -webkit-font-smoothing: antialiased;\r\n    -moz-osx-font-smoothing: grayscale;\r\n}\r\n\r\n#file {\r\n    display: none;\r\n}\r\n\r\n.title-bar-label {\r\n    width: 1%;\r\n    cursor: pointer;\r\n}\r\n\r\n.img_style {\r\n    border: 2px solid black;\r\n    border-radius: 50%;\r\n}\r\n\r\ninput[type=\"file\"] {\r\n    position: absolute;\r\n    width: 22px;\r\n    height: 22px;\r\n    left: 50%;\r\n    top: 70%;\r\n    line-height: 20x;\r\n    border: 2px solid black;\r\n    color: white;\r\n    font-size: 22px;\r\n    background-color: #388265;\r\n    border-radius: 50%;\r\n}\r\n\r\n.title-bar {\r\n    text-align: center;\r\n    color: #333333;\r\n    font-size: 30px;\r\n    padding-bottom: 10px;\r\n    position: relative;\r\n}\r\n\r\n.title-bar-btn {\r\n    position: absolute;\r\n    width: 22px;\r\n    height: 22px;\r\n    left: 50%;\r\n    top: 70%;\r\n    text-align: center;\r\n    line-height: 20px;\r\n    border: 2px solid black;\r\n    color: white;\r\n    font-size: 22px;\r\n\r\n    background-color: #388265;\r\n    border-radius: 50%;\r\n}\r\n\r\n.title-bar h5 {\r\n    margin: 24px 0;\r\n}\r\n\r\n.title-bar img {\r\n    width: 50px;\r\n    height: 50px;\r\n}\r\n\r\n.wrap {\r\n    background-color: #ffffff;\r\n    padding: 1%;\r\n    width: 35%;\r\n    min-width: 350px;\r\n    margin: 0 auto;\r\n    border-radius: 6px;\r\n    box-shadow: 0 0 5px #ccc;\r\n    border: 1px solid #fff;\r\n}\r\n\r\nlabel {\r\n    margin-right: 3%;\r\n    display: inline-block;\r\n    width: 110px;\r\n    text-align: right;\r\n}\r\n\r\ninput {\r\n    width: 70%;\r\n    margin-bottom: 1%;\r\n    padding: 1%;\r\n    border-radius: 6px;\r\n    border: 1px solid #efefef;\r\n    font-size: 15px;\r\n    transition: all .2s ease-in-out;\r\n}\r\n\r\n\r\n\r\n.username_submit {\r\n    font-size: 14px;\r\n    background-color: #388265;\r\n    color: white;\r\n    width: 15%;\r\n    margin-left: 5%;\r\n    border-radius: 4px;\r\n    border: none;\r\n    display: none;\r\n}\r\n\r\ninput:focus {\r\n    outline: none;\r\n    border-color: #A5C2B6;\r\n    box-shadow: 0 0 10px #A5C2B6;\r\n    transition: all .2s ease-in-out;\r\n}\r\n\r\ninput.submit {\r\n    width: 100%;\r\n    padding: 3%;\r\n    border-radius: 6px;\r\n    border: 1px solid #388265;\r\n    font-size: 15px;\r\n    background-color: #388265;\r\n    color: #fff;\r\n    margin-top: 25px;\r\n    transition: all .2s ease-in-out;\r\n}\r\n\r\ninput.submit:hover {\r\n    width: 100%;\r\n    padding: 3%;\r\n    border-radius: 6px;\r\n    font-size: 15px;\r\n    color: #fff;\r\n    margin-top: 25px;\r\n    transition: all .2s ease-in-out;\r\n}\r\n\r\n.gender,\r\n.age_range {\r\n    width: 100%;\r\n    display: block;\r\n    justify-content: center;\r\n    align-items: center;\r\n    padding: 1%;\r\n    margin-left: -1%;\r\n    font-size: 14px;\r\n\r\n}\r\n\r\n.input_sex {\r\n    width: 14px;\r\n    height: 14px;\r\n    transition: all .2s ease-in-out;\r\n}\r\n\r\n#error {\r\n    color: red;\r\n    margin-bottom: 2%;\r\n    margin-left: 24%;\r\n    font-size: 12px;\r\n}\r\n#complete {\r\n    color: #388265;\r\n    margin-bottom: 2%;\r\n    margin-left: 24%;\r\n    font-size: 12px;\r\n}\r\n\r\n.error_border:focus {\r\n    border-color: red;\r\n    box-shadow: none;\r\n}\r\n\r\n.error_submit {\r\n    width: 100%;\r\n    padding: 3%;\r\n    border-radius: 6px;\r\n    border: 1px solid gray;\r\n    font-size: 15px;\r\n    background-color: grey;\r\n    color: darkgray;\r\n    margin-top: 25px;\r\n    transition: all .2s ease-in-out;\r\n}\r\n</style>\r\n"],"mappings":";OAS+CA,UAAsC;;;EAP5EC,KAAK,EAAC;AAAM;;EACRA,KAAK,EAAC;AAAW;gEAClBC,mBAAA,CAAa,YAAT,MAAI;;EAEGD,KAAK,EAAC,iBAAiB;EAACE,GAAG,EAAC;;gEAC/BD,mBAAA,CAAkC;EAA7BD,KAAK,EAAC;AAAe,GAAC,GAAC;;;;EAEhBG,EAAE,EAAC,WAAW;EAACC,GAAsC,EAAtCL,UAAsC;EAACM,GAAG,EAAC;;gEACtEJ,mBAAA,CAAM;;EAQbD,KAAK,EAAC;AAAM;iEAETC,mBAAA,CAA8B;EAAvBC,GAAG,EAAC;AAAO,GAAC,KAAG;iEAGlBD,mBAAA,CACiD;EAD9CK,IAAI,EAAC;AAAkB,I,aAACL,mBAAA,CACkB;EADVM,IAAI,EAAC,QAAQ;EAACJ,EAAE,EAAC,aAAa;EACzDH,KAAK,EAAC;GAAkB,MAAI,E;qBADpCQ,WACiD,C;;;EAElDL,EAAE,EAAC;;;EACHA,EAAE,EAAC;AAAO;;EACVA,EAAE,EAAC;AAAU;iEAChBF,mBAAA,CAAkC;EAA3BC,GAAG,EAAC;AAAU,GAAC,MAAI;iEAC6GD,mBAAA,CAAM;;;EAC1IE,EAAE,EAAC;;iEAA+CF,mBAAA,CAAM;iEAC3DA,mBAAA,CAA4C;EAArCC,GAAG,EAAC;AAAiB,GAAC,SAAO;iEAC+FD,mBAAA,CAAM;;;EACtIE,EAAE,EAAC;;iEACNF,mBAAA,CAAgC;EAAzBC,GAAG,EAAC;AAAU,GAAC,IAAE;iEAGpBD,mBAAA,CACiD;EAD9CK,IAAI,EAAC;AAAiB,I,aAACL,mBAAA,CACmB;EADXM,IAAI,EAAC,QAAQ;EAACJ,EAAE,EAAC,gBAAgB;EAC3DH,KAAK,EAAC;GAAkB,MAAI,E;qBADpCS,WACiD,C;;EAElDN,EAAE,EAAC;AAAO;;EACVA,EAAE,EAAC;AAAU;;;EACbA,EAAE,EAAC;;;EACDH,KAAK,EAAC;AAAQ;iEACfC,mBAAA,CAA2B;EAApBC,GAAG,EAAC;AAAK,GAAC,IAAE;;;EAIpBC,EAAE,EAAC;;;EACDH,KAAK,EAAC;AAAW;iEAClBC,mBAAA,CAAkC;EAA3BC,GAAG,EAAC;AAAW,GAAC,KAAG;;;EAQ3BC,EAAE,EAAC;;iEACNF,mBAAA,CAAmC;EAA5BC,GAAG,EAAC;AAAW,GAAC,MAAI;iEACuGD,mBAAA,CAAM;;;EACrIE,EAAE,EAAC;;;EACHG,IAAI,EAAC;AAAY;;;;6DA9DhCI,YAAA,CAAUC,iBAAA,GACVV,mBAAA,CAkEM,OAlENW,UAkEM,GAjEFX,mBAAA,CAcM,OAdNY,UAcM,GAbFC,UAAa,EACbb,mBAAA,CASO;IATAc,QAAM,EAAAC,MAAA,QAAAA,MAAA,MAAAC,cAAA,KAAAC,IAAA,KAAUC,QAAA,CAAAC,QAAA,IAAAD,QAAA,CAAAC,QAAA,IAAAF,IAAA,CAAQ;MAC3BjB,mBAAA,CAKQ,SALRoB,UAKQ,GAJJC,UAAkC,EACvBC,KAAA,CAAAhB,IAAI,I,cAAfiB,mBAAA,CAAuE;;IAAtDxB,KAAK,EAAC,WAAW;IAAEI,GAAG,EAAEmB,KAAA,CAAAE,aAAa;IAAEpB,GAAG,EAAC;wDAC5DmB,mBAAA,CAAiF,OAAjFE,UAAiF,IACjFC,UAAM,C,GAGV1B,mBAAA,CAA2E;IAApEE,EAAE,EAAC,MAAM;IAACI,IAAI,EAAC,MAAM;IAACqB,GAAG,EAAC,OAAO;IAAEC,QAAM,EAAAb,MAAA,QAAAA,MAAA,UAAAE,IAAA,KAAEC,QAAA,CAAAW,MAAA,IAAAX,QAAA,CAAAW,MAAA,IAAAZ,IAAA,CAAM;IAAEa,SAAS,EAAC;+EAK5E9B,mBAAA,CAiDM,OAjDN+B,UAiDM,GAhDF/B,mBAAA,CA+CO;IA/CAc,QAAM,EAAAC,MAAA,SAAAA,MAAA,OAAAC,cAAA,KAAAC,IAAA,KAAUC,QAAA,CAAAC,QAAA,IAAAD,QAAA,CAAAC,QAAA,IAAAF,IAAA,CAAQ;MAC3Be,WAA8B,E,gBAC9BhC,mBAAA,CAA2I;+DAA3HsB,KAAA,CAAAW,KAAK,GAAAC,MAAA;IAAE5B,IAAI,EAAC,MAAM;IAACJ,EAAE,EAAC,OAAO;IAACiC,WAAW,EAAC,QAAQ;IAAEpC,KAAK,EAAAqC,eAAA;MAAAC,YAAA,EAAkBf,KAAA,CAAAgB,WAAW,IAAIhB,KAAA,CAAAiB,UAAU;IAAA;IAAQT,SAAS,EAAC;0CAAtHR,KAAA,CAAAW,KAAK,E,GACrBjC,mBAAA,CAGO;IAHAc,QAAM,EAAAC,MAAA,QAAAA,MAAA,MAAAC,cAAA,KAAAC,IAAA,KAAUC,QAAA,CAAAsB,cAAA,IAAAtB,QAAA,CAAAsB,cAAA,IAAAvB,IAAA,CAAc;4CAIjBK,KAAA,CAAAgB,WAAW,I,cAA/Bf,mBAAA,CAAwE,KAAxEkB,WAAwE,EAAvC,qCAAmC,K,mDACpEzC,mBAAA,CAAuD,KAAvD0C,WAAuD,EAAhB,cAAY,0B,SAA7BpB,KAAA,CAAAiB,UAAU,O,mBAChCvC,mBAAA,CAA2E,KAA3E2C,WAA2E,EAAjB,eAAa,0B,SAA9CrB,KAAA,CAAAiB,UAAU,UAAUjB,KAAA,CAAAgB,WAAW,E,GACxDM,WAAkC,E,gBAClC5C,mBAAA,CAAuI;+DAAvHsB,KAAA,CAAAuB,QAAQ,GAAAX,MAAA;IAAE5B,IAAI,EAAC,UAAU;IAACJ,EAAE,EAAC,UAAU;IAAEH,KAAK,EAAAqC,eAAA;MAAAC,YAAA,EAAkBf,KAAA,CAAAwB;IAAc;IAAIX,WAAW,EAAC,SAAS;IAACL,SAAS,EAAC;0CAAlHR,KAAA,CAAAuB,QAAQ,E,GAA+GE,WAAM,EACzHzB,KAAA,CAAAwB,cAAc,I,cAAlCvB,mBAAA,CAAmG,KAAnGyB,WAAmG,G,iBAA/D,mBAAiB,GAAAC,WAAM,E,iBAAA,sCAAoC,E,wCAC/FC,WAA4C,E,gBAC5ClD,mBAAA,CAAmI;+DAAnHsB,KAAA,CAAA6B,SAAS,GAAAjB,MAAA;IAAE5B,IAAI,EAAC,UAAU;IAACJ,EAAE,EAAC,gBAAgB;IAAEH,KAAK,EAAAqC,eAAA;MAAAC,YAAA,EAAkBf,KAAA,CAAA8B;IAAe;IAAIjB,WAAW,EAAC;0CAAtGb,KAAA,CAAA6B,SAAS,E,GAA0GE,WAAM,EACrH/B,KAAA,CAAA8B,eAAe,I,cAAnC7B,mBAAA,CAAyD,KAAzD+B,WAAyD,EAApB,kBAAgB,K,mCACrDC,WAAgC,EAChCvD,mBAAA,CAA8K;IAArKwD,OAAK,EAAAzC,MAAA,QAAAA,MAAA,MAAAmB,MAAA,IAAEZ,KAAA,CAAAmC,QAAQ,GAAGvB,MAAM,CAACwB,MAAM,CAACC,KAAK;IAAErD,IAAI,EAAC,MAAM;IAACJ,EAAE,EAAC,UAAU;IAACiC,WAAW,EAAC,QAAQ;IAAEpC,KAAK,EAAAqC,eAAA;MAAAC,YAAA,EAAkBuB,IAAA,CAAAC,eAAe,IAAIvC,KAAA,CAAAwC,aAAa;IAAA;IAAQhC,SAAS,EAAC;4CACzK9B,mBAAA,CAGO;IAHAc,QAAM,EAAAC,MAAA,QAAAA,MAAA,MAAAC,cAAA,KAAAC,IAAA,KAAUC,QAAA,CAAA6C,iBAAA,IAAA7C,QAAA,CAAA6C,iBAAA,IAAA9C,IAAA,CAAiB;4DAIxCjB,mBAAA,CAA0D,KAA1DgE,WAA0D,EAAhB,cAAY,0B,SAAhC1C,KAAA,CAAAwC,aAAa,O,mBACnC9D,mBAAA,CAA8D,KAA9DiE,WAA8D,EAAjB,eAAa,0B,SAAjC3C,KAAA,CAAAwC,aAAa,O,GAClBF,IAAA,CAAAC,eAAe,I,cAAnCtC,mBAAA,CAAqD,KAArD2C,WAAqD,EAAhB,cAAY,K,mCACjDlE,mBAAA,CAIM,OAJNmE,WAIM,GAHFC,WAA2B,E,gBAC3BpE,mBAAA,CAAiF;+DAAjEsB,KAAA,CAAA+C,GAAG,GAAAnC,MAAA;IAAE5B,IAAI,EAAC,OAAO;IAACgE,IAAI,EAAC,QAAQ;IAACX,KAAK,EAAC,MAAM;IAAC5D,KAAK,EAAC;kDAAnDuB,KAAA,CAAA+C,GAAG,E,oBAA8D,KACjF,G,gBAAArE,mBAAA,CAAmF;+DAAnEsB,KAAA,CAAA+C,GAAG,GAAAnC,MAAA;IAAE5B,IAAI,EAAC,OAAO;IAACgE,IAAI,EAAC,QAAQ;IAACX,KAAK,EAAC,QAAQ;IAAC5D,KAAK,EAAC;kDAArDuB,KAAA,CAAA+C,GAAG,E,oBAAgE,KACvF,E,GACoB/C,KAAA,CAAAiD,SAAS,I,cAA7BhD,mBAAA,CAA6C,KAA7CiD,WAA6C,EAAd,YAAU,K,mCACzCxE,mBAAA,CAQM,OARNyE,WAQM,GAPFC,WAAkC,E,gBAClC1E,mBAAA,CAAuF;iEAAvEsB,KAAA,CAAAqD,QAAQ,GAAAzC,MAAA;IAAE5B,IAAI,EAAC,OAAO;IAACgE,IAAI,EAAC,UAAU;IAACX,KAAK,EAAC,KAAK;IAAC5D,KAAK,EAAC;kDAAzDuB,KAAA,CAAAqD,QAAQ,E,oBAA+D,MACvF,G,gBAAA3E,mBAAA,CAAsF;iEAAtEsB,KAAA,CAAAqD,QAAQ,GAAAzC,MAAA;IAAE5B,IAAI,EAAC,OAAO;IAACgE,IAAI,EAAC,UAAU;IAACX,KAAK,EAAC,IAAI;IAAC5D,KAAK,EAAC;kDAAxDuB,KAAA,CAAAqD,QAAQ,E,oBAA8D,MACtF,G,gBAAA3E,mBAAA,CAAsF;iEAAtEsB,KAAA,CAAAqD,QAAQ,GAAAzC,MAAA;IAAE5B,IAAI,EAAC,OAAO;IAACgE,IAAI,EAAC,UAAU;IAACX,KAAK,EAAC,IAAI;IAAC5D,KAAK,EAAC;kDAAxDuB,KAAA,CAAAqD,QAAQ,E,oBAA8D,MACtF,G,gBAAA3E,mBAAA,CAAsF;iEAAtEsB,KAAA,CAAAqD,QAAQ,GAAAzC,MAAA;IAAE5B,IAAI,EAAC,OAAO;IAACgE,IAAI,EAAC,UAAU;IAACX,KAAK,EAAC,IAAI;IAAC5D,KAAK,EAAC;kDAAxDuB,KAAA,CAAAqD,QAAQ,E,oBAA8D,MACtF,G,gBAAA3E,mBAAA,CAAsF;iEAAtEsB,KAAA,CAAAqD,QAAQ,GAAAzC,MAAA;IAAE5B,IAAI,EAAC,OAAO;IAACgE,IAAI,EAAC,UAAU;IAACX,KAAK,EAAC,IAAI;IAAC5D,KAAK,EAAC;kDAAxDuB,KAAA,CAAAqD,QAAQ,E,oBAA8D,MACtF,G,gBAAA3E,mBAAA,CAAsF;iEAAtEsB,KAAA,CAAAqD,QAAQ,GAAAzC,MAAA;IAAE5B,IAAI,EAAC,OAAO;IAACgE,IAAI,EAAC,UAAU;IAACX,KAAK,EAAC,IAAI;IAAC5D,KAAK,EAAC;kDAAxDuB,KAAA,CAAAqD,QAAQ,E,oBAA8D,SAC1F,E,GACoBrD,KAAA,CAAAsD,eAAe,I,cAAnCrD,mBAAA,CAAoD,KAApDsD,WAAoD,EAAf,aAAW,K,mCAChDC,WAAmC,E,gBACnC9E,mBAAA,CAAkI;iEAAlHsB,KAAA,CAAAyD,SAAS,GAAA7C,MAAA;IAAE5B,IAAI,EAAC,MAAM;IAACJ,EAAE,EAAC,WAAW;IAACiC,WAAW,EAAC,SAAS;IAAEpC,KAAK,EAAAqC,eAAA;MAAAC,YAAA,EAAkBf,KAAA,CAAA0D;IAAW;IAAIlD,SAAS,EAAC;0CAA7GR,KAAA,CAAAyD,SAAS,E,GAAyGE,WAAM,EACpH3D,KAAA,CAAA0D,WAAW,I,cAA/BzD,mBAAA,CAAoE,KAApE2D,WAAoE,EAAnC,iCAA+B,K,mCAChElF,mBAAA,CACyD,KADzDmF,WACyD,GADpCnF,mBAAA,CACgC;IADzBM,IAAI,EAAC,QAAQ;IAAEP,KAAK,EAAAqC,eAAA;MAAA,gBAAoBd,KAAA,CAAA8D,QAAQ;MAAA,WAAa9D,KAAA,CAAA8D;IAAQ;IACxFC,QAAQ,EAAE/D,KAAA,CAAA8D,QAAQ;IAAElF,EAAE,EAAC,OAAO;IAACyD,KAAK,EAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}