{"ast":null,"code":"import { ref } from \"vue\";\nimport gnbBar from \"../components/gnbBar.vue\";\nimport TabsWrapper from \"../components/TabsWrapper.vue\";\nimport TabItem from \"../components/TabItem.vue\";\nimport boardList from \"../components/boardList.vue\";\nimport commentList from \"../components/commentList.vue\";\nimport recentBoardList from \"../components/recentBoardList.vue\";\nimport axios from \"axios\";\naxios.defaults.baseURL = \"http://localhost:3000\";\naxios.defaults.headers.post[\"Content-Type\"] = \"application/json;charset=utf-8\";\naxios.defaults.headers.post[\"Access-Control-Allow-Origin\"] = \"*\";\nexport default {\n  components: {\n    gnbBar,\n    TabsWrapper,\n    TabItem,\n    boardList,\n    recentBoardList,\n    commentList\n  },\n  data() {\n    return {\n      email: \"\",\n      nick: \"\",\n      image: \"\",\n      provider: \"\",\n      editMode: false,\n      comment_editMode: false,\n      boardList: [],\n      recentBoardList: []\n    };\n  },\n  created() {\n    this.email = localStorage.getItem(\"userID\");\n    this.nick = localStorage.getItem(\"userNick\");\n    this.image = localStorage.getItem(\"userImage\");\n    this.provider = localStorage.getItem(\"userProvider\");\n    this.boardListData();\n    this.recentBoardListData();\n  },\n  methods: {\n    // 내글 편집 삭제 수정 버튼-------------------------------------------------------------------------------------------------------\n    // ---------------------------------------------------------------------------------------------------------------------\n    toggleEditMode() {\n      this.editMode = true;\n    },\n    deleteContent() {\n      const values = [10, 11]; // 삭제할 컨텐츠의 배열 값\n      if (values.length === 0) {\n        console.log(\"삭제할 컨텐츠가 없습니다\");\n        return; // 빈 배열이면 종료\n      }\n\n      axios({\n        url: \"/mypage/delMyCourse\",\n        method: \"POST\",\n        data: {\n          values\n        }\n      }).then(res => {\n        if (res.data.code == 200) {\n          // window.location.href = \"/mypage\";\n          this.$router.go(0);\n          console.log(\"삭제 성공\");\n        }\n      }).catch(err => {\n        if (err) {\n          console.log(err);\n        }\n      });\n    },\n    cancelEdit() {\n      this.editMode = false;\n    },\n    // 코멘트 글 편집 삭제 수정 버튼-------------------------------------------------------------------------------------------------------\n    // ---------------------------------------------------------------------------------------------------------------------\n    toggleCommentEditMode() {\n      console.log(\"toggleCommentEditMode 호출됨\");\n      this.comment_editMode = true;\n    },\n    deleteComment() {\n      // 코멘트 삭제 로직\n    },\n    cancelCommentEdit() {\n      console.log(\"cancelCommentEdit 호출됨\");\n      this.comment_editMode = false;\n    },\n    // 보드리스트 불러오기-------------------------------------------------------------------------------------------------------\n    // ---------------------------------------------------------------------------------------------------------------------\n    async boardListData() {\n      try {\n        console.log(\"boardListData 메서드 호출됨\"); // 로그 추가\n        const response = await axios.post(\"/mypage/myCourse\", {\n          userEmail: this.email\n        });\n        console.log(\"서버 응답 데이터:\", response.data); // 로그 추가\n        this.boardList = response.data;\n      } catch (error) {\n        console.error(error);\n      }\n    },\n    // 최근에 본 게시글 리스트 불러오기-------------------------------------------------------------------------------------------------------\n    // ---------------------------------------------------------------------------------------------------------------------\n    async recentBoardListData() {\n      try {\n        const response = await axios.post(\"/mypage/recentCourse\", {\n          userEmail: this.email\n        });\n        this.recentBoardList = response.data;\n      } catch (error) {\n        console.error(error);\n      }\n    }\n  },\n  setup() {\n    const commentListData = ref([{\n      COM_ID: 0,\n      COM_NUM: 0,\n      COM_TITLE: \"댓글이 포함된 본문의 제목\",\n      COM_CREATED_AT: \"2023-06-26\",\n      COM_COMMENT: \"댓글내용댓글내용댓글애용\"\n    }, {\n      COM_ID: 1,\n      COM_NUM: 1,\n      COM_TITLE: \"댓글이 포함된 본문의 제목1\",\n      COM_CREATED_AT: \"2023-06-26\",\n      COM_COMMENT: \"댓글내용댓글내용댓글애용1\"\n    }, {\n      COM_ID: 2,\n      COM_NUM: 2,\n      COM_TITLE: \"댓글이 포함된 본문의 제목2\",\n      COM_CREATED_AT: \"2023-06-26\",\n      COM_COMMENT: \"댓글내용댓글내용댓글애용2\"\n    }]);\n    return {\n      commentList: commentListData\n    };\n  }\n};","map":{"version":3,"names":["ref","gnbBar","TabsWrapper","TabItem","boardList","commentList","recentBoardList","axios","defaults","baseURL","headers","post","components","data","email","nick","image","provider","editMode","comment_editMode","created","localStorage","getItem","boardListData","recentBoardListData","methods","toggleEditMode","deleteContent","values","length","console","log","url","method","then","res","code","$router","go","catch","err","cancelEdit","toggleCommentEditMode","deleteComment","cancelCommentEdit","response","userEmail","error","setup","commentListData","COM_ID","COM_NUM","COM_TITLE","COM_CREATED_AT","COM_COMMENT"],"sources":["/Users/seoyeonju/Library/CloudStorage/OneDrive-계원예술대학교/풀스텍/weave-wego 2/vue_front/src/views/myPage.vue"],"sourcesContent":["<style src=\"../assets/css/mypage.css\"></style>\r\n<style src=\"../assets/css/reset.css\"></style>\r\n<template>\r\n  <gnbBar />\r\n\r\n  <section class=\"mypage_profile_set\">\r\n    <!-- ----------------------------------------------------------------------------------------------------------------------------------- -->\r\n    <h1 class=\"mypage_title\">마이페이지</h1>\r\n    <div class=\"myprofile\">\r\n      <div class=\"profileimg\">\r\n        <div v-if=\"provider === 'local'\">\r\n          <img\r\n            class=\"profile\"\r\n            :src=\"`http://localhost:3000/downloadProfile/${email}/${image}`\"\r\n            alt=\"profileExample\"\r\n          />\r\n        </div>\r\n        <div v-else-if=\"provider === 'kakao'\">\r\n          <div\r\n            class=\"kakao_profile_img\"\r\n            :style=\"{ 'background-image': 'url(' + image + ')' }\"\r\n          ></div>\r\n        </div>\r\n        <div v-else-if=\"provider === 'naver'\">\r\n          <div\r\n            class=\"naver_profile_img\"\r\n            :style=\"{ 'background-image': 'url(' + image + ')' }\"\r\n          ></div>\r\n        </div>\r\n        <a href=\"/updateprofile\"\r\n          ><img\r\n            class=\"setting_icon\"\r\n            src=\"../assets/img/setting_btn.png\"\r\n            alt=\"setting_btn\"\r\n        /></a>\r\n      </div>\r\n      <div class=\"nickname_email\">\r\n        <div class=\"nickname\">{{ nick }}</div>\r\n        <div class=\"email\">{{ email }}</div>\r\n      </div>\r\n    </div>\r\n  </section>\r\n  <section>\r\n    <TabsWrapper>\r\n      <TabItem title=\"내코스\" @click=\"\">\r\n        <div>\r\n          <button v-if=\"!editMode\" class=\"edit\" @click=\"toggleEditMode\">\r\n            &nbsp;&nbsp;편집&nbsp;&nbsp;\r\n          </button>\r\n          <button v-if=\"editMode\" class=\"delete\" @click=\"deleteContent\">\r\n            &nbsp;&nbsp;삭제&nbsp;&nbsp;\r\n          </button>\r\n          <button v-if=\"editMode\" class=\"cancel\" @click=\"cancelEdit\">\r\n            &nbsp;&nbsp;취소&nbsp;&nbsp;\r\n          </button>\r\n        </div>\r\n        <!-- 내코스--------------------------------------------------------------------------------------------------------------------------------------\r\n        --------------------------------------------------------------------------------------------------------------------------------------\r\n        -------------------------------------------------------------------------------------------------------------------------------------\r\n        --------------------------------------------------------------------------------------------------------------------------------------\r\n        -------------------------------------------------------------------------------------------------------------------------------------- -->\r\n        <div class=\"course\">\r\n          <boardList\r\n            v-for=\"item in boardList\"\r\n            :boardList=\"item\"\r\n            :key=\"item.BRD_ID\"\r\n            :editMode=\"editMode\"\r\n          ></boardList>\r\n        </div>\r\n      </TabItem>\r\n      <TabItem title=\"최근에 본 코스\">\r\n        <div class=\"course\">\r\n          <recentBoardList\r\n            v-for=\"item in recentBoardList\"\r\n            :recentBoardList=\"item\"\r\n            :key=\"item.id\"\r\n          /></div\r\n      ></TabItem>\r\n      <TabItem title=\"좋아요 리스트\">\r\n        <div class=\"course\">\r\n          <boardList\r\n            v-for=\"item in boardList\"\r\n            :boardList=\"item\"\r\n            :key=\"item.id\"\r\n            :hideBrdOpen=\"true\"\r\n          /></div\r\n      ></TabItem>\r\n      <TabItem title=\"내가 쓴 댓글\">\r\n        <div>\r\n          <button\r\n            v-if=\"!comment_editMode\"\r\n            class=\"edit\"\r\n            @click=\"toggleCommentEditMode\"\r\n          >\r\n            &nbsp;&nbsp;편집&nbsp;&nbsp;\r\n          </button>\r\n          <button v-if=\"comment_editMode\" class=\"delete\" @click=\"deleteComment\">\r\n            &nbsp;&nbsp;삭제&nbsp;&nbsp;\r\n          </button>\r\n          <button\r\n            v-if=\"comment_editMode\"\r\n            class=\"cancel\"\r\n            @click=\"cancelCommentEdit\"\r\n          >\r\n            &nbsp;&nbsp;취소&nbsp;&nbsp;\r\n          </button>\r\n        </div>\r\n        <button class=\"comment_edit\">&nbsp;&nbsp;편집&nbsp;&nbsp;</button>\r\n\r\n        <div class=\"commentlist\">\r\n          <commentList\r\n            v-for=\"item in commentList\"\r\n            :commentList=\"item\"\r\n            :key=\"item.COM_ID\"\r\n            :comment_editMode=\"comment_editMode\"\r\n          />\r\n        </div>\r\n      </TabItem>\r\n    </TabsWrapper>\r\n  </section>\r\n</template>\r\n\r\n<script>\r\nimport { ref } from \"vue\";\r\nimport gnbBar from \"../components/gnbBar.vue\";\r\nimport TabsWrapper from \"../components/TabsWrapper.vue\";\r\nimport TabItem from \"../components/TabItem.vue\";\r\nimport boardList from \"../components/boardList.vue\";\r\nimport commentList from \"../components/commentList.vue\";\r\nimport recentBoardList from \"../components/recentBoardList.vue\";\r\nimport axios from \"axios\";\r\naxios.defaults.baseURL = \"http://localhost:3000\";\r\naxios.defaults.headers.post[\"Content-Type\"] = \"application/json;charset=utf-8\";\r\naxios.defaults.headers.post[\"Access-Control-Allow-Origin\"] = \"*\";\r\n\r\nexport default {\r\n  components: {\r\n    gnbBar,\r\n    TabsWrapper,\r\n    TabItem,\r\n    boardList,\r\n    recentBoardList,\r\n    commentList,\r\n  },\r\n  data() {\r\n    return {\r\n      email: \"\",\r\n      nick: \"\",\r\n      image: \"\",\r\n      provider: \"\",\r\n      editMode: false,\r\n      comment_editMode: false,\r\n      boardList: [],\r\n      recentBoardList: [],\r\n    };\r\n  },\r\n  created() {\r\n    this.email = localStorage.getItem(\"userID\");\r\n    this.nick = localStorage.getItem(\"userNick\");\r\n    this.image = localStorage.getItem(\"userImage\");\r\n    this.provider = localStorage.getItem(\"userProvider\");\r\n    this.boardListData();\r\n    this.recentBoardListData();\r\n  },\r\n  methods: {\r\n    // 내글 편집 삭제 수정 버튼-------------------------------------------------------------------------------------------------------\r\n    // ---------------------------------------------------------------------------------------------------------------------\r\n    toggleEditMode() {\r\n      this.editMode = true;\r\n    },\r\n    deleteContent() {\r\n      const values = [10, 11]; // 삭제할 컨텐츠의 배열 값\r\n      if (values.length === 0) {\r\n        console.log(\"삭제할 컨텐츠가 없습니다\");\r\n        return; // 빈 배열이면 종료\r\n      }\r\n      axios({\r\n        url: \"/mypage/delMyCourse\",\r\n        method: \"POST\",\r\n        data: {\r\n          values,\r\n        },\r\n      })\r\n        .then((res) => {\r\n          if (res.data.code == 200) {\r\n            // window.location.href = \"/mypage\";\r\n            this.$router.go(0);\r\n            console.log(\"삭제 성공\");\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          if (err) {\r\n            console.log(err);\r\n          }\r\n        });\r\n    },\r\n    cancelEdit() {\r\n      this.editMode = false;\r\n    },\r\n\r\n    // 코멘트 글 편집 삭제 수정 버튼-------------------------------------------------------------------------------------------------------\r\n    // ---------------------------------------------------------------------------------------------------------------------\r\n    toggleCommentEditMode() {\r\n      console.log(\"toggleCommentEditMode 호출됨\");\r\n      this.comment_editMode = true;\r\n    },\r\n    deleteComment() {\r\n      // 코멘트 삭제 로직\r\n    },\r\n    cancelCommentEdit() {\r\n      console.log(\"cancelCommentEdit 호출됨\");\r\n      this.comment_editMode = false;\r\n    },\r\n    // 보드리스트 불러오기-------------------------------------------------------------------------------------------------------\r\n    // ---------------------------------------------------------------------------------------------------------------------\r\n    async boardListData() {\r\n      try {\r\n        console.log(\"boardListData 메서드 호출됨\"); // 로그 추가\r\n        const response = await axios.post(\"/mypage/myCourse\", {\r\n          userEmail: this.email,\r\n        });\r\n        console.log(\"서버 응답 데이터:\", response.data); // 로그 추가\r\n        this.boardList = response.data;\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    },\r\n    // 최근에 본 게시글 리스트 불러오기-------------------------------------------------------------------------------------------------------\r\n    // ---------------------------------------------------------------------------------------------------------------------\r\n    async recentBoardListData() {\r\n      try {\r\n        const response = await axios.post(\"/mypage/recentCourse\", {\r\n          userEmail: this.email,\r\n        });\r\n        this.recentBoardList = response.data;\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    },\r\n  },\r\n  setup() {\r\n    const commentListData = ref([\r\n      {\r\n        COM_ID: 0,\r\n        COM_NUM: 0,\r\n        COM_TITLE: \"댓글이 포함된 본문의 제목\",\r\n        COM_CREATED_AT: \"2023-06-26\",\r\n        COM_COMMENT: \"댓글내용댓글내용댓글애용\",\r\n      },\r\n      {\r\n        COM_ID: 1,\r\n        COM_NUM: 1,\r\n        COM_TITLE: \"댓글이 포함된 본문의 제목1\",\r\n        COM_CREATED_AT: \"2023-06-26\",\r\n        COM_COMMENT: \"댓글내용댓글내용댓글애용1\",\r\n      },\r\n      {\r\n        COM_ID: 2,\r\n        COM_NUM: 2,\r\n        COM_TITLE: \"댓글이 포함된 본문의 제목2\",\r\n        COM_CREATED_AT: \"2023-06-26\",\r\n        COM_COMMENT: \"댓글내용댓글내용댓글애용2\",\r\n      },\r\n    ]);\r\n\r\n    return {\r\n      commentList: commentListData,\r\n    };\r\n  },\r\n};\r\n</script>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}