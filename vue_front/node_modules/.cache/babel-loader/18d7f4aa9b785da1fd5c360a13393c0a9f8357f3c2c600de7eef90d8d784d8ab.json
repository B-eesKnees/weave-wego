{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, normalizeStyle as _normalizeStyle, toDisplayString as _toDisplayString, renderList as _renderList, Fragment as _Fragment, createBlock as _createBlock, withCtx as _withCtx } from \"vue\";\nimport _imports_0 from '../assets/img/profileExample.png';\nimport _imports_1 from '../assets/img/setting_btn.png';\nconst _hoisted_1 = {\n  class: \"mypage_profile_set\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h1\", {\n  class: \"mypage_title\"\n}, \"마이페이지\", -1 /* HOISTED */);\nconst _hoisted_3 = {\n  class: \"myprofile\"\n};\nconst _hoisted_4 = {\n  class: \"profileimg\"\n};\nconst _hoisted_5 = {\n  key: 0\n};\nconst _hoisted_6 = [\"src\"];\nconst _hoisted_7 = {\n  key: 1\n};\nconst _hoisted_8 = {\n  key: 2\n};\nconst _hoisted_9 = {\n  key: 3\n};\nconst _hoisted_10 = /*#__PURE__*/_createElementVNode(\"img\", {\n  class: \"kakao_profile_img\",\n  src: _imports_0,\n  alt: \"profileExample\"\n}, null, -1 /* HOISTED */);\nconst _hoisted_11 = [_hoisted_10];\nconst _hoisted_12 = /*#__PURE__*/_createElementVNode(\"a\", {\n  href: \"/checkpw\"\n}, [/*#__PURE__*/_createElementVNode(\"img\", {\n  class: \"setting_icon\",\n  src: _imports_1,\n  alt: \"setting_btn\"\n})], -1 /* HOISTED */);\nconst _hoisted_13 = {\n  class: \"nickname_email\"\n};\nconst _hoisted_14 = {\n  class: \"nickname\"\n};\nconst _hoisted_15 = {\n  class: \"email\"\n};\nconst _hoisted_16 = {\n  key: 0\n};\nconst _hoisted_17 = {\n  class: \"course\"\n};\nconst _hoisted_18 = /*#__PURE__*/_createElementVNode(\"div\", {\n  id: \"nodata\",\n  class: \"nodata\"\n}, \"작성한 게시글이 없습니다\", -1 /* HOISTED */);\nconst _hoisted_19 = {\n  class: \"course\"\n};\nconst _hoisted_20 = /*#__PURE__*/_createElementVNode(\"div\", {\n  id: \"norecentData\",\n  class: \"nodata\"\n}, \"최근에 본 코스가 없습니다\", -1 /* HOISTED */);\nconst _hoisted_21 = {\n  class: \"course\"\n};\nconst _hoisted_22 = /*#__PURE__*/_createElementVNode(\"div\", {\n  id: \"noLikeData\",\n  class: \"nodata\"\n}, \"좋아요 한 코스가 없습니다\", -1 /* HOISTED */);\nconst _hoisted_23 = {\n  key: 0\n};\nconst _hoisted_24 = {\n  class: \"commentlist\"\n};\nconst _hoisted_25 = /*#__PURE__*/_createElementVNode(\"div\", {\n  id: \"noCommentData\",\n  class: \"nodata\"\n}, \"작성한 댓글이 없습니다\", -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_gnbBar = _resolveComponent(\"gnbBar\");\n  const _component_boardList = _resolveComponent(\"boardList\");\n  const _component_TabItem = _resolveComponent(\"TabItem\");\n  const _component_recentBoardList = _resolveComponent(\"recentBoardList\");\n  const _component_likeBoardList = _resolveComponent(\"likeBoardList\");\n  const _component_commentList = _resolveComponent(\"commentList\");\n  const _component_TabsWrapper = _resolveComponent(\"TabsWrapper\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_gnbBar), _createElementVNode(\"section\", _hoisted_1, [_createCommentVNode(\" ----------------------------------------------------------------------------------------------------------------------------------- \"), _hoisted_2, _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [$data.provider === 'local' && $data.image !== 'default' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, [_createElementVNode(\"img\", {\n    class: \"kakao_profile_img\",\n    src: `http://localhost:3000/downloadProfile/${$data.email}/${$data.image}`,\n    alt: \"profileExample\"\n  }, null, 8 /* PROPS */, _hoisted_6)])) : $data.provider === 'kakao' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_7, [_createElementVNode(\"div\", {\n    class: \"kakao_profile_img\",\n    style: _normalizeStyle({\n      'background-image': 'url(' + $data.image + ')'\n    })\n  }, null, 4 /* STYLE */)])) : $data.provider === 'naver' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_8, [_createElementVNode(\"div\", {\n    class: \"naver_profile_img\",\n    style: _normalizeStyle({\n      'background-image': 'url(' + $data.image + ')'\n    })\n  }, null, 4 /* STYLE */)])) : $data.image === 'default' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_9, _hoisted_11)) : _createCommentVNode(\"v-if\", true), _hoisted_12]), _createElementVNode(\"div\", _hoisted_13, [_createElementVNode(\"div\", _hoisted_14, _toDisplayString($data.nick), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_15, _toDisplayString($data.email), 1 /* TEXT */)])])]), _createElementVNode(\"section\", null, [_createVNode(_component_TabsWrapper, null, {\n    default: _withCtx(() => [_createVNode(_component_TabItem, {\n      title: \"내코스\"\n    }, {\n      default: _withCtx(() => [_createCommentVNode(\" 내코스--------------------------------------------------------------------------------------------------------------------\\r\\n        ------------------------------------------------------------------------------------------------------------------------ \"), !$data.nodata ? (_openBlock(), _createElementBlock(\"div\", _hoisted_16, [!$data.editMode ? (_openBlock(), _createElementBlock(\"button\", {\n        key: 0,\n        class: \"edit\",\n        onClick: _cache[0] || (_cache[0] = (...args) => $options.toggleEditMode && $options.toggleEditMode(...args))\n      }, \"   편집   \")) : _createCommentVNode(\"v-if\", true), $data.editMode ? (_openBlock(), _createElementBlock(\"button\", {\n        key: 1,\n        class: \"delete\",\n        onClick: _cache[1] || (_cache[1] = (...args) => $options.deleteContent && $options.deleteContent(...args))\n      }, \"   삭제   \")) : _createCommentVNode(\"v-if\", true), $data.editMode ? (_openBlock(), _createElementBlock(\"button\", {\n        key: 2,\n        class: \"cancel\",\n        onClick: _cache[2] || (_cache[2] = (...args) => $options.cancelEdit && $options.cancelEdit(...args))\n      }, \"   취소   \")) : _createCommentVNode(\"v-if\", true)])) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"div\", _hoisted_17, [_hoisted_18, !$data.nodata ? (_openBlock(true), _createElementBlock(_Fragment, {\n        key: 0\n      }, _renderList($data.boardList, item => {\n        return _openBlock(), _createBlock(_component_boardList, {\n          boardList: item,\n          key: item.BRD_ID,\n          editMode: $data.editMode,\n          onAddlist: _cache[3] || (_cache[3] = id => $options.addToselectedItems(id)),\n          onRemovelist: _cache[4] || (_cache[4] = id => $options.deleteToselectedItems(id))\n        }, null, 8 /* PROPS */, [\"boardList\", \"editMode\"]);\n      }), 128 /* KEYED_FRAGMENT */)) : _createCommentVNode(\"v-if\", true)]), _createCommentVNode(\" 자식 컴포넌트에서 넘어온 것들 받기 / 받아온 값들(id) 두 함수에 전달 \")]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_TabItem, {\n      title: \"최근에 본 코스\"\n    }, {\n      default: _withCtx(() => [_createCommentVNode(\" 최근에 본 코스--------------------------------------------------------------------------------------------------------------------\\r\\n        ------------------------------------------------------------------------------------------------------------------------ \"), _createElementVNode(\"div\", _hoisted_19, [_hoisted_20, !$data.norecentData ? (_openBlock(true), _createElementBlock(_Fragment, {\n        key: 0\n      }, _renderList($data.recentBoardList, item => {\n        return _openBlock(), _createBlock(_component_recentBoardList, {\n          recentBoardList: item,\n          key: item.BRD_ID\n        }, null, 8 /* PROPS */, [\"recentBoardList\"]);\n      }), 128 /* KEYED_FRAGMENT */)) : _createCommentVNode(\"v-if\", true)])]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_TabItem, {\n      title: \"좋아요 리스트\"\n    }, {\n      default: _withCtx(() => [_createCommentVNode(\" 좋아요리스트--------------------------------------------------------------------------------------------------------------------\\r\\n        ------------------------------------------------------------------------------------------------------------------------ \"), _createElementVNode(\"div\", _hoisted_21, [_hoisted_22, !$data.noLikeData ? (_openBlock(true), _createElementBlock(_Fragment, {\n        key: 0\n      }, _renderList($data.likeBoardList, item => {\n        return _openBlock(), _createBlock(_component_likeBoardList, {\n          likeBoardList: item,\n          key: item.id,\n          hideBrdOpen: true\n        }, null, 8 /* PROPS */, [\"likeBoardList\"]);\n      }), 128 /* KEYED_FRAGMENT */)) : _createCommentVNode(\"v-if\", true)])]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_TabItem, {\n      title: \"내가 쓴 댓글\"\n    }, {\n      default: _withCtx(() => [_createCommentVNode(\" 내가 쓴 댓글--------------------------------------------------------------------------------------------------------------------\\r\\n        ------------------------------------------------------------------------------------------------------------------------ \"), !$data.noCommentData ? (_openBlock(), _createElementBlock(\"div\", _hoisted_23, [!$data.comment_editMode ? (_openBlock(), _createElementBlock(\"button\", {\n        key: 0,\n        class: \"edit\",\n        onClick: _cache[5] || (_cache[5] = (...args) => $options.toggleCommentEditMode && $options.toggleCommentEditMode(...args))\n      }, \"   편집   \")) : _createCommentVNode(\"v-if\", true), $data.comment_editMode ? (_openBlock(), _createElementBlock(\"button\", {\n        key: 1,\n        class: \"delete\",\n        onClick: _cache[6] || (_cache[6] = (...args) => $options.deleteComment && $options.deleteComment(...args))\n      }, \"   삭제   \")) : _createCommentVNode(\"v-if\", true), $data.comment_editMode ? (_openBlock(), _createElementBlock(\"button\", {\n        key: 2,\n        class: \"cancel\",\n        onClick: _cache[7] || (_cache[7] = (...args) => $options.cancelCommentEdit && $options.cancelCommentEdit(...args))\n      }, \"   취소   \")) : _createCommentVNode(\"v-if\", true)])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" <button class=\\\"comment_edit\\\">&nbsp;&nbsp;편집&nbsp;&nbsp;</button> \"), _createElementVNode(\"div\", _hoisted_24, [_hoisted_25, !$data.noCommentData ? (_openBlock(true), _createElementBlock(_Fragment, {\n        key: 0\n      }, _renderList($data.commentList, item => {\n        return _openBlock(), _createBlock(_component_commentList, {\n          commentList: item,\n          key: item.COM_ID,\n          comment_editMode: $data.comment_editMode\n        }, null, 8 /* PROPS */, [\"commentList\", \"comment_editMode\"]);\n      }), 128 /* KEYED_FRAGMENT */)) : _createCommentVNode(\"v-if\", true)])]),\n      _: 1 /* STABLE */\n    })]),\n\n    _: 1 /* STABLE */\n  })])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_imports_0","_imports_1","class","_createElementVNode","src","alt","_hoisted_10","href","id","_createVNode","_component_gnbBar","_hoisted_1","_createCommentVNode","_hoisted_2","_hoisted_3","_hoisted_4","$data","provider","image","_createElementBlock","_hoisted_5","email","_hoisted_7","style","_normalizeStyle","_hoisted_8","_hoisted_9","_hoisted_11","_hoisted_12","_hoisted_13","_hoisted_14","_toDisplayString","nick","_hoisted_15","_component_TabsWrapper","_component_TabItem","title","nodata","_hoisted_16","editMode","onClick","_cache","args","$options","toggleEditMode","deleteContent","cancelEdit","_hoisted_17","_hoisted_18","_Fragment","key","_renderList","boardList","item","_createBlock","_component_boardList","BRD_ID","onAddlist","addToselectedItems","onRemovelist","deleteToselectedItems","_hoisted_19","_hoisted_20","norecentData","recentBoardList","_component_recentBoardList","_hoisted_21","_hoisted_22","noLikeData","likeBoardList","_component_likeBoardList","hideBrdOpen","noCommentData","_hoisted_23","comment_editMode","toggleCommentEditMode","deleteComment","cancelCommentEdit","_hoisted_24","_hoisted_25","commentList","_component_commentList","COM_ID"],"sources":["/Users/seoyeonju/Library/CloudStorage/OneDrive-계원예술대학교/풀스텍/weave-wego 2/vue_front/src/views/myPage.vue"],"sourcesContent":["<style src=\"../assets/css/mypage.css\"></style>\r\n<style src=\"../assets/css/reset.css\"></style>\r\n<template>\r\n  <gnbBar />\r\n\r\n  <section class=\"mypage_profile_set\">\r\n    <!-- ----------------------------------------------------------------------------------------------------------------------------------- -->\r\n    <h1 class=\"mypage_title\">마이페이지</h1>\r\n    <div class=\"myprofile\">\r\n      <div class=\"profileimg\">\r\n        <div v-if=\"provider === 'local' && image !== 'default'\">\r\n          <img\r\n            class=\"kakao_profile_img\"\r\n            :src=\"`http://localhost:3000/downloadProfile/${email}/${image}`\"\r\n            alt=\"profileExample\"\r\n          />\r\n        </div>\r\n\r\n        <div v-else-if=\"provider === 'kakao'\">\r\n          <div\r\n            class=\"kakao_profile_img\"\r\n            :style=\"{ 'background-image': 'url(' + image + ')' }\"\r\n          ></div>\r\n        </div>\r\n        <div v-else-if=\"provider === 'naver'\">\r\n          <div\r\n            class=\"naver_profile_img\"\r\n            :style=\"{ 'background-image': 'url(' + image + ')' }\"\r\n          ></div>\r\n        </div>\r\n        <div v-else-if=\"image === 'default'\">\r\n          <img\r\n            class=\"kakao_profile_img\"\r\n            src=\"../assets/img/profileExample.png\"\r\n            alt=\"profileExample\"\r\n          />\r\n        </div>\r\n        <a href=\"/checkpw\"\r\n          ><img\r\n            class=\"setting_icon\"\r\n            src=\"../assets/img/setting_btn.png\"\r\n            alt=\"setting_btn\"\r\n        /></a>\r\n      </div>\r\n      <div class=\"nickname_email\">\r\n        <div class=\"nickname\">{{ nick }}</div>\r\n        <div class=\"email\">{{ email }}</div>\r\n      </div>\r\n    </div>\r\n  </section>\r\n  <section>\r\n    <TabsWrapper>\r\n      <TabItem title=\"내코스\">\r\n        <!-- 내코스--------------------------------------------------------------------------------------------------------------------\r\n        ------------------------------------------------------------------------------------------------------------------------ -->\r\n        <div v-if=\"!nodata\">\r\n          <button v-if=\"!editMode\" class=\"edit\" @click=\"toggleEditMode\">\r\n            &nbsp;&nbsp;편집&nbsp;&nbsp;\r\n          </button>\r\n          <button v-if=\"editMode\" class=\"delete\" @click=\"deleteContent\">\r\n            &nbsp;&nbsp;삭제&nbsp;&nbsp;\r\n          </button>\r\n          <button v-if=\"editMode\" class=\"cancel\" @click=\"cancelEdit\">\r\n            &nbsp;&nbsp;취소&nbsp;&nbsp;\r\n          </button>\r\n        </div>\r\n\r\n        <div class=\"course\">\r\n          <div id=\"nodata\" class=\"nodata\">작성한 게시글이 없습니다</div>\r\n          <boardList\r\n            v-if=\"!nodata\"\r\n            v-for=\"item in boardList\"\r\n            :boardList=\"item\"\r\n            :key=\"item.BRD_ID\"\r\n            :editMode=\"editMode\"\r\n            @addlist=\"(id) => addToselectedItems(id)\" \r\n            @removelist=\"(id) => deleteToselectedItems(id)\"\r\n          ></boardList>\r\n        </div>\r\n        <!-- 자식 컴포넌트에서 넘어온 것들 받기 / 받아온 값들(id) 두 함수에 전달 -->\r\n      </TabItem>\r\n\r\n      <TabItem title=\"최근에 본 코스\">\r\n        <!-- 최근에 본 코스--------------------------------------------------------------------------------------------------------------------\r\n        ------------------------------------------------------------------------------------------------------------------------ -->\r\n        <div class=\"course\">\r\n          <div id=\"norecentData\" class=\"nodata\">최근에 본 코스가 없습니다</div>\r\n          <recentBoardList\r\n            v-if=\"!norecentData\"\r\n            v-for=\"item in recentBoardList\"\r\n            :recentBoardList=\"item\"\r\n            :key=\"item.BRD_ID\"\r\n          /></div\r\n      ></TabItem>\r\n      <TabItem title=\"좋아요 리스트\">\r\n        <!-- 좋아요리스트--------------------------------------------------------------------------------------------------------------------\r\n        ------------------------------------------------------------------------------------------------------------------------ -->\r\n        <div class=\"course\">\r\n          <div id=\"noLikeData\" class=\"nodata\">좋아요 한 코스가 없습니다</div>\r\n          <likeBoardList\r\n            v-if=\"!noLikeData\"\r\n            v-for=\"item in likeBoardList\"\r\n            :likeBoardList=\"item\"\r\n            :key=\"item.id\"\r\n            :hideBrdOpen=\"true\"\r\n          /></div\r\n      ></TabItem>\r\n      <TabItem title=\"내가 쓴 댓글\">\r\n        <!-- 내가 쓴 댓글--------------------------------------------------------------------------------------------------------------------\r\n        ------------------------------------------------------------------------------------------------------------------------ -->\r\n        <div v-if=\"!noCommentData\">\r\n          <button\r\n            v-if=\"!comment_editMode\"\r\n            class=\"edit\"\r\n            @click=\"toggleCommentEditMode\"\r\n          >\r\n            &nbsp;&nbsp;편집&nbsp;&nbsp;\r\n          </button>\r\n          <button v-if=\"comment_editMode\" class=\"delete\" @click=\"deleteComment\">\r\n            &nbsp;&nbsp;삭제&nbsp;&nbsp;\r\n          </button>\r\n          <button\r\n            v-if=\"comment_editMode\"\r\n            class=\"cancel\"\r\n            @click=\"cancelCommentEdit\"\r\n          >\r\n            &nbsp;&nbsp;취소&nbsp;&nbsp;\r\n          </button>\r\n        </div>\r\n        <!-- <button class=\"comment_edit\">&nbsp;&nbsp;편집&nbsp;&nbsp;</button> -->\r\n\r\n        <div class=\"commentlist\">\r\n          <div id=\"noCommentData\" class=\"nodata\">작성한 댓글이 없습니다</div>\r\n          <commentList\r\n            v-if=\"!noCommentData\"\r\n            v-for=\"item in commentList\"\r\n            :commentList=\"item\"\r\n            :key=\"item.COM_ID\"\r\n            :comment_editMode=\"comment_editMode\"\r\n          />\r\n        </div>\r\n      </TabItem>\r\n    </TabsWrapper>\r\n  </section>\r\n</template>\r\n\r\n<script>\r\nimport { ref } from \"vue\";\r\nimport gnbBar from \"../components/gnbBar.vue\";\r\nimport TabsWrapper from \"../components/TabsWrapper.vue\";\r\nimport TabItem from \"../components/TabItem.vue\";\r\nimport boardList from \"../components/boardList.vue\";\r\nimport commentList from \"../components/commentList.vue\";\r\nimport recentBoardList from \"../components/recentBoardList.vue\";\r\nimport likeBoardList from \"../components/likeBoardList.vue\";\r\nimport axios from \"axios\";\r\nimport { faL } from \"@fortawesome/free-solid-svg-icons\";\r\naxios.defaults.baseURL = \"http://localhost:3000\";\r\naxios.defaults.headers.post[\"Content-Type\"] = \"application/json;charset=utf-8\";\r\naxios.defaults.headers.post[\"Access-Control-Allow-Origin\"] = \"*\";\r\n\r\nexport default {\r\n  components: {\r\n    gnbBar,\r\n    TabsWrapper,\r\n    TabItem,\r\n    boardList,\r\n    recentBoardList,\r\n    likeBoardList,\r\n    commentList,\r\n  },\r\n  data() {\r\n    return {\r\n      email: \"\",\r\n      nick: \"\",\r\n      image: \"\",\r\n      provider: \"\",\r\n      editMode: false,\r\n      comment_editMode: false,\r\n      boardList: [],\r\n      recentBoardList: [],\r\n      likeBoardList: [],\r\n      commentList: [],\r\n      nodata: false,\r\n      norecentData: false,\r\n      noLikeData: false,\r\n      noCommentData: false,\r\n      selectedItems: []\r\n    };\r\n  },\r\n  created() {\r\n    this.email = localStorage.getItem(\"userID\");\r\n    this.nick = localStorage.getItem(\"userNick\");\r\n    this.image = localStorage.getItem(\"userImage\");\r\n    this.provider = localStorage.getItem(\"userProvider\");\r\n    this.boardListData();\r\n    this.recentBoardListData();\r\n    this.likeBoardListData();\r\n    this.commentListData();\r\n  },\r\n  methods: {\r\n    // 보드리스트 불러오기-------------------------------------------------------------------------------------------------------\r\n    // ---------------------------------------------------------------------------------------------------------------------\r\n    async boardListData() {\r\n      this.nodata = false;\r\n      try {\r\n        const response = await axios.post(\"/mypage/myCourse\", {\r\n          userEmail: this.email,\r\n        });\r\n\r\n        // console.log(this.nodata);\r\n\r\n        this.boardList = response.data;\r\n        console.log(response.data);\r\n        if (this.boardList.length != 0) {\r\n          this.nodata = false;\r\n        } else {\r\n          this.nodata = true;\r\n        }\r\n      } catch {\r\n        this.nodata = true;\r\n        console.log(this.nodata);\r\n      }\r\n    },\r\n    // 최근에 본 게시글 리스트 불러오기-------------------------------------------------------------------------------------------------------\r\n    // ---------------------------------------------------------------------------------------------------------------------\r\n    async recentBoardListData() {\r\n      this.norecentData = false;\r\n      try {\r\n        const response = await axios.post(\"/mypage/recentCourse\", {\r\n          userEmail: this.email,\r\n        });\r\n        this.recentBoardList = response.data;\r\n        if (this.norecentData.length != 0) {\r\n          this.norecentData = false;\r\n        } else {\r\n          this.norecentData = true;\r\n        }\r\n      } catch {\r\n        this.norecentData = true;\r\n      }\r\n    },\r\n    // 좋아요 리스트 불러오기-------------------------------------------------------------------------------------------------------\r\n    // ---------------------------------------------------------------------------------------------------------------------\r\n    async likeBoardListData() {\r\n      this.noLikeData = false;\r\n      try {\r\n        const response = await axios.post(\"/mypage/likeList\", {\r\n          userEmail: this.email,\r\n        });\r\n        this.likeBoardList = response.data;\r\n        if (this.noLikeData.length != 0) {\r\n          this.noLikeData = false;\r\n        } else {\r\n          this.noLikeData = true;\r\n        }\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    },\r\n    // 댓글 불러오기-------------------------------------------------------------------------------------------------------\r\n    // ---------------------------------------------------------------------------------------------------------------------\r\n    async commentListData() {\r\n      this.noCommentData = false;\r\n      try {\r\n        const response = await axios.post(\"/mypage/myComment\", {\r\n          userEmail: this.email,\r\n        });\r\n        this.commentList = response.data;\r\n        if (this.noCommentData.length != 0) {\r\n          this.noCommentData = false;\r\n        } else {\r\n          this.noCommentData = true;\r\n        }\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    },\r\n    // 내글 편집 삭제 수정 버튼-------------------------------------------------------------------------------------------------------\r\n    // ---------------------------------------------------------------------------------------------------------------------\r\n    toggleEditMode() {\r\n      this.editMode = true;\r\n    },\r\n    addToselectedItems(id) { //selectedItems 배열에 받아온 BRD_ID push\r\n      this.selectedItems.push(id);\r\n      console.log(this.selectedItems);\r\n    },\r\n    deleteToselectedItems(id) { //selectedItems 배열에서 받아온 BRD_ID 필터로 제거 아마? 삭제되긴함\r\n      this.selectedItems = this.selectedItems.filter((item) => item !== id);\r\n      console.log(this.selectedItems);\r\n    },\r\n    async deleteContent() { //테스트하느라 콘솔이 많습니다..\r\n      // 삭제 버튼을 누른다면\r\n      if (this.selectedItems.length === 0) { //배열길이가 0이면 !this.selectedItems는 왜인지 작동이 안됌\r\n        console.log(this.selectedItems);\r\n        alert(' 선택된거없음');\r\n        return; // 선택된 항목이 없으면 종료합니다.\r\n      } else { \r\n      // 선택된 항목을 서버에 삭제 요청합니다.\r\n      console.log(this.selectedItems);\r\n      axios({\r\n        url: \"/mypage/delMyCourse\",\r\n        method: \"POST\",\r\n        data: this.selectedItems\r\n      }).then(async (res)=>{\r\n        alert(res.data.code);\r\n        this.selectedItems = []; //삭제후 배열 비우기 안비우면 계속 남아있음\r\n        console.log(this.selectedItems);\r\n        await this.boardListData(); //삭제후 새롭게 게시글 받아오기\r\n      }).catch(error => {\r\n          alert(error);\r\n      })\r\n      }\r\n\r\n    },\r\n    cancelEdit() {\r\n      this.editMode = false;\r\n    },\r\n    // 코멘트 글 편집 삭제 수정 버튼-------------------------------------------------------------------------------------------------------\r\n    // ---------------------------------------------------------------------------------------------------------------------\r\n    toggleCommentEditMode() {\r\n      console.log(\"toggleCommentEditMode 호출됨\");\r\n      this.comment_editMode = true;\r\n    },\r\n    deleteComment() {\r\n      // 코멘트 삭제 로직\r\n    },\r\n    cancelCommentEdit() {\r\n      console.log(\"cancelCommentEdit 호출됨\");\r\n      this.comment_editMode = false;\r\n    },\r\n\r\n  },\r\n};\r\n</script>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}