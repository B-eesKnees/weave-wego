{"ast":null,"code":"import { ref } from \"vue\";\nimport gnbBar from \"../components/gnbBar.vue\";\nimport TabsWrapper from \"../components/TabsWrapper.vue\";\nimport TabItem from \"../components/TabItem.vue\";\nimport boardList from \"../components/boardList.vue\";\nimport commentList from \"../components/commentList.vue\";\nimport axios from \"axios\";\naxios.defaults.baseURL = \"http://localhost:3000\";\naxios.defaults.headers.post[\"Content-Type\"] = \"application/json;charset=utf-8\";\naxios.defaults.headers.post[\"Access-Control-Allow-Origin\"] = \"*\";\nexport default {\n  components: {\n    gnbBar,\n    TabsWrapper,\n    TabItem,\n    boardList,\n    commentList\n  },\n  data() {\n    return {\n      email: \"\",\n      nick: \"\",\n      image: \"\",\n      provider: \"\",\n      editMode: false,\n      comment_editMode: false,\n      boardList: []\n    };\n  },\n  created() {\n    this.email = localStorage.getItem(\"userID\");\n    this.nick = localStorage.getItem(\"userNick\");\n    this.image = localStorage.getItem(\"userImage\");\n    this.provider = localStorage.getItem(\"userProvider\");\n    this.boardListData();\n  },\n  methods: {\n    toggleEditMode() {\n      this.editMode = true;\n    },\n    deleteContent() {\n      const values = [7, 8, 9]; // 삭제할 컨텐츠의 배열 값\n      const url = \"http://localhost:3000/delMyCourse\";\n      const options = {\n        method: \"POST\",\n        body: JSON.stringify(values),\n        // 배열을 JSON 형식으로 변환하여 전송\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      };\n      axios(url, options).then(response => {\n        console.log(\"컨텐츠가 성공적으로 삭제되었습니다\", response);\n        // 삭제 후 추가 작업을 수행할 수 있습니다\n      }).catch(error => {\n        console.error(\"컨텐츠 삭제 중 오류가 발생했습니다\", error);\n        // 오류를 적절히 처리할 수 있습니다\n      });\n    },\n\n    cancelEdit() {\n      this.editMode = false;\n    },\n    //여기까지 내 글 수정버튼\n    toggleCommentEditMode() {\n      console.log(\"toggleCommentEditMode 호출됨\");\n      this.comment_editMode = true;\n    },\n    deleteComment() {\n      // 코멘트 삭제 로직\n    },\n    cancelCommentEdit() {\n      console.log(\"cancelCommentEdit 호출됨\");\n      this.comment_editMode = false;\n    },\n    // --------------------------------------------------------------------------------------------------------------------------------------\n    // --------------------------------------------------------------------------------------------------------------------------------------\n    // --------------------------------------------------------------------------------------------------------------------------------------\n    // --------------------------------------------------------------------------------------------------------------------------------------\n    // --------------------------------------------------------------------------------------------------------------------------------------\n\n    async boardListData() {\n      try {\n        console.log(\"boardListData 메서드 호출됨\"); // 로그 추가\n        const response = await axios.post(\"/mypage/myCourse\", {\n          userEmail: this.email\n        });\n        console.log(\"서버 응답 데이터:\", response.data); // 로그 추가\n        this.boardList = response.data;\n      } catch (error) {\n        console.error(error);\n      }\n    }\n  },\n  setup() {\n    const commentListData = ref([{\n      COM_ID: 0,\n      COM_NUM: 0,\n      COM_TITLE: \"댓글이 포함된 본문의 제목\",\n      COM_CREATED_AT: \"2023-06-26\",\n      COM_COMMENT: \"댓글내용댓글내용댓글애용\"\n    }, {\n      COM_ID: 1,\n      COM_NUM: 1,\n      COM_TITLE: \"댓글이 포함된 본문의 제목1\",\n      COM_CREATED_AT: \"2023-06-26\",\n      COM_COMMENT: \"댓글내용댓글내용댓글애용1\"\n    }, {\n      COM_ID: 2,\n      COM_NUM: 2,\n      COM_TITLE: \"댓글이 포함된 본문의 제목2\",\n      COM_CREATED_AT: \"2023-06-26\",\n      COM_COMMENT: \"댓글내용댓글내용댓글애용2\"\n    }]);\n    return {\n      commentList: commentListData\n    };\n  }\n};","map":{"version":3,"names":["ref","gnbBar","TabsWrapper","TabItem","boardList","commentList","axios","defaults","baseURL","headers","post","components","data","email","nick","image","provider","editMode","comment_editMode","created","localStorage","getItem","boardListData","methods","toggleEditMode","deleteContent","values","url","options","method","body","JSON","stringify","then","response","console","log","catch","error","cancelEdit","toggleCommentEditMode","deleteComment","cancelCommentEdit","userEmail","setup","commentListData","COM_ID","COM_NUM","COM_TITLE","COM_CREATED_AT","COM_COMMENT"],"sources":["/Users/seoyeonju/Library/CloudStorage/OneDrive-계원예술대학교/풀스텍/weave-wego 2/vue_front/src/views/myPage.vue"],"sourcesContent":["<style src=\"../assets/css/mypage.css\"></style>\r\n<style src=\"../assets/css/reset.css\"></style>\r\n<template>\r\n  <gnbBar />\r\n\r\n  <section class=\"mypage_profile_set\">\r\n    <!-- ----------------------------------------------------------------------------------------------------------------------------------- -->\r\n    <h1 class=\"mypage_title\">마이페이지</h1>\r\n    <div class=\"myprofile\">\r\n      <div class=\"profileimg\">\r\n        <div v-if=\"provider === 'local'\">\r\n          <img\r\n            class=\"profile\"\r\n            :src=\"`http://localhost:3000/downloadProfile/${email}/${image}`\"\r\n            alt=\"profileExample\"\r\n          />\r\n        </div>\r\n        <div v-else-if=\"provider === 'kakao'\">\r\n          <div\r\n            class=\"kakao_profile_img\"\r\n            :style=\"{ 'background-image': 'url(' + image + ')' }\"\r\n          ></div>\r\n        </div>\r\n        <div v-else-if=\"provider === 'naver'\">\r\n          <div\r\n            class=\"naver_profile_img\"\r\n            :style=\"{ 'background-image': 'url(' + image + ')' }\"\r\n          ></div>\r\n        </div>\r\n        <a href=\"/updateprofile\"\r\n          ><img\r\n            class=\"setting_icon\"\r\n            src=\"../assets/img/setting_btn.png\"\r\n            alt=\"setting_btn\"\r\n        /></a>\r\n      </div>\r\n      <div class=\"nickname_email\">\r\n        <div class=\"nickname\">{{ nick }}</div>\r\n        <div class=\"email\">{{ email }}</div>\r\n      </div>\r\n    </div>\r\n  </section>\r\n  <section>\r\n    <TabsWrapper>\r\n      <TabItem title=\"내코스\" @click=\"\">\r\n        <div>\r\n          <button v-if=\"!editMode\" class=\"edit\" @click=\"toggleEditMode\">\r\n            &nbsp;&nbsp;편집&nbsp;&nbsp;\r\n          </button>\r\n          <button v-if=\"editMode\" class=\"delete\" @click=\"deleteContent\">\r\n            &nbsp;&nbsp;삭제&nbsp;&nbsp;\r\n          </button>\r\n          <button v-if=\"editMode\" class=\"cancel\" @click=\"cancelEdit\">\r\n            &nbsp;&nbsp;취소&nbsp;&nbsp;\r\n          </button>\r\n        </div>\r\n        <!-- --------------------------------------------------------------------------------------------------------------------------------------\r\n        --------------------------------------------------------------------------------------------------------------------------------------\r\n        -------------------------------------------------------------------------------------------------------------------------------------\r\n        --------------------------------------------------------------------------------------------------------------------------------------\r\n        -------------------------------------------------------------------------------------------------------------------------------------- -->\r\n        <div class=\"course\">\r\n          <boardList\r\n            v-for=\"item in boardList\"\r\n            :boardList=\"item\"\r\n            :key=\"item.BRD_ID\"\r\n            :editMode=\"editMode\"\r\n          ></boardList>\r\n        </div>\r\n      </TabItem>\r\n      <TabItem title=\"최근에 본 코스\">\r\n        <div class=\"course\">\r\n          <boardList\r\n            v-for=\"item in boardList\"\r\n            :boardList=\"item\"\r\n            :key=\"item.id\"\r\n            :hideBrdOpen=\"true\"\r\n          /></div\r\n      ></TabItem>\r\n      <TabItem title=\"좋아요 리스트\">\r\n        <div class=\"course\">\r\n          <boardList\r\n            v-for=\"item in boardList\"\r\n            :boardList=\"item\"\r\n            :key=\"item.id\"\r\n            :hideBrdOpen=\"true\"\r\n          /></div\r\n      ></TabItem>\r\n      <TabItem title=\"내가 쓴 댓글\">\r\n        <div>\r\n          <button\r\n            v-if=\"!comment_editMode\"\r\n            class=\"edit\"\r\n            @click=\"toggleCommentEditMode\"\r\n          >\r\n            &nbsp;&nbsp;편집&nbsp;&nbsp;\r\n          </button>\r\n          <button v-if=\"comment_editMode\" class=\"delete\" @click=\"deleteComment\">\r\n            &nbsp;&nbsp;삭제&nbsp;&nbsp;\r\n          </button>\r\n          <button\r\n            v-if=\"comment_editMode\"\r\n            class=\"cancel\"\r\n            @click=\"cancelCommentEdit\"\r\n          >\r\n            &nbsp;&nbsp;취소&nbsp;&nbsp;\r\n          </button>\r\n        </div>\r\n        <button class=\"comment_edit\">&nbsp;&nbsp;편집&nbsp;&nbsp;</button>\r\n\r\n        <div class=\"commentlist\">\r\n          <commentList\r\n            v-for=\"item in commentList\"\r\n            :commentList=\"item\"\r\n            :key=\"item.COM_ID\"\r\n            :comment_editMode=\"comment_editMode\"\r\n          />\r\n        </div>\r\n      </TabItem>\r\n    </TabsWrapper>\r\n  </section>\r\n</template>\r\n\r\n<script>\r\nimport { ref } from \"vue\";\r\nimport gnbBar from \"../components/gnbBar.vue\";\r\nimport TabsWrapper from \"../components/TabsWrapper.vue\";\r\nimport TabItem from \"../components/TabItem.vue\";\r\nimport boardList from \"../components/boardList.vue\";\r\nimport commentList from \"../components/commentList.vue\";\r\nimport axios from \"axios\";\r\naxios.defaults.baseURL = \"http://localhost:3000\";\r\naxios.defaults.headers.post[\"Content-Type\"] = \"application/json;charset=utf-8\";\r\naxios.defaults.headers.post[\"Access-Control-Allow-Origin\"] = \"*\";\r\n\r\nexport default {\r\n  components: {\r\n    gnbBar,\r\n    TabsWrapper,\r\n    TabItem,\r\n    boardList,\r\n    commentList,\r\n  },\r\n  data() {\r\n    return {\r\n      email: \"\",\r\n      nick: \"\",\r\n      image: \"\",\r\n      provider: \"\",\r\n      editMode: false,\r\n      comment_editMode: false,\r\n      boardList: [],\r\n    };\r\n  },\r\n  created() {\r\n    this.email = localStorage.getItem(\"userID\");\r\n    this.nick = localStorage.getItem(\"userNick\");\r\n    this.image = localStorage.getItem(\"userImage\");\r\n    this.provider = localStorage.getItem(\"userProvider\");\r\n    this.boardListData();\r\n  },\r\n  methods: {\r\n    toggleEditMode() {\r\n      this.editMode = true;\r\n    },\r\n    deleteContent() {\r\n      const values = [7, 8, 9]; // 삭제할 컨텐츠의 배열 값\r\n      const url = \"http://localhost:3000/delMyCourse\";\r\n      const options = {\r\n        method: \"POST\",\r\n        body: JSON.stringify(values), // 배열을 JSON 형식으로 변환하여 전송\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      };\r\n\r\n      axios(url, options)\r\n        .then((response) => {\r\n          console.log(\"컨텐츠가 성공적으로 삭제되었습니다\", response);\r\n          // 삭제 후 추가 작업을 수행할 수 있습니다\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"컨텐츠 삭제 중 오류가 발생했습니다\", error);\r\n          // 오류를 적절히 처리할 수 있습니다\r\n        });\r\n    },\r\n    cancelEdit() {\r\n      this.editMode = false;\r\n    }, //여기까지 내 글 수정버튼\r\n    toggleCommentEditMode() {\r\n      console.log(\"toggleCommentEditMode 호출됨\");\r\n      this.comment_editMode = true;\r\n    },\r\n    deleteComment() {\r\n      // 코멘트 삭제 로직\r\n    },\r\n    cancelCommentEdit() {\r\n      console.log(\"cancelCommentEdit 호출됨\");\r\n      this.comment_editMode = false;\r\n    },\r\n    // --------------------------------------------------------------------------------------------------------------------------------------\r\n    // --------------------------------------------------------------------------------------------------------------------------------------\r\n    // --------------------------------------------------------------------------------------------------------------------------------------\r\n    // --------------------------------------------------------------------------------------------------------------------------------------\r\n    // --------------------------------------------------------------------------------------------------------------------------------------\r\n\r\n    async boardListData() {\r\n      try {\r\n        console.log(\"boardListData 메서드 호출됨\"); // 로그 추가\r\n        const response = await axios.post(\"/mypage/myCourse\", {\r\n          userEmail: this.email,\r\n        });\r\n        console.log(\"서버 응답 데이터:\", response.data); // 로그 추가\r\n        this.boardList = response.data;\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    },\r\n  },\r\n  setup() {\r\n    const commentListData = ref([\r\n      {\r\n        COM_ID: 0,\r\n        COM_NUM: 0,\r\n        COM_TITLE: \"댓글이 포함된 본문의 제목\",\r\n        COM_CREATED_AT: \"2023-06-26\",\r\n        COM_COMMENT: \"댓글내용댓글내용댓글애용\",\r\n      },\r\n      {\r\n        COM_ID: 1,\r\n        COM_NUM: 1,\r\n        COM_TITLE: \"댓글이 포함된 본문의 제목1\",\r\n        COM_CREATED_AT: \"2023-06-26\",\r\n        COM_COMMENT: \"댓글내용댓글내용댓글애용1\",\r\n      },\r\n      {\r\n        COM_ID: 2,\r\n        COM_NUM: 2,\r\n        COM_TITLE: \"댓글이 포함된 본문의 제목2\",\r\n        COM_CREATED_AT: \"2023-06-26\",\r\n        COM_COMMENT: \"댓글내용댓글내용댓글애용2\",\r\n      },\r\n    ]);\r\n\r\n    return {\r\n      commentList: commentListData,\r\n    };\r\n  },\r\n};\r\n</script>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}