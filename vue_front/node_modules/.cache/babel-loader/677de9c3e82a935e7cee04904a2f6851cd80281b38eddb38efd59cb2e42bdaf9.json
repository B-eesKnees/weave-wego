{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, withModifiers as _withModifiers, vModelText as _vModelText, withDirectives as _withDirectives, normalizeClass as _normalizeClass, createTextVNode as _createTextVNode, vShow as _vShow, Fragment as _Fragment, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nimport _imports_0 from '../assets/img/profileExample.png';\nconst _withScopeId = n => (_pushScopeId(\"data-v-4ed3dcf6\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"join\"\n};\nconst _hoisted_2 = {\n  class: \"title-bar\"\n};\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h5\", null, \"회원정보 수정\", -1 /* HOISTED */));\nconst _hoisted_4 = {\n  class: \"title-bar-label\",\n  for: \"file\"\n};\nconst _hoisted_5 = {\n  key: 0,\n  class: \"title-bar-btn\"\n};\nconst _hoisted_6 = {\n  key: 1\n};\nconst _hoisted_7 = [\"src\"];\nconst _hoisted_8 = [\"src\"];\nconst _hoisted_9 = [\"src\"];\nconst _hoisted_10 = {\n  key: 5,\n  id: \"img_style\",\n  src: _imports_0,\n  alt: \"올린 이미지\"\n};\nconst _hoisted_11 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */));\nconst _hoisted_12 = {\n  class: \"wrap\"\n};\nconst _hoisted_13 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"email\"\n}, \"아이디\", -1 /* HOISTED */));\nconst _hoisted_14 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"password\"\n}, \"비밀번호\", -1 /* HOISTED */));\nconst _hoisted_15 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */));\nconst _hoisted_16 = {\n  key: 2,\n  id: \"error\"\n};\nconst _hoisted_17 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */));\nconst _hoisted_18 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"password_check2\"\n}, \"비밀번호 확인\", -1 /* HOISTED */));\nconst _hoisted_19 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */));\nconst _hoisted_20 = {\n  key: 5,\n  id: \"error\"\n};\nconst _hoisted_21 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"nickname\"\n}, \"별명\", -1 /* HOISTED */));\nconst _hoisted_22 = [\"placeholder\"];\nconst _hoisted_23 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"a\", {\n  href: \"/auth/checknick\"\n}, [/*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"submit\",\n  id: \"nickname_check\",\n  class: \"username_submit\"\n}, \"중복확인\")], -1 /* HOISTED */));\nconst _hoisted_24 = [_hoisted_23];\nconst _hoisted_25 = {\n  id: \"error\"\n};\nconst _hoisted_26 = {\n  id: \"complete\"\n};\nconst _hoisted_27 = {\n  key: 6,\n  id: \"error\"\n};\nconst _hoisted_28 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"phone_num\"\n}, \"전화번호\", -1 /* HOISTED */));\nconst _hoisted_29 = [\"placeholder\"];\nconst _hoisted_30 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */));\nconst _hoisted_31 = {\n  key: 7,\n  id: \"error\"\n};\nconst _hoisted_32 = {\n  class: \"user_update_btn\"\n};\nconst _hoisted_33 = {\n  href: \"/auth/join\"\n};\nconst _hoisted_34 = [\"disabled\"];\nconst _hoisted_35 = {\n  href: \"/mypage\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_gnbBar = _resolveComponent(\"gnbBar\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_gnbBar), _createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_hoisted_3, _createElementVNode(\"form\", {\n    onSubmit: _cache[1] || (_cache[1] = _withModifiers((...args) => $options.updateForm && $options.updateForm(...args), [\"prevent\"]))\n  }, [_createElementVNode(\"label\", _hoisted_4, [$data.provider === 'local' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, \"+\")) : $data.provider === 'naver' || $data.provider === 'kakao' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_6)) : _createCommentVNode(\"v-if\", true), $data.type ? (_openBlock(), _createElementBlock(\"img\", {\n    key: 2,\n    class: \"img_style\",\n    src: $data.imageUploaded,\n    alt: \"올린 이미지\"\n  }, null, 8 /* PROPS */, _hoisted_7)) : $data.provider === 'local' && $data.image !== null ? (_openBlock(), _createElementBlock(\"img\", {\n    key: 3,\n    class: \"img_style\",\n    src: `http://localhost:3000/downloadProfile/${$data.email}/${$data.image}`,\n    alt: \"올린 이미지\"\n  }, null, 8 /* PROPS */, _hoisted_8)) : $data.provider === 'kakao' || $data.provider === 'naver' ? (_openBlock(), _createElementBlock(\"img\", {\n    key: 4,\n    class: \"img_style\",\n    src: $data.image\n  }, null, 8 /* PROPS */, _hoisted_9)) : (_openBlock(), _createElementBlock(\"img\", _hoisted_10)), _hoisted_11]), _createElementVNode(\"input\", {\n    id: \"file\",\n    type: \"file\",\n    ref: \"image\",\n    onChange: _cache[0] || (_cache[0] = (...args) => $options.upload && $options.upload(...args)),\n    maxlength: \"150\"\n  }, null, 544 /* HYDRATE_EVENTS, NEED_PATCH */)], 32 /* HYDRATE_EVENTS */)]), _createElementVNode(\"div\", _hoisted_12, [_createElementVNode(\"form\", {\n    onSubmit: _cache[11] || (_cache[11] = _withModifiers((...args) => $options.updateForm && $options.updateForm(...args), [\"prevent\"]))\n  }, [_hoisted_13, _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.email = $event),\n    type: \"text\",\n    id: \"email\",\n    placeholder: \"유저아이디\",\n    disabled: \"\",\n    maxlength: \"25\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.email]]), _hoisted_14, $data.provider === 'local' ? _withDirectives((_openBlock(), _createElementBlock(\"input\", {\n    key: 0,\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.password = $event),\n    type: \"password\",\n    id: \"password\",\n    class: _normalizeClass({\n      error_border: $data.password_check\n    }),\n    placeholder: \"비밀번호 입력\",\n    maxlength: \"15\"\n  }, null, 2 /* CLASS */)), [[_vModelText, $data.password]]) : _withDirectives((_openBlock(), _createElementBlock(\"input\", {\n    key: 1,\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $data.password = $event),\n    type: \"password\",\n    id: \"password\",\n    class: _normalizeClass({\n      error_border: $data.password_check\n    }),\n    placeholder: \"\",\n    disabled: \"\",\n    maxlength: \"15\"\n  }, null, 2 /* CLASS */)), [[_vModelText, $data.password]]), _hoisted_15, $data.password_check && $data.provider === 'local' ? (_openBlock(), _createElementBlock(\"p\", _hoisted_16, [_createTextVNode(\"비밀번호를 정확히 입력해주세요.\"), _hoisted_17, _createTextVNode(\" *8자리 이상 영문 대소문자, 숫자, 특수문자가 각각 1개 이상\")])) : _createCommentVNode(\"v-if\", true), _hoisted_18, $data.provider === 'local' ? _withDirectives((_openBlock(), _createElementBlock(\"input\", {\n    key: 3,\n    \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => $data.password2 = $event),\n    type: \"password\",\n    id: \"password_check\",\n    class: _normalizeClass({\n      error_border: $data.password_check2\n    }),\n    placeholder: \"비밀번호 확인 입력\"\n  }, null, 2 /* CLASS */)), [[_vModelText, $data.password2]]) : _withDirectives((_openBlock(), _createElementBlock(\"input\", {\n    key: 4,\n    \"onUpdate:modelValue\": _cache[6] || (_cache[6] = $event => $data.password2 = $event),\n    type: \"password\",\n    id: \"password_check\",\n    class: _normalizeClass({\n      error_border: $data.password_check2\n    }),\n    placeholder: \"\",\n    disabled: \"\"\n  }, null, 2 /* CLASS */)), [[_vModelText, $data.password2]]), _hoisted_19, $data.password_check2 ? (_openBlock(), _createElementBlock(\"p\", _hoisted_20, \"비밀번호가 일치하지 않습니다.\")) : _createCommentVNode(\"v-if\", true), _hoisted_21, _createElementVNode(\"input\", {\n    onInput: _cache[7] || (_cache[7] = $event => $data.nickname = $event.target.value),\n    type: \"text\",\n    id: \"nickname\",\n    placeholder: $data.nickname,\n    class: _normalizeClass({\n      error_border: _ctx.nickname_check2 || $data.nicknamecheck != 2\n    }),\n    maxlength: \"10\"\n  }, null, 42 /* CLASS, PROPS, HYDRATE_EVENTS */, _hoisted_22), _createElementVNode(\"form\", {\n    onSubmit: _cache[8] || (_cache[8] = _withModifiers((...args) => $options.nicknameCheckForm && $options.nicknameCheckForm(...args), [\"prevent\"]))\n  }, _hoisted_24, 32 /* HYDRATE_EVENTS */), _withDirectives(_createElementVNode(\"p\", _hoisted_25, \"존재하는 닉네임입니다.\", 512 /* NEED_PATCH */), [[_vShow, $data.nicknamecheck == 1]]), _withDirectives(_createElementVNode(\"p\", _hoisted_26, \"사용가능한 닉네임입니다.\", 512 /* NEED_PATCH */), [[_vShow, $data.nicknamecheck == 2]]), _ctx.nickname_check2 ? (_openBlock(), _createElementBlock(\"p\", _hoisted_27, \"닉네임을 입력해주세요.\")) : _createCommentVNode(\"v-if\", true), _hoisted_28, _createElementVNode(\"input\", {\n    onInput: _cache[9] || (_cache[9] = $event => $data.phone_num = $event.target.value),\n    type: \"text\",\n    id: \"phone_num\",\n    placeholder: $data.phone_num,\n    class: _normalizeClass({\n      error_border: $data.phone_check\n    }),\n    maxlength: \"11\"\n  }, null, 42 /* CLASS, PROPS, HYDRATE_EVENTS */, _hoisted_29), _hoisted_30, $data.phone_check ? (_openBlock(), _createElementBlock(\"p\", _hoisted_31, \"전화번호를 정확히 입력해주세요. 예)01066090043\")) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"div\", _hoisted_32, [_createElementVNode(\"a\", _hoisted_33, [_createElementVNode(\"input\", {\n    type: \"submit\",\n    class: _normalizeClass({\n      'error_submit': $data.allcheck,\n      'submit': !$data.allcheck\n    }),\n    disabled: $data.allcheck,\n    id: \"login\",\n    value: \"수정하기\"\n  }, null, 10 /* CLASS, PROPS */, _hoisted_34)]), _createElementVNode(\"a\", _hoisted_35, [_createElementVNode(\"input\", {\n    type: \"submit\",\n    onClick: _cache[10] || (_cache[10] = (...args) => $options.movetoMypage && $options.movetoMypage(...args)),\n    class: \"submit\",\n    id: \"login\",\n    value: \"취소\"\n  })])])], 32 /* HYDRATE_EVENTS */)])])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_imports_0","class","_createElementVNode","for","id","src","alt","href","type","_hoisted_23","_createVNode","_component_gnbBar","_hoisted_1","_hoisted_2","_hoisted_3","onSubmit","_cache","_withModifiers","args","$options","updateForm","_hoisted_4","$data","provider","_createElementBlock","_hoisted_5","_hoisted_6","imageUploaded","image","email","_hoisted_10","_hoisted_11","ref","onChange","upload","maxlength","_hoisted_12","_hoisted_13","$event","placeholder","disabled","_hoisted_14","password","_normalizeClass","error_border","password_check","_hoisted_15","_hoisted_16","_hoisted_17","_hoisted_18","password2","password_check2","_hoisted_19","_hoisted_20","_hoisted_21","onInput","nickname","target","value","_ctx","nickname_check2","nicknamecheck","nicknameCheckForm","_hoisted_25","_hoisted_26","_hoisted_27","_hoisted_28","phone_num","phone_check","_hoisted_30","_hoisted_31","_hoisted_32","_hoisted_33","allcheck","_hoisted_35","onClick","movetoMypage"],"sources":["/Users/seoyeonju/Library/CloudStorage/OneDrive-계원예술대학교/풀스텍/weave-wego 2/vue_front/src/views/updateProfile.vue"],"sourcesContent":["<template>\r\n  <gnbBar />\r\n  <div class=\"join\">\r\n    <div class=\"title-bar\">\r\n      <h5>회원정보 수정</h5>\r\n      <form @submit.prevent=\"updateForm\">\r\n        <label class=\"title-bar-label\" for=\"file\">\r\n          <div v-if=\"provider === 'local'\" class=\"title-bar-btn\">+</div>\r\n          <div v-else-if=\"provider === 'naver' ||provider === 'kakao'\"></div>\r\n          <img v-if=\"type\" class=\"img_style\" :src=\"imageUploaded\" alt=\"올린 이미지\" />\r\n          <img v-else-if=\"provider === 'local' && image !== null\" class=\"img_style\" :src=\"`http://localhost:3000/downloadProfile/${email}/${image}`\" alt=\"올린 이미지\" />\r\n          <img v-else-if=\"provider === 'kakao' ||provider === 'naver'\" class=\"img_style\" :src=\"image\">\r\n          <img v-else id=\"img_style\" src=\"../assets/img/profileExample.png\" alt=\"올린 이미지\" />\r\n          <br />\r\n        </label>\r\n\r\n        <input id=\"file\" type=\"file\" ref=\"image\" @change=\"upload\" maxlength=\"150\" />\r\n      </form>\r\n\r\n\r\n    </div>\r\n    <div class=\"wrap\">\r\n      <form @submit.prevent=\"updateForm\">\r\n        <label for=\"email\">아이디</label>\r\n        <input v-model=\"email\" type=\"text\" id=\"email\" placeholder=\"유저아이디\" disabled maxlength=\"25\">\r\n        <label for=\"password\">비밀번호</label>\r\n        <input v-if=\"provider === 'local'\" v-model=\"password\" type=\"password\" id=\"password\" :class=\"{ error_border: password_check }\"\r\n          placeholder=\"비밀번호 입력\" maxlength=\"15\">\r\n        <input v-else v-model=\"password\" type=\"password\" id=\"password\" :class=\"{ error_border: password_check }\"\r\n          placeholder=\"\" disabled maxlength=\"15\"><br />\r\n        <p id=\"error\" v-if=\"password_check && provider === 'local'\">비밀번호를 정확히 입력해주세요.<br /> *8자리 이상 영문 대소문자, 숫자, 특수문자가 각각 1개 이상</p>\r\n        <label for=\"password_check2\">비밀번호 확인</label>\r\n        <input v-if=\"provider === 'local'\" v-model=\"password2\" type=\"password\" id=\"password_check\" :class=\"{ error_border: password_check2 }\"\r\n          placeholder=\"비밀번호 확인 입력\">\r\n        <input v-else v-model=\"password2\" type=\"password\" id=\"password_check\" :class=\"{ error_border: password_check2 }\"\r\n          placeholder=\"\" disabled><br />\r\n        <p id=\"error\" v-if=\"password_check2\">비밀번호가 일치하지 않습니다.</p>\r\n        <label for=\"nickname\">별명</label>\r\n        <input @input=\"nickname = $event.target.value\" type=\"text\" id=\"nickname\" :placeholder=\"nickname\"\r\n          :class=\"{ error_border: nickname_check2 || nicknamecheck != 2 }\" maxlength=\"10\">\r\n        <form @submit.prevent=\"nicknameCheckForm\">\r\n          <a href=\"/auth/checknick\"><button type=\"submit\" id=\"nickname_check\" class=\"username_submit\">중복확인</button></a>\r\n        </form>\r\n        <p id=\"error\" v-show=\"nicknamecheck == 1\">존재하는 닉네임입니다.</p>\r\n        <p id=\"complete\" v-show=\"nicknamecheck == 2\">사용가능한 닉네임입니다.</p>\r\n        <p id=\"error\" v-if=\"nickname_check2\">닉네임을 입력해주세요.</p>\r\n        <label for=\"phone_num\">전화번호</label>\r\n        <input @input=\"phone_num = $event.target.value\" type=\"text\" id=\"phone_num\" :placeholder=\"phone_num\" :class=\"{ error_border: phone_check }\"\r\n          maxlength=\"11\"><br />\r\n        <p id=\"error\" v-if=\"phone_check\">전화번호를 정확히 입력해주세요. 예)01066090043</p>\r\n        <div class=\"user_update_btn\">\r\n          <a href=\"/auth/join\"><input type=\"submit\" :class=\"{ 'error_submit': allcheck, 'submit': !allcheck }\"\r\n              :disabled=\"allcheck\" id=\"login\" value=\"수정하기\"></a>\r\n          <a href=\"/mypage\"><input type=\"submit\" @click=\"movetoMypage\" class=\"submit\" id=\"login\" value=\"취소\"></a>\r\n        </div>\r\n\r\n      </form>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport gnbBar from '../components/gnbBar.vue'\r\n\r\nimport axios from 'axios'\r\naxios.defaults.baseURL = 'http://localhost:3000';\r\naxios.defaults.headers.post['Content-Type'] = 'application/json;charset=utf-8';\r\naxios.defaults.headers.post['Access-Control-Allow-Origin'] = '*';\r\n\r\nexport default {\r\n  components: { gnbBar },\r\n  data() {\r\n    return {\r\n\r\n      email: '',\r\n      password: '',\r\n      password2: '',\r\n      nickname: '',\r\n      phone_num: '',\r\n      image: '',\r\n      provider: '',\r\n      imageUploaded: null,\r\n      type: false,\r\n\r\n      password_check: false,\r\n      password_check2: false,\r\n      nickname_check: false,\r\n      phone_check: false,\r\n      error_border_check: false,\r\n\r\n      allcheck: false,\r\n      allcheck1: false,\r\n      allcheck2: false,\r\n      allcheck3: false,\r\n      allcheck4: false,\r\n      allcheck5: false,\r\n      allcheck6: false,\r\n      allcheck7: false,\r\n      emailcheck: 3,\r\n      nicknamecheck: 3,\r\n\r\n\r\n    };\r\n  },\r\n  watch: {\r\n    'password': function () {\r\n      this.funcWatch()\r\n    },\r\n    'password2': function () {\r\n      this.funcWatch()\r\n    },\r\n    'nickname': function () {\r\n      this.funcWatch()\r\n    },\r\n    'phone_num': function () {\r\n      this.funcWatch()\r\n    }\r\n\r\n  },\r\n  mounted() {\r\n    this.email = localStorage.getItem(\"userID\"),\r\n    this.nickname = localStorage.getItem(\"userNick\"),\r\n    this.image = localStorage.getItem(\"userImage\"),\r\n    this.provider = localStorage.getItem(\"userProvider\");\r\n    this.userData()\r\n  },\r\n  methods: {\r\n    userData() {\r\n      axios({\r\n        url: '/profile/pullUserData',\r\n        method: 'POST',\r\n        data: {\r\n          email: this.email\r\n        }\r\n      }).then((res)=>{\r\n        this.phone_num = res.data.phone\r\n      }).catch((err)=>{\r\n        console.error(err);\r\n      })\r\n    },\r\n    funcWatch() {\r\n      this.checkPassword()\r\n      this.checkPassword2()\r\n      this.checknickname()\r\n      this.checkphone()\r\n      this.inputAllCheck()\r\n      this.nicknameCheckForm()\r\n      console.log(this.allcheck);\r\n    },\r\n    movetoMypage() {\r\n      window.location.href = '/mypage';\r\n    },\r\n    checkPassword() {\r\n      // 최소 8자리 이상 영문 대소문자, 숫자, 특수문자가 각각 1개 이상\r\n      const validatePassword = /^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$ %^&*-]).{8,}$/\r\n\r\n      if (this.password === '' || !validatePassword.test(this.password) || !this.password) {\r\n        this.password_check = true;\r\n        this.error_border_check = true;\r\n\r\n      } else {\r\n        this.password_check = false;\r\n        this.error_border_check = false;\r\n\r\n      }\r\n    },\r\n    checkPassword2() {\r\n      if (this.password !== this.password2) {\r\n        this.password_check2 = true;\r\n        this.error_border_check = true;\r\n\r\n      } else {\r\n        this.password_check2 = false;\r\n        this.error_border_check = false;\r\n\r\n      }\r\n    },\r\n    checknickname() {\r\n\r\n      const validateNickname = /^.{1,10}$/;\r\n      if (!this.nickname || !validateNickname.test(this.nickname)) {\r\n        this.nickname_check2 = true;\r\n        this.error_border_check = true;\r\n\r\n      } else {\r\n        this.nickname_check2 = false;\r\n        this.error_border_check = false;\r\n\r\n      }\r\n    },\r\n    checkphone() {\r\n      const validatephone = /^\\d{3}\\d{3,4}\\d{4}$/;\r\n\r\n      if (this.phone_num === '' || !validatephone.test(this.phone_num) || !this.phone_num) {\r\n        this.phone_check = true;\r\n        this.error_border_check = true;\r\n\r\n      } else {\r\n        this.phone_check = false;\r\n        this.error_border_check = false;\r\n\r\n      }\r\n    },\r\n    inputAllCheck() {\r\n      if (this.allcheck2 || this.allcheck3 || this.allcheck4 || this.allcheck7) { //하나라도 입력조건이 안맞을시\r\n        this.allcheck = false; //버튼 비활성\r\n\r\n      } else {\r\n        this.allcheck = false;\r\n\r\n      }\r\n    },\r\n    emailCheckForm() {\r\n      axios({\r\n        url: \"http://localhost:3000/auth/checkemail\",\r\n        method: \"POST\",\r\n        data: {\r\n          email: this.email,\r\n        },\r\n      }).then(async (res) => {\r\n        const validateEmail = /^[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*.[a-zA-Z]{2,3}$/i;\r\n\r\n        if (res.data.message == '사용가능한 이메일입니다.' && validateEmail.test(this.email)) {\r\n          this.emailcheck = 2;\r\n        } else if (res.data.message == '존재하는 이메일입니다.') {\r\n          this.emailcheck = 1;\r\n          console.log(this.allcheck);\r\n        } else if (!this.email) {\r\n          this.emailcheck = 3;\r\n        }\r\n\r\n\r\n\r\n        console.log(this.emailcheck);\r\n\r\n      }).catch(error => {\r\n        alert(error);\r\n      })\r\n    },\r\n    nicknameCheckForm() {\r\n      axios({\r\n        url: \"http://localhost:3000/auth/checknick\",\r\n        method: \"POST\",\r\n        data: {\r\n          nickname: this.nickname,\r\n        },\r\n      }).then(async (res) => {\r\n        if (res.data.message == '사용가능한 닉네임입니다.' && this.nickname) {\r\n          console.log(res.data.message);\r\n          this.nicknamecheck = 2;\r\n        } else if (res.data.message == '존재하는 닉네임입니다.') {\r\n          this.nicknamecheck = 1;\r\n        } else if (!this.nickname) {\r\n          this.nicknamecheck = 3;\r\n        }\r\n      }).catch(error => {\r\n        alert(error);\r\n      })\r\n    },\r\n    updateForm() { //\r\n      console.log(this.nickname);\r\n      if (this.sex === 'female') {\r\n        this.sex = 'f';\r\n      } else {\r\n        this.sex = 'm';\r\n      }\r\n      axios({\r\n        url: \"http://localhost:3000/profile/updateProfile\",\r\n        method: \"POST\",\r\n        data: {\r\n          email: this.email,\r\n          password: this.password,\r\n          nickname: this.nickname,\r\n          phone_num: this.phone_num,\r\n\r\n        },\r\n      }).then(async (res) => {\r\n        alert(res.data.message);\r\n        if(typeof this.image === 'string') {\r\n          this.resetUser();\r\n        } else {\r\n          this.uploadFile(this.image);\r\n        }\r\n        \r\n        // await this.uploadFile(this.image);\r\n      }).catch(error => {\r\n        alert(error);\r\n      })\r\n    },\r\n    async uploadFile(files) {\r\n      if (!files) {\r\n        return; // 파일이 없으면 함수 종료\r\n      }\r\n      // window.location.href = '/';\r\n      let name = files.name;\r\n      let data = await this.$base64(files);\r\n\r\n      axios({\r\n        url: `http://localhost:3000/uploadProfile/${this.email}/${name}`,\r\n        method: 'POST',\r\n        data: {\r\n          \"data\": data\r\n        }\r\n      }).then(async (res) => {\r\n        this.resetUser();\r\n      }).catch(error => {\r\n        alert(error);\r\n      })\r\n    },\r\n    resetUser() {\r\n      console.log(this.email);\r\n      localStorage.removeItem(\"userNick\");\r\n      localStorage.removeItem(\"userImage\");\r\n      localStorage.removeItem(\"userProvider\");\r\n\r\n      axios({\r\n        url: \"http://localhost:3000/profile/pullUserData2\",\r\n        method: \"POST\",\r\n        data: {\r\n          email: this.email,\r\n        },\r\n      }).then(async (res) => {\r\n        \r\n        localStorage.setItem(\"userNick\", res.data.nick);\r\n        localStorage.setItem(\"userImage\", res.data.image);\r\n        localStorage.setItem(\"userProvider\", res.data.provider);\r\n\r\n        window.location.href = \"/\";\r\n      });\r\n    },\r\n    upload() {\r\n      this.type = true;\r\n      const files = this.$refs.image.files;\r\n\r\n      if (files && files.length > 0) {\r\n        this.image = files[0]; // 사용자가 올린 이미지\r\n        console.log(this.image);\r\n        // URL.createObjectURL로 사용자가 올린 이미지를 URL로 만들어서 화면에 표시할 수 있게 한다. img 태그의 src값에 바인딩해준다\r\n        this.imageUploaded = URL.createObjectURL(this.image);\r\n\r\n\r\n      }\r\n    },\r\n  }\r\n}\r\n</script> \r\n\r\n<style scoped>\r\n.join {\r\n  padding-top: 5%;\r\n  width: 100%;\r\n  height: 100%;\r\n  margin: 0;\r\n  background-color: white;\r\n  font-family: arial;\r\n  font-size: 14px;\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n}\r\n\r\n#file {\r\n  display: none;\r\n}\r\n\r\n.title-bar-label {\r\n  width: 1%;\r\n  cursor: pointer;\r\n}\r\n\r\n.img_style {\r\n  border: 2px solid black;\r\n  border-radius: 50%;\r\n}\r\n\r\ninput[type=\"file\"] {\r\n  position: absolute;\r\n  width: 22px;\r\n  height: 22px;\r\n  left: 50%;\r\n  top: 70%;\r\n  line-height: 20x;\r\n  border: 2px solid black;\r\n  color: white;\r\n  font-size: 22px;\r\n  background-color: #388265;\r\n  border-radius: 50%;\r\n}\r\n\r\n.title-bar {\r\n  text-align: center;\r\n  color: #333333;\r\n  font-size: 30px;\r\n  padding-bottom: 10px;\r\n  position: relative;\r\n}\r\n\r\n.title-bar-btn {\r\n  position: absolute;\r\n  width: 22px;\r\n  height: 22px;\r\n  left: 50%;\r\n  top: 70%;\r\n  text-align: center;\r\n  line-height: 20px;\r\n  border: 2px solid black;\r\n  color: white;\r\n  font-size: 22px;\r\n\r\n  background-color: #388265;\r\n  border-radius: 50%;\r\n}\r\n\r\n.title-bar h5 {\r\n  margin: 24px 0;\r\n}\r\n\r\n.title-bar img {\r\n  width: 50px;\r\n  height: 50px;\r\n}\r\n\r\n.wrap {\r\n  background-color: #ffffff;\r\n  padding: 1%;\r\n  width: 35%;\r\n  min-width: 350px;\r\n  margin: 0 auto;\r\n  border-radius: 6px;\r\n  box-shadow: 0 0 5px #ccc;\r\n  border: 1px solid #fff;\r\n}\r\n\r\nlabel {\r\n  margin-right: 3%;\r\n  display: inline-block;\r\n  width: 110px;\r\n  text-align: right;\r\n}\r\n\r\ninput {\r\n  width: 70%;\r\n  margin-bottom: 1%;\r\n  padding: 1%;\r\n  border-radius: 6px;\r\n  border: 1px solid #efefef;\r\n  font-size: 15px;\r\n  transition: all .2s ease-in-out;\r\n}\r\n\r\n\r\n\r\n.username_submit {\r\n  font-size: 14px;\r\n  background-color: #388265;\r\n  color: white;\r\n  width: 15%;\r\n  margin-left: 5%;\r\n  border-radius: 4px;\r\n  border: none;\r\n  display: none;\r\n}\r\n\r\ninput:focus {\r\n  outline: none;\r\n  border-color: #A5C2B6;\r\n  box-shadow: 0 0 10px #A5C2B6;\r\n  transition: all .2s ease-in-out;\r\n}\r\n\r\ninput.submit {\r\n  width: 100%;\r\n  padding: 3%;\r\n  border-radius: 6px;\r\n  border: 1px solid #388265;\r\n  font-size: 15px;\r\n  background-color: #388265;\r\n  color: #fff;\r\n  margin-top: 25px;\r\n  transition: all .2s ease-in-out;\r\n}\r\n\r\ninput.submit:hover {\r\n  width: 100%;\r\n  padding: 3%;\r\n  border-radius: 6px;\r\n  font-size: 15px;\r\n  color: #fff;\r\n  margin-top: 25px;\r\n  transition: all .2s ease-in-out;\r\n}\r\n\r\n.gender,\r\n.age_range {\r\n  width: 100%;\r\n  display: block;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: 1%;\r\n  margin-left: -1%;\r\n  font-size: 14px;\r\n\r\n}\r\n\r\n.input_sex {\r\n  width: 14px;\r\n  height: 14px;\r\n  transition: all .2s ease-in-out;\r\n}\r\n\r\n.user_update_btn {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  width: 100%;\r\n  height: 100%;\r\n}\r\n.user_update_btn  a:first-child {\r\n  width: 100%;\r\n  height: auto;\r\n  padding-right: 1%;\r\n}\r\n.user_update_btn  a:last-child {\r\n  width: 100%;\r\n  height: auto;\r\n  padding-left: 1%;\r\n}\r\n#error {\r\n  color: red;\r\n  margin-bottom: 2%;\r\n  margin-left: 24%;\r\n  font-size: 12px;\r\n}\r\n\r\n#complete {\r\n  color: #388265;\r\n  margin-bottom: 2%;\r\n  margin-left: 24%;\r\n  font-size: 12px;\r\n}\r\n\r\n.error_border:focus {\r\n  border-color: red;\r\n  box-shadow: none;\r\n}\r\n\r\n.error_submit {\r\n  width: 100%;\r\n  padding: 3%;\r\n  border-radius: 6px;\r\n  border: 1px solid gray;\r\n  font-size: 15px;\r\n  background-color: grey;\r\n  color: darkgray;\r\n  margin-top: 25px;\r\n  transition: all .2s ease-in-out;\r\n}\r\n\r\n</style>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}