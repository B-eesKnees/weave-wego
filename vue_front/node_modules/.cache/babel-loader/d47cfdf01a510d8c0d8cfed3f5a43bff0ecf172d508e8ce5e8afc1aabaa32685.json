{"ast":null,"code":"import \"core-js/modules/web.url-search-params.size.js\";\nimport gnbBar from '../components/gnbBar.vue';\nimport axios from 'axios';\naxios.defaults.baseURL = 'http://localhost:3000';\naxios.defaults.headers.post['Content-Type'] = 'application/json;charset=utf-8';\naxios.defaults.headers.post['Access-Control-Allow-Origin'] = '*';\nexport default {\n  components: {\n    gnbBar\n  },\n  data() {\n    return {\n      email: '',\n      password: '',\n      password2: '',\n      nickname: '',\n      phone_num: '',\n      sex: '',\n      agegroup: '',\n      image: '',\n      imageUploaded: null,\n      type: false,\n      email_check: false,\n      password_check: false,\n      password_check2: false,\n      nickname_check: false,\n      sex_check: false,\n      age_range_check: false,\n      phone_check: false,\n      error_border_check: false,\n      allcheck: true,\n      allcheck1: true,\n      allcheck2: true,\n      allcheck3: true,\n      allcheck4: true,\n      allcheck5: true,\n      allcheck6: true,\n      allcheck7: true,\n      emailcheck: 3,\n      nicknamecheck: 3\n    };\n  },\n  watch: {\n    'email': function () {\n      this.funcWatch();\n    },\n    'password': function () {\n      this.funcWatch();\n    },\n    'password2': function () {\n      this.funcWatch();\n    },\n    'nickname': function () {\n      this.funcWatch();\n    },\n    'sex': function () {\n      this.funcWatch();\n    },\n    'agegroup': function () {\n      this.funcWatch();\n    },\n    'phone_num': function () {\n      this.funcWatch();\n    }\n  },\n  methods: {\n    funcWatch() {\n      this.checkEmail();\n      this.checkPassword();\n      this.checkPassword2();\n      this.checknickname();\n      this.checksex();\n      this.checkage_range();\n      this.checkphone();\n      this.inputAllCheck();\n      this.emailCheckForm();\n      this.nicknameCheckForm();\n      console.log(this.allcheck);\n    },\n    movetomain() {\n      window.location.href = '/';\n    },\n    checkEmail() {\n      // 이메일 형식 검사\n      const validateEmail = /^[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*.[a-zA-Z]{2,3}$/i;\n      if (this.email === '' || !validateEmail.test(this.email) || !this.email) {\n        this.email_check = true;\n        this.error_border_check = true;\n        this.allcheck1 = true; //입력조건 안맞을시 true\n      } else {\n        this.email_check = false;\n        this.error_border_check = false;\n        this.allcheck1 = false;\n      }\n    },\n    checkPassword() {\n      // 최소 8자리 이상 영문 대소문자, 숫자, 특수문자가 각각 1개 이상\n      const validatePassword = /^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$ %^&*-]).{8,}$/;\n      if (this.password === '' || !validatePassword.test(this.password) || !this.password) {\n        this.password_check = true;\n        this.error_border_check = true;\n        this.allcheck2 = true;\n      } else {\n        this.password_check = false;\n        this.error_border_check = false;\n        this.allcheck2 = false;\n      }\n    },\n    checkPassword2() {\n      if (this.password !== this.password2) {\n        this.password_check2 = true;\n        this.error_border_check = true;\n        this.allcheck3 = true;\n      } else {\n        this.password_check2 = false;\n        this.error_border_check = false;\n        this.allcheck3 = false;\n      }\n    },\n    checknickname() {\n      const validateNickname = /^.{1,10}$/;\n      if (!this.nickname || !validateNickname.test(this.nickname)) {\n        this.nickname_check2 = true;\n        this.error_border_check = true;\n        this.allcheck4 = true;\n      } else {\n        this.nickname_check2 = false;\n        this.error_border_check = false;\n        this.allcheck4 = false;\n      }\n    },\n    checksex() {\n      if (this.sex == null) {\n        //선택했으면\n        this.allcheck5 = true;\n      } else {\n        this.allcheck5 = false;\n      }\n    },\n    checkage_range() {\n      if (this.agegroup == null) {\n        this.allcheck6 = true;\n      } else {\n        this.allcheck6 = false;\n      }\n    },\n    checkphone() {\n      const validatephone = /^\\d{3}\\d{3,4}\\d{4}$/;\n      if (this.phone_num === '' || !validatephone.test(this.phone_num) || !this.phone_num) {\n        this.phone_check = true;\n        this.error_border_check = true;\n        this.allcheck7 = true;\n      } else {\n        this.phone_check = false;\n        this.error_border_check = false;\n        this.allcheck7 = false;\n      }\n    },\n    inputAllCheck() {\n      if (this.allcheck1 || this.allcheck2 || this.allcheck3 || this.allcheck4 || this.allcheck5 || this.allcheck6 || this.allcheck7 || this.email_check) {\n        //하나라도 입력조건이 안맞을시\n        this.allcheck = true; //버튼 비활성\n      } else {\n        this.allcheck = false;\n      }\n    },\n    emailCheckForm() {\n      axios({\n        url: \"http://localhost:3000/auth/checkemail\",\n        method: \"POST\",\n        data: {\n          email: this.email\n        }\n      }).then(async res => {\n        const validateEmail = /^[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*.[a-zA-Z]{2,3}$/i;\n        if (res.data.message == '사용가능한 이메일입니다.' && validateEmail.test(this.email)) {\n          this.emailcheck = 2;\n        } else if (res.data.message == '존재하는 이메일입니다.') {\n          this.emailcheck = 1;\n          this.allcheck = true;\n          console.log(this.allcheck);\n        } else if (!this.email) {\n          this.emailcheck = 3;\n        }\n        console.log(this.emailcheck);\n      }).catch(error => {\n        alert(error);\n      });\n    },\n    nicknameCheckForm() {\n      axios({\n        url: \"http://localhost:3000/auth/checknick\",\n        method: \"POST\",\n        data: {\n          nickname: this.nickname\n        }\n      }).then(async res => {\n        if (res.data.message == '사용가능한 닉네임입니다.' && this.nickname) {\n          console.log(res.data.message);\n          this.nicknamecheck = 2;\n        } else if (res.data.message == '존재하는 닉네임입니다.') {\n          this.nicknamecheck = 1;\n          this.allcheck = true;\n        } else if (!this.nickname) {\n          this.nicknamecheck = 3;\n        }\n      }).catch(error => {\n        alert(error);\n      });\n    },\n    joinForm() {\n      //백엔드로 회원가입 정보 전달\n      if (this.sex === 'female') {\n        this.sex = 'f';\n      } else {\n        this.sex = 'm';\n      }\n      axios({\n        url: \"http://localhost:3000/auth/join\",\n        method: \"POST\",\n        data: {\n          email: this.email,\n          password: this.password,\n          nickname: this.nickname,\n          sex: this.sex,\n          agegroup: this.agegroup,\n          phone_num: this.phone_num\n        }\n      }).then(async res => {\n        alert(res.data.message);\n        if (this.image) {\n          await this.uploadFile(this.image);\n        } else {\n          this.defaultImage(this.email);\n          window.location.href = '/';\n        }\n        // await this.uploadFile(this.image);\n      }).catch(error => {\n        alert(error);\n      });\n    },\n    async uploadFile(files) {\n      if (!files) {\n        return; // 파일이 없으면 함수 종료\n      }\n\n      window.location.href = '/';\n      let name = files.name;\n      let data = await this.$base64(files);\n      axios({\n        url: `http://localhost:3000/uploadProfile/${this.email}/${name}`,\n        method: 'POST',\n        data: {\n          \"data\": data\n        }\n      }).then(res => {\n        window.location.href = '/';\n      }).catch(error => {\n        alert(error);\n      });\n    },\n    upload() {\n      this.type = true;\n      const files = this.$refs.image.files;\n      if (files && files.length > 0) {\n        this.image = files[0]; // 사용자가 올린 이미지\n        console.log(this.image);\n        // URL.createObjectURL로 사용자가 올린 이미지를 URL로 만들어서 화면에 표시할 수 있게 한다. img 태그의 src값에 바인딩해준다\n        this.imageUploaded = URL.createObjectURL(this.image);\n      }\n    },\n    defaultImage(email) {\n      axios({\n        url: 'auth/defaultImage',\n        method: 'POST',\n        data: {\n          email\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["gnbBar","axios","defaults","baseURL","headers","post","components","data","email","password","password2","nickname","phone_num","sex","agegroup","image","imageUploaded","type","email_check","password_check","password_check2","nickname_check","sex_check","age_range_check","phone_check","error_border_check","allcheck","allcheck1","allcheck2","allcheck3","allcheck4","allcheck5","allcheck6","allcheck7","emailcheck","nicknamecheck","watch","funcWatch","methods","checkEmail","checkPassword","checkPassword2","checknickname","checksex","checkage_range","checkphone","inputAllCheck","emailCheckForm","nicknameCheckForm","console","log","movetomain","window","location","href","validateEmail","test","validatePassword","validateNickname","nickname_check2","validatephone","url","method","then","res","message","catch","error","alert","joinForm","uploadFile","defaultImage","files","name","$base64","upload","$refs","length","URL","createObjectURL"],"sources":["/Users/seoyeonju/Library/CloudStorage/OneDrive-계원예술대학교/풀스텍/weave-wego 2/vue_front/src/views/userJoin.vue"],"sourcesContent":["<template>\r\n    <gnbBar />\r\n    <div class=\"join\">\r\n        <div class=\"title-bar\">\r\n            <h5>회원가입</h5>\r\n            <form @submit.prevent=\"joinForm\">\r\n                <label class=\"title-bar-label\" for=\"file\">\r\n                    <div class=\"title-bar-btn\">+</div>\r\n                    <img v-if=\"type\" class=\"img_style\" :src=\"imageUploaded\" alt=\"올린 이미지\" />\r\n                    <img v-else id=\"img_style\" src=\"../assets/img/profileExample.png\" alt=\"올린 이미지\" />\r\n                    <br />\r\n                </label>\r\n\r\n                <input id=\"file\" type=\"file\" ref=\"image\" @change=\"upload\" maxlength=\"150\"/>\r\n            </form>\r\n\r\n\r\n        </div>\r\n        <div class=\"wrap\">\r\n            <form @submit.prevent=\"joinForm\">\r\n                <label for=\"email\">아이디</label>\r\n                <input v-model=\"email\" type=\"text\" id=\"email\" placeholder=\"이메일 입력\" :class=\"{ error_border: email_check || emailcheck != 2}\" maxlength=\"25\">\r\n                <form @submit.prevent=\"emailCheckForm\">\r\n                    <a href=\"/auth/checkemail\"><button type=\"submit\" id=\"email_check\"\r\n                            class=\"username_submit\">중복확인</button></a>\r\n                </form>\r\n                <p id=\"error\" v-if=\"email_check\">이메일주소를 정확히 입력해주세요. 예)abcd@naver.com</p>\r\n                <p id=\"error\" v-show=\"emailcheck == 1\">존재하는 이메일입니다.</p>\r\n                <p id=\"complete\" v-show=\"emailcheck == 2 && !email_check\">사용가능한 이메일입니다.</p>\r\n                <label for=\"password\">비밀번호</label>\r\n                <input v-model=\"password\" type=\"password\" id=\"password\" :class=\"{ error_border: password_check }\" placeholder=\"비밀번호 입력\" maxlength=\"15\"><br />\r\n                <p id=\"error\" v-if=\"password_check\">비밀번호를 정확히 입력해주세요.<br /> *8자리 이상 영문 대소문자, 숫자, 특수문자가 각각 1개 이상</p>\r\n                <label for=\"password_check2\">비밀번호 확인</label>\r\n                <input v-model=\"password2\" type=\"password\" id=\"password_check\" :class=\"{ error_border: password_check2 }\" placeholder=\"비밀번호 확인 입력\"><br />\r\n                <p id=\"error\" v-if=\"password_check2\">비밀번호가 일치하지 않습니다.</p>\r\n                <label for=\"nickname\">별명</label>\r\n                <input  @input=\"nickname = $event.target.value\" type=\"text\" id=\"nickname\" placeholder=\"활동명 입력\" :class=\"{ error_border: nickname_check2 || nicknamecheck != 2}\" maxlength=\"10\">\r\n                <form @submit.prevent=\"nicknameCheckForm\">\r\n                    <a href=\"/auth/checknick\"><button type=\"submit\" id=\"nickname_check\"\r\n                            class=\"username_submit\">중복확인</button></a>\r\n                </form>\r\n                <p id=\"error\" v-show=\"nicknamecheck == 1\">존재하는 닉네임입니다.</p>\r\n                <p id=\"complete\" v-show=\"nicknamecheck == 2\">사용가능한 닉네임입니다.</p>\r\n                <p id=\"error\" v-if=\"nickname_check2\">닉네임을 입력해주세요.</p>\r\n                <div class=\"gender\">\r\n                    <label for=\"sex\">성별</label>\r\n                    <input v-model=\"sex\" type='radio' name='gender' value='male' class=\"input_sex\" />남자\r\n                    <input v-model=\"sex\" type='radio' name='gender' value='female' class=\"input_sex\" />여자\r\n                </div>\r\n                <p id=\"error\" v-if=\"sex_check\">성별을 선택하세요.</p>\r\n                <div class=\"age_range\">\r\n                    <label for=\"age_range\">나이대</label>\r\n                    <input v-model=\"agegroup\" type='radio' name='agegroup' value='ten' class=\"input_sex\" />10대\r\n                    <input v-model=\"agegroup\" type='radio' name='agegroup' value='20' class=\"input_sex\" />20대\r\n                    <input v-model=\"agegroup\" type='radio' name='agegroup' value='30' class=\"input_sex\" />30대\r\n                    <input v-model=\"agegroup\" type='radio' name='agegroup' value='40' class=\"input_sex\" />40대\r\n                    <input v-model=\"agegroup\" type='radio' name='agegroup' value='50' class=\"input_sex\" />50대\r\n                    <input v-model=\"agegroup\" type='radio' name='agegroup' value='60' class=\"input_sex\" />60세 이상\r\n                </div>\r\n                <p id=\"error\" v-if=\"age_range_check\">나이대를 선택하세요.</p>\r\n                <label for=\"phone_num\">전화번호</label>\r\n                <input v-model=\"phone_num\" type=\"text\" id=\"phone_num\" placeholder=\"전화번호 입력\" :class=\"{ error_border: phone_check }\" maxlength=\"11\"><br />\r\n                <p id=\"error\" v-if=\"phone_check\">전화번호를 정확히 입력해주세요. 예)01066090043</p>\r\n                <a href=\"/auth/join\"><input type=\"submit\" :class=\"{ 'error_submit': allcheck, 'submit': !allcheck }\"\r\n                        :disabled=\"allcheck\" id=\"login\" value=\"가입하기\"></a>\r\n\r\n            </form>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport gnbBar from '../components/gnbBar.vue'\r\n\r\nimport axios from 'axios'\r\naxios.defaults.baseURL = 'http://localhost:3000';\r\naxios.defaults.headers.post['Content-Type'] = 'application/json;charset=utf-8';\r\naxios.defaults.headers.post['Access-Control-Allow-Origin'] = '*';\r\n\r\nexport default {\r\n    components: { gnbBar },\r\n    data() {\r\n        return {\r\n\r\n            email: '',\r\n            password: '',\r\n            password2: '',\r\n            nickname: '',\r\n            phone_num: '',\r\n            sex: '',\r\n            agegroup: '',\r\n            image: '',\r\n            imageUploaded: null,\r\n            type: false,\r\n\r\n            email_check: false,\r\n            password_check: false,\r\n            password_check2: false,\r\n            nickname_check: false,\r\n            sex_check: false,\r\n            age_range_check: false,\r\n            phone_check: false,\r\n            error_border_check: false,\r\n\r\n            allcheck: true,\r\n            allcheck1: true,\r\n            allcheck2: true,\r\n            allcheck3: true,\r\n            allcheck4: true,\r\n            allcheck5: true,\r\n            allcheck6: true,\r\n            allcheck7: true,\r\n            emailcheck: 3,\r\n            nicknamecheck: 3,\r\n\r\n            \r\n        };\r\n    },\r\n    watch: {\r\n        'email': function () {\r\n            this.funcWatch()\r\n        },\r\n        'password': function () {\r\n            this.funcWatch()\r\n        },\r\n        'password2': function () {\r\n            this.funcWatch()\r\n        },\r\n        'nickname': function () {\r\n            this.funcWatch()\r\n        },\r\n        'sex': function () {\r\n            this.funcWatch()\r\n        },\r\n        'agegroup': function () {\r\n            this.funcWatch()\r\n        },\r\n        'phone_num': function () {\r\n            this.funcWatch()\r\n        }\r\n\r\n    },\r\n    methods: {\r\n\r\n        funcWatch() {\r\n            this.checkEmail()\r\n            this.checkPassword()\r\n            this.checkPassword2()\r\n            this.checknickname()\r\n            this.checksex()\r\n            this.checkage_range()\r\n            this.checkphone()\r\n            this.inputAllCheck()\r\n            this.emailCheckForm()\r\n            this.nicknameCheckForm()\r\n            console.log(this.allcheck);\r\n        },\r\n        movetomain() {\r\n            window.location.href = '/';\r\n        },\r\n        checkEmail() {\r\n            // 이메일 형식 검사\r\n            const validateEmail = /^[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*.[a-zA-Z]{2,3}$/i;\r\n\r\n            if (this.email === '' || !validateEmail.test(this.email) || !this.email) {\r\n                this.email_check = true;\r\n                this.error_border_check = true;\r\n                this.allcheck1 = true; //입력조건 안맞을시 true\r\n            } else {\r\n                this.email_check = false;\r\n                this.error_border_check = false;\r\n                this.allcheck1 = false;\r\n            }\r\n        },\r\n        checkPassword() {\r\n            // 최소 8자리 이상 영문 대소문자, 숫자, 특수문자가 각각 1개 이상\r\n            const validatePassword = /^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$ %^&*-]).{8,}$/\r\n\r\n            if (this.password === '' || !validatePassword.test(this.password) || !this.password) {\r\n                this.password_check = true;\r\n                this.error_border_check = true;\r\n                this.allcheck2 = true;\r\n            } else {\r\n                this.password_check = false;\r\n                this.error_border_check = false;\r\n                this.allcheck2 = false;\r\n            }\r\n        },\r\n        checkPassword2() {\r\n            if (this.password !== this.password2) {\r\n                this.password_check2 = true;\r\n                this.error_border_check = true;\r\n                this.allcheck3 = true;\r\n            } else {\r\n                this.password_check2 = false;\r\n                this.error_border_check = false;\r\n                this.allcheck3 = false;\r\n            }\r\n        },\r\n        checknickname() {\r\n\r\n            const validateNickname = /^.{1,10}$/;\r\n            if (!this.nickname || !validateNickname.test(this.nickname)) {\r\n                this.nickname_check2 = true;\r\n                this.error_border_check = true;\r\n                this.allcheck4 = true;\r\n            } else {\r\n                this.nickname_check2 = false;\r\n                this.error_border_check = false;\r\n                this.allcheck4 = false;\r\n            }\r\n        },\r\n        checksex() {\r\n            if (this.sex == null) { //선택했으면\r\n                this.allcheck5 = true;\r\n            } else {\r\n                this.allcheck5 = false;\r\n            }\r\n        },\r\n        checkage_range() {\r\n            if (this.agegroup == null) {\r\n                this.allcheck6 = true;\r\n            } else {\r\n                this.allcheck6 = false;\r\n            }\r\n        },\r\n        checkphone() {\r\n            const validatephone = /^\\d{3}\\d{3,4}\\d{4}$/;\r\n\r\n            if (this.phone_num === '' || !validatephone.test(this.phone_num) || !this.phone_num) {\r\n                this.phone_check = true;\r\n                this.error_border_check = true;\r\n                this.allcheck7 = true;\r\n            } else {\r\n                this.phone_check = false;\r\n                this.error_border_check = false;\r\n                this.allcheck7 = false;\r\n            }\r\n        },\r\n        inputAllCheck() {\r\n            if (this.allcheck1 || this.allcheck2 || this.allcheck3 || this.allcheck4 || this.allcheck5 || this.allcheck6 || this.allcheck7 || this.email_check) { //하나라도 입력조건이 안맞을시\r\n                this.allcheck = true; //버튼 비활성\r\n\r\n            } else {\r\n                this.allcheck = false;\r\n\r\n            }\r\n        },\r\n        emailCheckForm() {\r\n            axios({\r\n                url: \"http://localhost:3000/auth/checkemail\",\r\n                method: \"POST\",\r\n                data: {\r\n                    email: this.email,\r\n                },\r\n            }).then(async (res) => {\r\n                const validateEmail = /^[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*.[a-zA-Z]{2,3}$/i;\r\n\r\n                if (res.data.message == '사용가능한 이메일입니다.' && validateEmail.test(this.email)) {\r\n                    this.emailcheck = 2;\r\n                } else if (res.data.message == '존재하는 이메일입니다.') {\r\n                    this.emailcheck = 1;\r\n                    this.allcheck = true;\r\n                    console.log(this.allcheck);\r\n                } else if (!this.email) {\r\n                    this.emailcheck = 3;\r\n                }\r\n\r\n\r\n\r\n                console.log(this.emailcheck);\r\n\r\n            }).catch(error => {\r\n                alert(error);\r\n            })\r\n        },\r\n        nicknameCheckForm() {\r\n            axios({\r\n                url: \"http://localhost:3000/auth/checknick\",\r\n                method: \"POST\",\r\n                data: {\r\n                    nickname: this.nickname,\r\n                },\r\n            }).then(async (res) => {\r\n                if (res.data.message == '사용가능한 닉네임입니다.' && this.nickname) {\r\n                    console.log(res.data.message);\r\n                    this.nicknamecheck = 2;\r\n                } else if (res.data.message == '존재하는 닉네임입니다.') {\r\n                    this.nicknamecheck = 1;\r\n                    this.allcheck = true;\r\n                } else if (!this.nickname) {\r\n                    this.nicknamecheck = 3;\r\n                }\r\n            }).catch(error => {\r\n                alert(error);\r\n            })\r\n        },\r\n        joinForm() { //백엔드로 회원가입 정보 전달\r\n            if (this.sex === 'female') {\r\n                this.sex = 'f';\r\n            } else {\r\n                this.sex = 'm';\r\n            }\r\n\r\n            axios({\r\n                url: \"http://localhost:3000/auth/join\",\r\n                method: \"POST\",\r\n                data: {\r\n                    email: this.email,\r\n                    password: this.password,\r\n                    nickname: this.nickname,\r\n                    sex: this.sex,\r\n                    agegroup: this.agegroup,\r\n                    phone_num: this.phone_num,\r\n\r\n                },\r\n            }).then(async (res) => {\r\n                alert(res.data.message);\r\n                if(this.image) {\r\n                    await this.uploadFile(this.image);\r\n                } else {\r\n                    this.defaultImage(this.email);\r\n                    window.location.href='/';\r\n                }\r\n                // await this.uploadFile(this.image);\r\n            }).catch(error => {\r\n                alert(error);\r\n            })\r\n        },\r\n        async uploadFile(files) {\r\n            if (!files) {\r\n                return; // 파일이 없으면 함수 종료\r\n            }\r\n            window.location.href = '/';\r\n            let name = files.name;\r\n            let data = await this.$base64(files);\r\n\r\n            axios({\r\n                url: `http://localhost:3000/uploadProfile/${this.email}/${name}`,\r\n                method: 'POST',\r\n                data: {\r\n                    \"data\": data\r\n                }\r\n            }).then(res => {\r\n                window.location.href = '/';\r\n            }).catch(error => {\r\n                alert(error);\r\n            })\r\n        },\r\n        upload() {\r\n            this.type = true;\r\n            const files = this.$refs.image.files;\r\n\r\n            if (files && files.length > 0) {\r\n                this.image = files[0]; // 사용자가 올린 이미지\r\n                console.log(this.image);\r\n                // URL.createObjectURL로 사용자가 올린 이미지를 URL로 만들어서 화면에 표시할 수 있게 한다. img 태그의 src값에 바인딩해준다\r\n                this.imageUploaded = URL.createObjectURL(this.image);\r\n\r\n\r\n            }\r\n        },\r\n        defaultImage(email) {\r\n            axios({\r\n                url: 'auth/defaultImage',\r\n                method: 'POST',\r\n                data: {\r\n                    email\r\n                }\r\n            })\r\n        }\r\n    }\r\n}\r\n</script> \r\n\r\n<style scoped>\r\n.join {\r\n    padding-top: 5%;\r\n    width: 100%;\r\n    height: 100%;\r\n    margin: 0;\r\n    background-color: white;\r\n    font-family: arial;\r\n    font-size: 14px;\r\n    -webkit-font-smoothing: antialiased;\r\n    -moz-osx-font-smoothing: grayscale;\r\n}\r\n\r\n#file {\r\n    display: none;\r\n}\r\n\r\n.title-bar-label {\r\n    width: 1%;\r\n    cursor: pointer;\r\n}\r\n\r\n.img_style {\r\n    border: 2px solid black;\r\n    border-radius: 50%;\r\n}\r\n\r\ninput[type=\"file\"] {\r\n    position: absolute;\r\n    width: 22px;\r\n    height: 22px;\r\n    left: 50%;\r\n    top: 70%;\r\n    line-height: 20x;\r\n    border: 2px solid black;\r\n    color: white;\r\n    font-size: 22px;\r\n    background-color: #388265;\r\n    border-radius: 50%;\r\n}\r\n\r\n.title-bar {\r\n    text-align: center;\r\n    color: #333333;\r\n    font-size: 30px;\r\n    padding-bottom: 10px;\r\n    position: relative;\r\n}\r\n\r\n.title-bar-btn {\r\n    position: absolute;\r\n    width: 22px;\r\n    height: 22px;\r\n    left: 50%;\r\n    top: 70%;\r\n    text-align: center;\r\n    line-height: 20px;\r\n    border: 2px solid black;\r\n    color: white;\r\n    font-size: 22px;\r\n\r\n    background-color: #388265;\r\n    border-radius: 50%;\r\n}\r\n\r\n.title-bar h5 {\r\n    margin: 24px 0;\r\n}\r\n\r\n.title-bar img {\r\n    width: 50px;\r\n    height: 50px;\r\n}\r\n\r\n.wrap {\r\n    background-color: #ffffff;\r\n    padding: 1%;\r\n    width: 35%;\r\n    min-width: 350px;\r\n    margin: 0 auto;\r\n    border-radius: 6px;\r\n    box-shadow: 0 0 5px #ccc;\r\n    border: 1px solid #fff;\r\n}\r\n\r\nlabel {\r\n    margin-right: 3%;\r\n    display: inline-block;\r\n    width: 110px;\r\n    text-align: right;\r\n}\r\n\r\ninput {\r\n    width: 70%;\r\n    margin-bottom: 1%;\r\n    padding: 1%;\r\n    border-radius: 6px;\r\n    border: 1px solid #efefef;\r\n    font-size: 15px;\r\n    transition: all .2s ease-in-out;\r\n}\r\n\r\n\r\n\r\n.username_submit {\r\n    font-size: 14px;\r\n    background-color: #388265;\r\n    color: white;\r\n    width: 15%;\r\n    margin-left: 5%;\r\n    border-radius: 4px;\r\n    border: none;\r\n    display: none;\r\n}\r\n\r\ninput:focus {\r\n    outline: none;\r\n    border-color: #A5C2B6;\r\n    box-shadow: 0 0 10px #A5C2B6;\r\n    transition: all .2s ease-in-out;\r\n}\r\n\r\ninput.submit {\r\n    width: 100%;\r\n    padding: 3%;\r\n    border-radius: 6px;\r\n    border: 1px solid #388265;\r\n    font-size: 15px;\r\n    background-color: #388265;\r\n    color: #fff;\r\n    margin-top: 25px;\r\n    transition: all .2s ease-in-out;\r\n}\r\n\r\ninput.submit:hover {\r\n    width: 100%;\r\n    padding: 3%;\r\n    border-radius: 6px;\r\n    font-size: 15px;\r\n    color: #fff;\r\n    margin-top: 25px;\r\n    transition: all .2s ease-in-out;\r\n}\r\n\r\n.gender,\r\n.age_range {\r\n    width: 100%;\r\n    display: block;\r\n    justify-content: center;\r\n    align-items: center;\r\n    padding: 1%;\r\n    margin-left: -1%;\r\n    font-size: 14px;\r\n\r\n}\r\n\r\n.input_sex {\r\n    width: 14px;\r\n    height: 14px;\r\n    transition: all .2s ease-in-out;\r\n}\r\n\r\n#error {\r\n    color: red;\r\n    margin-bottom: 2%;\r\n    margin-left: 24%;\r\n    font-size: 12px;\r\n}\r\n#complete {\r\n    color: #388265;\r\n    margin-bottom: 2%;\r\n    margin-left: 24%;\r\n    font-size: 12px;\r\n}\r\n\r\n.error_border:focus {\r\n    border-color: red;\r\n    box-shadow: none;\r\n}\r\n\r\n.error_submit {\r\n    width: 100%;\r\n    padding: 3%;\r\n    border-radius: 6px;\r\n    border: 1px solid gray;\r\n    font-size: 15px;\r\n    background-color: grey;\r\n    color: darkgray;\r\n    margin-top: 25px;\r\n    transition: all .2s ease-in-out;\r\n}\r\n</style>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}