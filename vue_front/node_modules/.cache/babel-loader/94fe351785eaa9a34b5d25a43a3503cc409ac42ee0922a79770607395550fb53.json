{"ast":null,"code":"import { ref } from \"vue\";\nimport gnbBarLogin from \"../components/gnbBarLogin.vue\";\nimport TabsWrapper from \"../components/TabsWrapper.vue\";\nimport TabItem from \"../components/TabItem.vue\";\nimport boardList from \"../components/boardList.vue\";\nimport commentList from \"../components/commentList.vue\";\nimport axios from \"axios\";\naxios.defaults.baseURL = \"http://localhost:3000\";\naxios.defaults.headers.post[\"Content-Type\"] = \"application/json;charset=utf-8\";\naxios.defaults.headers.post[\"Access-Control-Allow-Origin\"] = \"*\";\nexport default {\n  components: {\n    gnbBarLogin,\n    TabsWrapper,\n    TabItem,\n    boardList,\n    commentList\n  },\n  data() {\n    return {\n      email: \"\",\n      nick: \"\",\n      image: \"\",\n      provider: \"\",\n      editMode: false,\n      myPageNick: {}\n    };\n  },\n  // --------------------------------------------------------------------------------------------------------------------------------------\n  created() {\n    this.getMyPageData();\n  },\n  mounted() {\n    this.email = localStorage.getItem(\"userID\"), this.nick = localStorage.getItem(\"userNick\"), this.image = localStorage.getItem(\"userImage\"), this.provider = localStorage.getItem(\"userProvider\");\n  },\n  methods: {\n    toggleEditMode() {\n      this.editMode = true;\n    },\n    deleteComment() {\n      // 삭제 로직을 구현\n    },\n    cancelEdit() {\n      this.editMode = false;\n    },\n    async getMyPageData() {\n      //마이페이지 내 정보----------------------------------------------------------------------------------------------------------------------\n      try {\n        let myPageNick = await axios.post(\"/mypage/myPage\", {\n          userEmail: \"user1@example.com\" // userEmail 값을 적절히 설정\n        });\n        //this.myPageData = myPageData.data; // 서버에서 받은 데이터를 myPageData에 할당\n        console.log(this.myPageNick);\n      } catch (error) {\n        console.error(error);\n      }\n    }\n  },\n  setup() {\n    const boardListData = ref([{\n      BRD_ID: 0,\n      BRD_HASHTAG: \"#종로구 #중구 #식사 #전시\",\n      BRD_TITLE: \"서울 실내 데이트 코스 추천!\",\n      BRD_CREATED_AT: \"2023-06-22\",\n      likecount: 10,\n      BRD_VIEWCOUNT: 100,\n      BRD_OPEN: \"공개\",\n      checked: false\n    }, {\n      BRD_ID: 1,\n      BRD_HASHTAG: \"#서초구 #강남구 #카페 #쇼룸,편집샵\",\n      BRD_TITLE: \"테스트 제목2\",\n      BRD_CREATED_AT: \"2023-06-22\",\n      likecount: 20,\n      BRD_VIEWCOUNT: 200,\n      BRD_OPEN: \"비공개\",\n      checked: false\n    }, {\n      BRD_ID: 2,\n      BRD_HASHTAG: \"#마포구 #식사 #전시\",\n      BRD_TITLE: \"테스트 제목3\",\n      BRD_CREATED_AT: \"2023-06-22\",\n      likecount: 30,\n      BRD_VIEWCOUNT: 300,\n      BRD_OPEN: \"공개\",\n      checked: false\n    }]);\n    const commentListData = ref([{\n      COM_ID: 0,\n      COM_NUM: 0,\n      COM_TITLE: \"댓글이 포함된 본문의 제목\",\n      COM_CREATED_AT: \"2023-06-26\",\n      COM_COMMENT: \"댓글내용댓글내용댓글애용\"\n    }, {\n      COM_ID: 1,\n      COM_NUM: 1,\n      COM_TITLE: \"댓글이 포함된 본문의 제목1\",\n      COM_CREATED_AT: \"2023-06-26\",\n      COM_COMMENT: \"댓글내용댓글내용댓글애용1\"\n    }, {\n      COM_ID: 2,\n      COM_NUM: 2,\n      COM_TITLE: \"댓글이 포함된 본문의 제목2\",\n      COM_CREATED_AT: \"2023-06-26\",\n      COM_COMMENT: \"댓글내용댓글내용댓글애용2\"\n    }]);\n    return {\n      boardList: boardListData,\n      commentList: commentListData\n    };\n  }\n};","map":{"version":3,"names":["ref","gnbBarLogin","TabsWrapper","TabItem","boardList","commentList","axios","defaults","baseURL","headers","post","components","data","email","nick","image","provider","editMode","myPageNick","created","getMyPageData","mounted","localStorage","getItem","methods","toggleEditMode","deleteComment","cancelEdit","userEmail","console","log","error","setup","boardListData","BRD_ID","BRD_HASHTAG","BRD_TITLE","BRD_CREATED_AT","likecount","BRD_VIEWCOUNT","BRD_OPEN","checked","commentListData","COM_ID","COM_NUM","COM_TITLE","COM_CREATED_AT","COM_COMMENT"],"sources":["/Users/seoyeonju/Library/CloudStorage/OneDrive-계원예술대학교/풀스텍/weave-wego 2/vue_front/src/views/myPage.vue"],"sourcesContent":["<style src=\"../assets/css/mypage.css\"></style>\n<style src=\"../assets/css/reset.css\"></style>\n<template>\n  <gnbBarLogin />\n\n  <section class=\"mypage_profile_set\">\n    <!-- ----------------------------------------------------------------------------------------------------------------------------------- -->\n    <h1 class=\"mypage_title\">마이페이지</h1>\n    <div class=\"myprofile\">\n      <div class=\"profileimg\">\n        <img\n          class=\"profile\"\n          src=\"../assets/img/profileExample.png\"\n          alt=\"profileExample\"\n        />\n        <a href=\"/updateprofile\"\n          ><img\n            class=\"setting_icon\"\n            src=\"../assets/img/setting_btn.png\"\n            alt=\"setting_btn\"\n        /></a>\n      </div>\n      <div class=\"nickname_email\">\n        <div class=\"nickname\">{{ myPageNick.USER_NICKNAME }}</div>\n        <div class=\"email\">maengoo9@gmail.com</div>\n      </div>\n    </div>\n  </section>\n  <section>\n    <TabsWrapper>\n      <TabItem title=\"내코스\" @click=\"\">\n        <div>\n          <button v-if=\"!editMode\" class=\"edit\" @click=\"toggleEditMode\">\n            &nbsp;&nbsp;편집&nbsp;&nbsp;\n          </button>\n          <button v-if=\"editMode\" class=\"delete\" @click=\"deleteComment\">\n            &nbsp;&nbsp;삭제&nbsp;&nbsp;\n          </button>\n          <button v-if=\"editMode\" class=\"cancel\" @click=\"cancelEdit\">\n            &nbsp;&nbsp;취소&nbsp;&nbsp;\n          </button>\n        </div>\n\n        <div class=\"course\">\n          <boardList\n            v-for=\"item in boardList\"\n            :boardList=\"item\"\n            :key=\"item.BRD_ID\"\n            :editMode=\"editMode\"\n          >\n          </boardList>\n        </div>\n      </TabItem>\n      <TabItem title=\"최근에 본 코스\">\n        <div class=\"course\">\n          <boardList\n            v-for=\"item in boardList\"\n            :boardList=\"item\"\n            :key=\"item.id\"\n            :hideBrdOpen=\"true\"\n          /></div\n      ></TabItem>\n      <TabItem title=\"좋아요 리스트\">\n        <div class=\"course\">\n          <boardList\n            v-for=\"item in boardList\"\n            :boardList=\"item\"\n            :key=\"item.id\"\n            :hideBrdOpen=\"true\"\n          /></div\n      ></TabItem>\n      <TabItem title=\"내가 쓴 댓글\"\n        ><button class=\"comment_edit\">&nbsp;&nbsp;편집&nbsp;&nbsp;</button>\n\n        <div class=\"commentlist\">\n          <commentList\n            v-for=\"item in commentList\"\n            :commentList=\"item\"\n            :key=\"item.id\"\n          />\n        </div>\n      </TabItem>\n    </TabsWrapper>\n  </section>\n</template>\n\n<script>\nimport { ref } from \"vue\";\nimport gnbBarLogin from \"../components/gnbBarLogin.vue\";\nimport TabsWrapper from \"../components/TabsWrapper.vue\";\nimport TabItem from \"../components/TabItem.vue\";\nimport boardList from \"../components/boardList.vue\";\nimport commentList from \"../components/commentList.vue\";\nimport axios from \"axios\";\naxios.defaults.baseURL = \"http://localhost:3000\";\naxios.defaults.headers.post[\"Content-Type\"] = \"application/json;charset=utf-8\";\naxios.defaults.headers.post[\"Access-Control-Allow-Origin\"] = \"*\";\n\nexport default {\n  components: {\n    gnbBarLogin,\n    TabsWrapper,\n    TabItem,\n    boardList,\n    commentList,\n  },\n  data() {\n    return {\n      email: \"\",\n      nick: \"\",\n      image: \"\",\n      provider: \"\",\n      editMode: false,\n      myPageNick: {},\n    };\n  },\n  // --------------------------------------------------------------------------------------------------------------------------------------\n  created() {\n    this.getMyPageData();\n  },\n  mounted() {\n    (this.email = localStorage.getItem(\"userID\")),\n      (this.nick = localStorage.getItem(\"userNick\")),\n      (this.image = localStorage.getItem(\"userImage\")),\n      (this.provider = localStorage.getItem(\"userProvider\"));\n  },\n  methods: {\n    toggleEditMode() {\n      this.editMode = true;\n    },\n    deleteComment() {\n      // 삭제 로직을 구현\n    },\n    cancelEdit() {\n      this.editMode = false;\n    },\n    async getMyPageData() {\n      //마이페이지 내 정보----------------------------------------------------------------------------------------------------------------------\n      try {\n        let myPageNick = await axios.post(\"/mypage/myPage\", {\n          userEmail: \"user1@example.com\", // userEmail 값을 적절히 설정\n        });\n        //this.myPageData = myPageData.data; // 서버에서 받은 데이터를 myPageData에 할당\n        console.log(this.myPageNick);\n      } catch (error) {\n        console.error(error);\n      }\n    },\n  },\n  setup() {\n    const boardListData = ref([\n      {\n        BRD_ID: 0,\n        BRD_HASHTAG: \"#종로구 #중구 #식사 #전시\",\n        BRD_TITLE: \"서울 실내 데이트 코스 추천!\",\n        BRD_CREATED_AT: \"2023-06-22\",\n        likecount: 10,\n        BRD_VIEWCOUNT: 100,\n        BRD_OPEN: \"공개\",\n        checked: false,\n      },\n      {\n        BRD_ID: 1,\n        BRD_HASHTAG: \"#서초구 #강남구 #카페 #쇼룸,편집샵\",\n        BRD_TITLE: \"테스트 제목2\",\n        BRD_CREATED_AT: \"2023-06-22\",\n        likecount: 20,\n        BRD_VIEWCOUNT: 200,\n        BRD_OPEN: \"비공개\",\n        checked: false,\n      },\n      {\n        BRD_ID: 2,\n        BRD_HASHTAG: \"#마포구 #식사 #전시\",\n        BRD_TITLE: \"테스트 제목3\",\n        BRD_CREATED_AT: \"2023-06-22\",\n        likecount: 30,\n        BRD_VIEWCOUNT: 300,\n        BRD_OPEN: \"공개\",\n        checked: false,\n      },\n    ]);\n    const commentListData = ref([\n      {\n        COM_ID: 0,\n        COM_NUM: 0,\n        COM_TITLE: \"댓글이 포함된 본문의 제목\",\n        COM_CREATED_AT: \"2023-06-26\",\n        COM_COMMENT: \"댓글내용댓글내용댓글애용\",\n      },\n      {\n        COM_ID: 1,\n        COM_NUM: 1,\n        COM_TITLE: \"댓글이 포함된 본문의 제목1\",\n        COM_CREATED_AT: \"2023-06-26\",\n        COM_COMMENT: \"댓글내용댓글내용댓글애용1\",\n      },\n      {\n        COM_ID: 2,\n        COM_NUM: 2,\n        COM_TITLE: \"댓글이 포함된 본문의 제목2\",\n        COM_CREATED_AT: \"2023-06-26\",\n        COM_COMMENT: \"댓글내용댓글내용댓글애용2\",\n      },\n    ]);\n\n    return {\n      boardList: boardListData,\n      commentList: commentListData,\n    };\n  },\n};\n</script>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}